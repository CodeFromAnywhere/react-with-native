[
  {
    "createdAt": 1667380936526,
    "updatedAt": 1667380936526,
    "deletedAt": 0,
    "createdFirstAt": 1667380936526,
    "functionName": "getDatabaseMenu",
    "tsFunctionId": "mrynromkdhmeekzmxhbvzyyd",
    "inputParameters": [],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": {
      "menu": [
        {
          "name": "Device",
          "slug": "Device",
          "rows": 0
        },
        {
          "name": "Group",
          "slug": "Group",
          "rows": 0
        },
        {
          "name": "Page visit",
          "slug": "PageVisit",
          "rows": 0
        },
        {
          "name": "Peer message",
          "slug": "PeerMessage",
          "rows": 0
        },
        {
          "name": "Person",
          "slug": "Person",
          "rows": 0
        },
        {
          "name": "Person information",
          "slug": "PersonInformation",
          "rows": 0
        },
        {
          "name": "Person information value",
          "slug": "PersonInformationValue",
          "rows": 0
        },
        {
          "name": "Person platform connection",
          "slug": "PersonPlatformConnection",
          "rows": 0
        },
        {
          "name": "Platform",
          "slug": "Platform",
          "rows": 0
        },
        {
          "name": "Interest",
          "slug": "Interest",
          "rows": 0
        },
        {
          "name": "Media channel",
          "slug": "MediaChannel",
          "rows": 0
        },
        {
          "name": "Media credentail",
          "slug": "MediaCredentail",
          "rows": 0
        },
        {
          "name": "Media post",
          "slug": "MediaPost",
          "rows": 0
        },
        {
          "name": "Postable",
          "slug": "Postable",
          "rows": 0
        },
        {
          "name": "Bundle config",
          "slug": "BundleConfig",
          "rows": 0
        },
        {
          "name": "Function execution",
          "slug": "FunctionExecution",
          "rows": 0
        },
        {
          "name": "Markdown file config",
          "slug": "MarkdownFileConfig",
          "rows": 0
        },
        {
          "name": "Operation config",
          "slug": "OperationConfig",
          "rows": 0
        },
        {
          "name": "Operation index",
          "slug": "OperationIndex",
          "rows": 0
        },
        {
          "name": "Package json",
          "slug": "PackageJson",
          "rows": 0
        },
        {
          "name": "Social media call to action",
          "slug": "SocialMediaCallToAction",
          "rows": 0
        },
        {
          "name": "Ts build error",
          "slug": "TsBuildError",
          "rows": 0
        },
        {
          "name": "Ts comment",
          "slug": "TsComment",
          "rows": 0
        },
        {
          "name": "Ts config",
          "slug": "TsConfig",
          "rows": 0
        },
        {
          "name": "Ts export",
          "slug": "TsExport",
          "rows": 0
        },
        {
          "name": "Ts function",
          "slug": "TsFunction",
          "rows": 0
        },
        {
          "name": "Ts import",
          "slug": "TsImport",
          "rows": 0
        },
        {
          "name": "Ts interface",
          "slug": "TsInterface",
          "rows": 0
        },
        {
          "name": "Ts lint warning",
          "slug": "TsLintWarning",
          "rows": 0
        },
        {
          "name": "Ts variable",
          "slug": "TsVariable",
          "rows": 0
        },
        {
          "name": "Website call to action",
          "slug": "WebsiteCallToAction",
          "rows": 0
        },
        {
          "name": "Address",
          "slug": "Address",
          "rows": 0
        },
        {
          "name": "Area",
          "slug": "Area",
          "rows": 0
        },
        {
          "name": "City",
          "slug": "City",
          "rows": 0
        },
        {
          "name": "Country",
          "slug": "Country",
          "rows": 0
        },
        {
          "name": "Location",
          "slug": "Location",
          "rows": 0
        },
        {
          "name": "Kvmd word",
          "slug": "KvmdWord",
          "rows": 0
        },
        {
          "name": "Markdown word",
          "slug": "MarkdownWord",
          "rows": 0
        },
        {
          "name": "Nepali english translation matrix",
          "slug": "NepaliEnglishTranslationMatrix",
          "rows": 0
        },
        {
          "name": "Statement",
          "slug": "Statement",
          "rows": 0
        },
        {
          "name": "Toki pona matrix",
          "slug": "TokiPonaMatrix",
          "rows": 0
        },
        {
          "name": "Translation",
          "slug": "Translation",
          "rows": 0
        },
        {
          "name": "Word",
          "slug": "Word",
          "rows": 0
        },
        {
          "name": "Word category",
          "slug": "WordCategory",
          "rows": 0
        },
        {
          "name": "Word matrix",
          "slug": "WordMatrix",
          "rows": 0
        },
        {
          "name": "Slug model type",
          "slug": "SlugModelType",
          "rows": 0
        },
        {
          "name": "App developer",
          "slug": "AppDeveloper",
          "rows": 0
        },
        {
          "name": "Assignment",
          "slug": "Assignment",
          "rows": 0
        },
        {
          "name": "Bag",
          "slug": "Bag",
          "rows": 0
        },
        {
          "name": "Calendar",
          "slug": "Calendar",
          "rows": 0
        },
        {
          "name": "Data point",
          "slug": "DataPoint",
          "rows": 0
        },
        {
          "name": "Deliverable",
          "slug": "Deliverable",
          "rows": 0
        },
        {
          "name": "Diary",
          "slug": "Diary",
          "rows": 0
        },
        {
          "name": "Feeling",
          "slug": "Feeling",
          "rows": 0
        },
        {
          "name": "Feeling log",
          "slug": "FeelingLog",
          "rows": 0
        },
        {
          "name": "Folder",
          "slug": "Folder",
          "rows": 0
        },
        {
          "name": "Host",
          "slug": "Host",
          "rows": 0
        },
        {
          "name": "Inventory",
          "slug": "Inventory",
          "rows": 0
        },
        {
          "name": "Item",
          "slug": "Item",
          "rows": 0
        },
        {
          "name": "Item category",
          "slug": "ItemCategory",
          "rows": 0
        },
        {
          "name": "Kvmd shortcut",
          "slug": "KvmdShortcut",
          "rows": 0
        },
        {
          "name": "Label",
          "slug": "Label",
          "rows": 0
        },
        {
          "name": "Light",
          "slug": "Light",
          "rows": 0
        },
        {
          "name": "Listing",
          "slug": "Listing",
          "rows": 0
        },
        {
          "name": "Login credential",
          "slug": "LoginCredential",
          "rows": 0
        },
        {
          "name": "Material",
          "slug": "Material",
          "rows": 0
        },
        {
          "name": "Message preset",
          "slug": "MessagePreset",
          "rows": 0
        },
        {
          "name": "Progress report",
          "slug": "ProgressReport",
          "rows": 0
        },
        {
          "name": "Question",
          "slug": "Question",
          "rows": 0
        },
        {
          "name": "Reservation",
          "slug": "Reservation",
          "rows": 0
        },
        {
          "name": "Resource",
          "slug": "Resource",
          "rows": 0
        },
        {
          "name": "Shit",
          "slug": "Shit",
          "rows": 0
        },
        {
          "name": "Shit log",
          "slug": "ShitLog",
          "rows": 0
        },
        {
          "name": "Shopping list",
          "slug": "ShoppingList",
          "rows": 0
        },
        {
          "name": "Shortcut",
          "slug": "Shortcut",
          "rows": 0
        },
        {
          "name": "Student",
          "slug": "Student",
          "rows": 0
        },
        {
          "name": "Student 2",
          "slug": "Student2",
          "rows": 0
        },
        {
          "name": "Task error",
          "slug": "TaskError",
          "rows": 0
        },
        {
          "name": "Thing",
          "slug": "Thing",
          "rows": 0
        },
        {
          "name": "Todo file",
          "slug": "TodoFile",
          "rows": 0
        },
        {
          "name": "Trackable",
          "slug": "Trackable",
          "rows": 0
        },
        {
          "name": "User",
          "slug": "User",
          "rows": 0
        },
        {
          "name": "User credential",
          "slug": "UserCredential",
          "rows": 0
        },
        {
          "name": "Jeep type",
          "slug": "JeepType",
          "rows": 0
        },
        {
          "name": "Location type",
          "slug": "LocationType",
          "rows": 0
        },
        {
          "name": "Activity",
          "slug": "Activity",
          "rows": 0
        },
        {
          "name": "Company requirement",
          "slug": "CompanyRequirement",
          "rows": 0
        },
        {
          "name": "Company size",
          "slug": "CompanySize",
          "rows": 0
        },
        {
          "name": "Company type",
          "slug": "CompanyType",
          "rows": 0
        },
        {
          "name": "Company",
          "slug": "Company",
          "rows": 0
        },
        {
          "name": "Contact information",
          "slug": "ContactInformation",
          "rows": 0
        },
        {
          "name": "Contribution",
          "slug": "Contribution",
          "rows": 0
        },
        {
          "name": "Esg metric",
          "slug": "EsgMetric",
          "rows": 0
        },
        {
          "name": "Product category",
          "slug": "ProductCategory",
          "rows": 0
        },
        {
          "name": "Product",
          "slug": "Product",
          "rows": 0
        },
        {
          "name": "Proof state",
          "slug": "ProofState",
          "rows": 0
        },
        {
          "name": "Proof",
          "slug": "Proof",
          "rows": 0
        },
        {
          "name": "Sustainability plan",
          "slug": "SustainabilityPlan",
          "rows": 0
        },
        {
          "name": "Value chain phase",
          "slug": "ValueChainPhase",
          "rows": 0
        }
      ]
    },
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": 0
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -2
      }
    ],
    "id": "ofnpbuvmxddasbmnucxpicjh"
  },
  {
    "createdAt": 1667380937046,
    "updatedAt": 1667380937046,
    "deletedAt": 0,
    "createdFirstAt": 1667380937046,
    "functionName": "getDatabaseMenu",
    "tsFunctionId": "mrynromkdhmeekzmxhbvzyyd",
    "inputParameters": [],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": {
      "menu": [
        {
          "name": "Device",
          "slug": "Device",
          "rows": 0
        },
        {
          "name": "Group",
          "slug": "Group",
          "rows": 0
        },
        {
          "name": "Page visit",
          "slug": "PageVisit",
          "rows": 0
        },
        {
          "name": "Peer message",
          "slug": "PeerMessage",
          "rows": 0
        },
        {
          "name": "Person",
          "slug": "Person",
          "rows": 0
        },
        {
          "name": "Person information",
          "slug": "PersonInformation",
          "rows": 0
        },
        {
          "name": "Person information value",
          "slug": "PersonInformationValue",
          "rows": 0
        },
        {
          "name": "Person platform connection",
          "slug": "PersonPlatformConnection",
          "rows": 0
        },
        {
          "name": "Platform",
          "slug": "Platform",
          "rows": 0
        },
        {
          "name": "Interest",
          "slug": "Interest",
          "rows": 0
        },
        {
          "name": "Media channel",
          "slug": "MediaChannel",
          "rows": 0
        },
        {
          "name": "Media credentail",
          "slug": "MediaCredentail",
          "rows": 0
        },
        {
          "name": "Media post",
          "slug": "MediaPost",
          "rows": 0
        },
        {
          "name": "Postable",
          "slug": "Postable",
          "rows": 0
        },
        {
          "name": "Bundle config",
          "slug": "BundleConfig",
          "rows": 0
        },
        {
          "name": "Function execution",
          "slug": "FunctionExecution",
          "rows": 0
        },
        {
          "name": "Markdown file config",
          "slug": "MarkdownFileConfig",
          "rows": 0
        },
        {
          "name": "Operation config",
          "slug": "OperationConfig",
          "rows": 0
        },
        {
          "name": "Operation index",
          "slug": "OperationIndex",
          "rows": 0
        },
        {
          "name": "Package json",
          "slug": "PackageJson",
          "rows": 0
        },
        {
          "name": "Social media call to action",
          "slug": "SocialMediaCallToAction",
          "rows": 0
        },
        {
          "name": "Ts build error",
          "slug": "TsBuildError",
          "rows": 0
        },
        {
          "name": "Ts comment",
          "slug": "TsComment",
          "rows": 0
        },
        {
          "name": "Ts config",
          "slug": "TsConfig",
          "rows": 0
        },
        {
          "name": "Ts export",
          "slug": "TsExport",
          "rows": 0
        },
        {
          "name": "Ts function",
          "slug": "TsFunction",
          "rows": 0
        },
        {
          "name": "Ts import",
          "slug": "TsImport",
          "rows": 0
        },
        {
          "name": "Ts interface",
          "slug": "TsInterface",
          "rows": 0
        },
        {
          "name": "Ts lint warning",
          "slug": "TsLintWarning",
          "rows": 0
        },
        {
          "name": "Ts variable",
          "slug": "TsVariable",
          "rows": 0
        },
        {
          "name": "Website call to action",
          "slug": "WebsiteCallToAction",
          "rows": 0
        },
        {
          "name": "Address",
          "slug": "Address",
          "rows": 0
        },
        {
          "name": "Area",
          "slug": "Area",
          "rows": 0
        },
        {
          "name": "City",
          "slug": "City",
          "rows": 0
        },
        {
          "name": "Country",
          "slug": "Country",
          "rows": 0
        },
        {
          "name": "Location",
          "slug": "Location",
          "rows": 0
        },
        {
          "name": "Kvmd word",
          "slug": "KvmdWord",
          "rows": 0
        },
        {
          "name": "Markdown word",
          "slug": "MarkdownWord",
          "rows": 0
        },
        {
          "name": "Nepali english translation matrix",
          "slug": "NepaliEnglishTranslationMatrix",
          "rows": 0
        },
        {
          "name": "Statement",
          "slug": "Statement",
          "rows": 0
        },
        {
          "name": "Toki pona matrix",
          "slug": "TokiPonaMatrix",
          "rows": 0
        },
        {
          "name": "Translation",
          "slug": "Translation",
          "rows": 0
        },
        {
          "name": "Word",
          "slug": "Word",
          "rows": 0
        },
        {
          "name": "Word category",
          "slug": "WordCategory",
          "rows": 0
        },
        {
          "name": "Word matrix",
          "slug": "WordMatrix",
          "rows": 0
        },
        {
          "name": "Slug model type",
          "slug": "SlugModelType",
          "rows": 0
        },
        {
          "name": "App developer",
          "slug": "AppDeveloper",
          "rows": 0
        },
        {
          "name": "Assignment",
          "slug": "Assignment",
          "rows": 0
        },
        {
          "name": "Bag",
          "slug": "Bag",
          "rows": 0
        },
        {
          "name": "Calendar",
          "slug": "Calendar",
          "rows": 0
        },
        {
          "name": "Data point",
          "slug": "DataPoint",
          "rows": 0
        },
        {
          "name": "Deliverable",
          "slug": "Deliverable",
          "rows": 0
        },
        {
          "name": "Diary",
          "slug": "Diary",
          "rows": 0
        },
        {
          "name": "Feeling",
          "slug": "Feeling",
          "rows": 0
        },
        {
          "name": "Feeling log",
          "slug": "FeelingLog",
          "rows": 0
        },
        {
          "name": "Folder",
          "slug": "Folder",
          "rows": 0
        },
        {
          "name": "Host",
          "slug": "Host",
          "rows": 0
        },
        {
          "name": "Inventory",
          "slug": "Inventory",
          "rows": 0
        },
        {
          "name": "Item",
          "slug": "Item",
          "rows": 0
        },
        {
          "name": "Item category",
          "slug": "ItemCategory",
          "rows": 0
        },
        {
          "name": "Kvmd shortcut",
          "slug": "KvmdShortcut",
          "rows": 0
        },
        {
          "name": "Label",
          "slug": "Label",
          "rows": 0
        },
        {
          "name": "Light",
          "slug": "Light",
          "rows": 0
        },
        {
          "name": "Listing",
          "slug": "Listing",
          "rows": 0
        },
        {
          "name": "Login credential",
          "slug": "LoginCredential",
          "rows": 0
        },
        {
          "name": "Material",
          "slug": "Material",
          "rows": 0
        },
        {
          "name": "Message preset",
          "slug": "MessagePreset",
          "rows": 0
        },
        {
          "name": "Progress report",
          "slug": "ProgressReport",
          "rows": 0
        },
        {
          "name": "Question",
          "slug": "Question",
          "rows": 0
        },
        {
          "name": "Reservation",
          "slug": "Reservation",
          "rows": 0
        },
        {
          "name": "Resource",
          "slug": "Resource",
          "rows": 0
        },
        {
          "name": "Shit",
          "slug": "Shit",
          "rows": 0
        },
        {
          "name": "Shit log",
          "slug": "ShitLog",
          "rows": 0
        },
        {
          "name": "Shopping list",
          "slug": "ShoppingList",
          "rows": 0
        },
        {
          "name": "Shortcut",
          "slug": "Shortcut",
          "rows": 0
        },
        {
          "name": "Student",
          "slug": "Student",
          "rows": 0
        },
        {
          "name": "Student 2",
          "slug": "Student2",
          "rows": 0
        },
        {
          "name": "Task error",
          "slug": "TaskError",
          "rows": 0
        },
        {
          "name": "Thing",
          "slug": "Thing",
          "rows": 0
        },
        {
          "name": "Todo file",
          "slug": "TodoFile",
          "rows": 0
        },
        {
          "name": "Trackable",
          "slug": "Trackable",
          "rows": 0
        },
        {
          "name": "User",
          "slug": "User",
          "rows": 0
        },
        {
          "name": "User credential",
          "slug": "UserCredential",
          "rows": 0
        },
        {
          "name": "Jeep type",
          "slug": "JeepType",
          "rows": 0
        },
        {
          "name": "Location type",
          "slug": "LocationType",
          "rows": 0
        },
        {
          "name": "Activity",
          "slug": "Activity",
          "rows": 0
        },
        {
          "name": "Company requirement",
          "slug": "CompanyRequirement",
          "rows": 0
        },
        {
          "name": "Company size",
          "slug": "CompanySize",
          "rows": 0
        },
        {
          "name": "Company type",
          "slug": "CompanyType",
          "rows": 0
        },
        {
          "name": "Company",
          "slug": "Company",
          "rows": 0
        },
        {
          "name": "Contact information",
          "slug": "ContactInformation",
          "rows": 0
        },
        {
          "name": "Contribution",
          "slug": "Contribution",
          "rows": 0
        },
        {
          "name": "Esg metric",
          "slug": "EsgMetric",
          "rows": 0
        },
        {
          "name": "Product category",
          "slug": "ProductCategory",
          "rows": 0
        },
        {
          "name": "Product",
          "slug": "Product",
          "rows": 0
        },
        {
          "name": "Proof state",
          "slug": "ProofState",
          "rows": 0
        },
        {
          "name": "Proof",
          "slug": "Proof",
          "rows": 0
        },
        {
          "name": "Sustainability plan",
          "slug": "SustainabilityPlan",
          "rows": 0
        },
        {
          "name": "Value chain phase",
          "slug": "ValueChainPhase",
          "rows": 0
        }
      ]
    },
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -1
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -1
      }
    ],
    "id": "ksysjspiatqdhcozrhuahxbg"
  },
  {
    "createdAt": 1667380939916,
    "updatedAt": 1667380939916,
    "deletedAt": 0,
    "createdFirstAt": 1667380939916,
    "functionName": "getReferencableModelData",
    "tsFunctionId": "nlwqlrrovbinvcftglpdofue",
    "inputParameters": [
      "PageVisit"
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": [
      {
        "id": "rhaezabuxdliwytfmjqyhpbq"
      },
      {
        "id": "xeukxflymydzuhyduglpeede"
      },
      {
        "id": "kadjzdeiomaarcwsonjpintn"
      },
      {
        "id": "prhthxdorsnervjhynkunggd"
      },
      {
        "id": "qiutzjbokqecdfqjcobaulvi"
      },
      {
        "id": "zkoehwlexxrbfkapzhprkdxj"
      }
    ],
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -1
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -233
      }
    ],
    "id": "ofpppkrakysacjzrmmoprggh"
  },
  {
    "createdAt": 1667380940398,
    "updatedAt": 1667380940398,
    "deletedAt": 0,
    "createdFirstAt": 1667380940398,
    "functionName": "getDbModel",
    "tsFunctionId": "juyaxxbbboszvendbjbfqomm",
    "inputParameters": [
      "PageVisit",
      {
        "start": 0,
        "limit": 30
      }
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": {
      "start": 0,
      "limit": 30,
      "data": [
        {
          "createdAt": 1667380778410,
          "updatedAt": 1667380778410,
          "deletedAt": 0,
          "createdFirstAt": 1667380778410,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "rhaezabuxdliwytfmjqyhpbq",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380778424,
          "updatedAt": 1667380778424,
          "deletedAt": 0,
          "createdFirstAt": 1667380778424,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "xeukxflymydzuhyduglpeede",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380789166,
          "updatedAt": 1667380789166,
          "deletedAt": 0,
          "createdFirstAt": 1667380789166,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "kadjzdeiomaarcwsonjpintn",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380789693,
          "updatedAt": 1667380789693,
          "deletedAt": 0,
          "createdFirstAt": 1667380789693,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "prhthxdorsnervjhynkunggd",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380792811,
          "updatedAt": 1667380792811,
          "deletedAt": 0,
          "createdFirstAt": 1667380792811,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "qiutzjbokqecdfqjcobaulvi",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380792821,
          "updatedAt": 1667380792821,
          "deletedAt": 0,
          "createdFirstAt": 1667380792821,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "zkoehwlexxrbfkapzhprkdxj",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        }
      ],
      "index": {
        "createdAt": 1667379532235,
        "updatedAt": 1667379532235,
        "deletedAt": 0,
        "createdFirstAt": 1667379532235,
        "id": "pagevisit",
        "name": "PageVisit",
        "slug": "pagevisit",
        "operationRelativeTypescriptFilePath": "src/PageVisit.ts",
        "hasGeneric": false,
        "isExported": true,
        "rawText": "\n\n/**\n * Any visit tracked based on a server request\n *\n * NB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?\n */\nexport interface PageVisit extends DefaultModelType {\n  deviceId: string;\n  /**\n   * complete url of the page that was visited\n   */\n  path: string;\n  /**\n   * When was the page visited\n   */\n  createdAt: number;\n  ipInfo: IPInfo;\n}",
        "extensions": [
          "DefaultModelType"
        ],
        "isOperationIndex": false,
        "description": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
        "dbStorageMethod": "jsonMultiple",
        "isDbModel": true,
        "commentsInside": [],
        "type": {
          "typeDefinition": {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "number",
                "description": "When was the page visited"
              },
              "updatedAt": {
                "$ref": "#/definitions/UpdatedAt"
              },
              "deletedAt": {
                "$ref": "#/definitions/DeletedAt"
              },
              "createdFirstAt": {
                "$ref": "#/definitions/CreatedFirstAt"
              },
              "operationName": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "projectRelativePath": {
                "type": "string",
                "description": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "operationRelativePath": {
                "type": "string",
                "description": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "id": {
                "$ref": "#/definitions/Id"
              },
              "categoryStackCalculated": {
                "$ref": "#/definitions/CategoryStack",
                "description": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!"
              },
              "deviceId": {
                "type": "string"
              },
              "path": {
                "type": "string",
                "description": "complete url of the page that was visited"
              },
              "ipInfo": {
                "$ref": "#/definitions/IPInfo"
              }
            },
            "required": [
              "createdAt",
              "createdFirstAt",
              "deletedAt",
              "deviceId",
              "id",
              "ipInfo",
              "operationName",
              "path",
              "projectRelativePath",
              "updatedAt"
            ],
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Id"
                },
                {
                  "not": {}
                }
              ]
            },
            "description": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?"
          },
          "simplifiedSchema": {
            "fullComment": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
            "nb": "TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
            "properties": [
              {
                "name": "createdAt",
                "required": true,
                "schema": {
                  "fullComment": "When was the page visited",
                  "type": "number"
                }
              },
              {
                "name": "updatedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "deletedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "createdFirstAt",
                "required": true,
                "schema": {
                  "fullComment": "in some cases, data can be created before it was created in our system. In this case, use CreatedFirstAt if this information is important.\n\nTime\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "operationName",
                "required": true,
                "schema": {
                  "fullComment": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "null"
                }
              },
              {
                "name": "projectRelativePath",
                "required": true,
                "schema": {
                  "fullComment": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "operationRelativePath",
                "required": false,
                "schema": {
                  "fullComment": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "id",
                "required": true,
                "schema": {
                  "fullComment": "Should be an unique string By default, you can use `generateId()` to generate a random string of 16 characters. If you wish, you can also use any other string, as long as you are sure it's unique.\n\n# Background Info\n\nazAZ09 characters are easy to copy and provide 62 characters. the goal of an id is to be unique.\n\nthe advantage of a random id compared to an numeric id starting with 1 with auto increment is that you can set them up decentralised.\n\nthe change of duplicate ids gets bigger once you make them shorter the change of finding an existing id gets bigger once you make them shorter\n\nAn Id with 12 characters would provide 3.22e21 combinations.\n\nWhat is the change of duplicate ids? This depends on the amount of identifyable items in the data What is the change of guessing an id? This depends on speed of a brute force attack and the amount of available datapoints. If you can guess 10000 times per second, you can make 864.000.000 guesses. A billion guesses on a dataset of a billion datapoints yields 3226 correct ids on average.\n\nWhy make an id short? I don't know if there's an important reason.\n\nAll in all, I think we should make ids 24 characters by default. This would make it very easy to store, yet, with more than E42 combinations, make it nearly impossible to get duplication or brute force hits.\n\nAn id would look like this:\n\n``` { \"id\": \"sk2EcW9AkZpksk2EcW9AkZpk\" } ```\n\nLooks good to me! Don't think about it and just keep it simple. We can always migrate later to a bigger amount, but I don't see good reason to keep it smaller than this.",
                  "type": "string"
                }
              },
              {
                "name": "categoryStackCalculated",
                "required": false,
                "schema": {
                  "fullComment": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!\n\n",
                  "nb": "Changing this value when updating/upserting, changes where the item is located!",
                  "items": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "name": null
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "deviceId",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "path",
                "required": true,
                "schema": {
                  "fullComment": "complete url of the page that was visited",
                  "type": "string"
                }
              },
              {
                "name": "ipInfo",
                "required": true,
                "schema": {
                  "fullComment": "Information that is inferred from an IP",
                  "properties": [
                    {
                      "name": "ip",
                      "required": true,
                      "schema": {
                        "fullComment": "The ip of the device. Can be a local IP or remote IP.\n\nNB: Port is not included",
                        "nb": "Port is not included",
                        "type": "string"
                      }
                    },
                    {
                      "name": "city",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "position",
                      "required": false,
                      "schema": {
                        "fullComment": "",
                        "properties": [
                          {
                            "name": "latitude",
                            "required": true,
                            "schema": {
                              "type": "number"
                            }
                          },
                          {
                            "name": "longitude",
                            "required": true,
                            "schema": {
                              "type": "number"
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "name": "positionRadiusKm",
                      "required": false,
                      "schema": {
                        "type": "number"
                      }
                    },
                    {
                      "name": "country",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "region",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "timezone",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "type": "object"
                }
              }
            ],
            "type": "object"
          },
          "typeCoverage": 0,
          "rawType": "PageVisit",
          "isArray": false,
          "isEnum": false,
          "isEnumLiteral": false,
          "isObject": false,
          "isPrimitive": false
        },
        "operationName": "peer-types",
        "projectRelativePath": "/operations/tools/p2p/peer-types/db/ts-interfaces/pagevisit.json",
        "operationRelativePath": "/db/ts-interfaces/pagevisit.json"
      },
      "fileLocations": [
        "/db/page-visits.json",
        "/operations/tools/admin-operation/operation-ui/db/page-visits.json",
        "/operations/tools/admin-operation/operation-web/db/page-visits.json",
        "/operations/tools/asset/asset-demo-web/db/page-visits.json",
        "/operations/tools/asset/asset-functions-js/db/page-visits.json",
        "/operations/tools/asset/asset-functions-node/db/page-visits.json",
        "/operations/tools/asset/asset-input/db/page-visits.json",
        "/operations/tools/asset/asset-type/db/page-visits.json",
        "/operations/tools/asset/asset-view/db/page-visits.json",
        "/operations/tools/asset/text-or-binary/db/page-visits.json",
        "/operations/tools/control-fs/folder-get-updated-at/db/page-visits.json",
        "/operations/tools/control-fs/fs-util/db/page-visits.json",
        "/operations/tools/control-fs/fs-util-js/db/page-visits.json",
        "/operations/tools/control-fs/get-associated-md/db/page-visits.json",
        "/operations/tools/control-fs/get-available-folder-path/db/page-visits.json",
        "/operations/tools/control-fs/get-package-json/db/page-visits.json",
        "/operations/tools/control-fs/get-package-source-paths/db/page-visits.json",
        "/operations/tools/control-fs/get-ts-config/db/page-visits.json",
        "/operations/tools/control-fs/path-util/db/page-visits.json",
        "/operations/tools/control-fs/rename-template-files/db/page-visits.json",
        "/operations/tools/control-fs/set-json-key/db/page-visits.json",
        "/operations/tools/control-fs/watch-folders/db/page-visits.json",
        "/operations/tools/control-fs/write-to-assets/db/page-visits.json",
        "/operations/tools/control-project/all/db/page-visits.json",
        "/operations/tools/control-project/deprecated/make-file-type/db/page-visits.json",
        "/operations/tools/control-project/explore-project/db/page-visits.json",
        "/operations/tools/control-project/get-all-operation-source-paths/db/page-visits.json",
        "/operations/tools/control-project/get-path/db/page-visits.json",
        "/operations/tools/control-project/k-explore/db/page-visits.json",
        "/operations/tools/control-project/operation-util/db/page-visits.json",
        "/operations/tools/control-project/pm2-util/db/page-visits.json",
        "/operations/tools/control-system/brightness/db/page-visits.json",
        "/operations/tools/control-system/clean-macos-setup/db/page-visits.json",
        "/operations/tools/control-system/play-music/db/page-visits.json",
        "/operations/tools/control-system/reminders/db/page-visits.json",
        "/operations/tools/control-system/set-random-timezone/db/page-visits.json",
        "/operations/tools/control-system/toggle-dark-mode/db/page-visits.json",
        "/operations/tools/control-system/toggle-screen-sleep/db/page-visits.json",
        "/operations/tools/control-system/volume/db/page-visits.json",
        "/operations/tools/control-system/vscode-open/db/page-visits.json",
        "/operations/tools/conventions/filename-conventions/db/page-visits.json",
        "/operations/tools/conventions/name-conventions/db/page-visits.json",
        "/operations/tools/conventions/port-conventions/db/page-visits.json",
        "/operations/tools/database/database/db/page-visits.json",
        "/operations/tools/database/db-recipes/db/page-visits.json",
        "/operations/tools/database/db-ui/db/page-visits.json",
        "/operations/tools/database/db-web/db/page-visits.json",
        "/operations/tools/database/fs-orm/db/page-visits.json",
        "/operations/tools/database/validate-model/db/page-visits.json",
        "/operations/tools/deployment/bundling/bundle-util/db/page-visits.json",
        "/operations/tools/deployment/bundling/bundle-web/db/page-visits.json",
        "/operations/tools/deployment/bundling/create-backup/db/page-visits.json",
        "/operations/tools/deployment/bundling/create-distribution/db/page-visits.json",
        "/operations/tools/deployment/bundling/db-util/db/page-visits.json",
        "/operations/tools/deployment/bundling/generate-bundle/db/page-visits.json",
        "/operations/tools/deployment/bundling/install-node-modules/db/page-visits.json",
        "/operations/tools/deployment/bundling/yarn-install-new-distribution/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-core/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-server/db/page-visits.json",
        "/operations/tools/generated/sdk/db/page-visits.json",
        "/operations/tools/generated/sdk-api/db/page-visits.json",
        "/operations/tools/generated/sdk-api-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-db/db/page-visits.json",
        "/operations/tools/generated/sdk-env-private/db/page-visits.json",
        "/operations/tools/generated/sdk-env-public/db/page-visits.json",
        "/operations/tools/generated/sdk-function-paths/db/page-visits.json",
        "/operations/tools/generated/sdk-js/db/page-visits.json",
        "/operations/tools/generated/sdk-js-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-operations/db/page-visits.json",
        "/operations/tools/interfaces/api/api/db/page-visits.json",
        "/operations/tools/interfaces/api/api-store/db/page-visits.json",
        "/operations/tools/interfaces/api/api-types/db/page-visits.json",
        "/operations/tools/interfaces/api/deprecated/endpoint-util/db/page-visits.json",
        "/operations/tools/interfaces/api/function-recipes/db/page-visits.json",
        "/operations/tools/interfaces/api/function-server/db/page-visits.json",
        "/operations/tools/interfaces/api/function-server-endpoints/db/page-visits.json",
        "/operations/tools/interfaces/api/server-api-url/db/page-visits.json",
        "/operations/tools/interfaces/api/server-login/db/page-visits.json",
        "/operations/tools/interfaces/auditory-ui/remind-me-in/db/page-visits.json",
        "/operations/tools/interfaces/auditory-ui/say/db/page-visits.json",
        "/operations/tools/interfaces/cli/ask/db/page-visits.json",
        "/operations/tools/interfaces/cli/cli-version-updates/db/page-visits.json",
        "/operations/tools/interfaces/cli/function-util/db/page-visits.json",
        "/operations/tools/interfaces/cli/string-to-json/db/page-visits.json",
        "/operations/tools/interfaces/vui/function-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-expo/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-next/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/next/next-a-link/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-alert/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-asset-input/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-notification/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-router/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-select/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/simplified-schema-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/big-button/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/clickable-icon/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/fancy-loader/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/labeled-button/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/login-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/markdown-parse-transpile-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/spoiler/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/ui-util/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/use-url-store/db/page-visits.json",
        "/operations/tools/language/detect-language/db/page-visits.json",
        "/operations/tools/language/generate-simple-sentence/db/page-visits.json",
        "/operations/tools/language/learn-toki-web/db/page-visits.json",
        "/operations/tools/language/simplify-text/db/page-visits.json",
        "/operations/tools/language/speak-words-to-learn/db/page-visits.json",
        "/operations/tools/markdown-reader/augmented-words/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-functions/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-functions-js/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-types/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-ui/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-web/db/page-visits.json",
        "/operations/tools/p2p/auth-types/db/page-visits.json",
        "/operations/tools/p2p/mail/db/page-visits.json",
        "/operations/tools/p2p/os-config/db/page-visits.json",
        "/operations/tools/p2p/peer-functions/db/page-visits.json",
        "/operations/tools/p2p/peer-types/db/page-visits.json",
        "/operations/tools/p2p/peer-web/db/page-visits.json",
        "/operations/tools/p2p/sms/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/compression/unzip/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/compression/zip/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/csv/csv-util/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-to-md/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-to-say-string/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-util/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-translator/db/page-visits.json",
        "/operations/tools/parsing/parse-primitive/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-csv-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-json-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-kvmd-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-markdown-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-typescript-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/try-parse-json/db/page-visits.json",
        "/operations/tools/parsing/rest-util/db/page-visits.json",
        "/operations/tools/parsing/search/db/page-visits.json",
        "/operations/tools/sensation/orientation/get-location/db/page-visits.json",
        "/operations/tools/sensation/sight/get-light/db/page-visits.json",
        "/operations/tools/social-media/social-media-controller/db/page-visits.json",
        "/operations/tools/social-media/social-media-functions/db/page-visits.json",
        "/operations/tools/social-media/social-media-types/db/page-visits.json",
        "/operations/tools/social-media/social-media-ui/db/page-visits.json",
        "/operations/tools/social-media/social-media-web/db/page-visits.json",
        "/operations/tools/types/bundle-types/db/page-visits.json",
        "/operations/tools/types/code-types/db/page-visits.json",
        "/operations/tools/types/geo-types/db/page-visits.json",
        "/operations/tools/types/invoice-types/db/page-visits.json",
        "/operations/tools/types/language-types/db/page-visits.json",
        "/operations/tools/types/matter-types/db/page-visits.json",
        "/operations/tools/types/model-types/db/page-visits.json",
        "/operations/tools/types/os-types/db/page-visits.json",
        "/operations/tools/typescript/cleanup-typescript-database/db/page-visits.json",
        "/operations/tools/typescript/comment-util/db/page-visits.json",
        "/operations/tools/typescript/compile-typescript/db/page-visits.json",
        "/operations/tools/typescript/find-all-dependency-operations/db/page-visits.json",
        "/operations/tools/typescript/generate-index/db/page-visits.json",
        "/operations/tools/typescript/generate-sdk-operations/db/page-visits.json",
        "/operations/tools/typescript/get-imported-dependencies/db/page-visits.json",
        "/operations/tools/typescript/get-imports-exports/db/page-visits.json",
        "/operations/tools/typescript/get-missing-dependencies/db/page-visits.json",
        "/operations/tools/typescript/index-typescript/db/page-visits.json",
        "/operations/tools/typescript/lint/db/page-visits.json",
        "/operations/tools/typescript/minify-build/db/page-visits.json",
        "/operations/tools/typescript/new-template/db/page-visits.json",
        "/operations/tools/typescript/package-scripts/db/page-visits.json",
        "/operations/tools/typescript/prettier-operation/db/page-visits.json",
        "/operations/tools/typescript/rebuild-operation/db/page-visits.json",
        "/operations/tools/typescript/rename-operation/db/page-visits.json",
        "/operations/tools/typescript/schema-util/db/page-visits.json",
        "/operations/tools/typescript/testing/k-test/db/page-visits.json",
        "/operations/tools/typescript/testing/make-test/db/page-visits.json",
        "/operations/tools/typescript/ts-morph-util/db/page-visits.json",
        "/operations/tools/typescript/watch-operations/db/page-visits.json",
        "/operations/tools/util/child-process-helper/db/page-visits.json",
        "/operations/tools/util/convert-case/db/page-visits.json",
        "/operations/tools/util/execute-command/db/page-visits.json",
        "/operations/tools/util/geo-parse/db/page-visits.json",
        "/operations/tools/util/is-online/db/page-visits.json",
        "/operations/tools/util/js-util/db/page-visits.json",
        "/operations/tools/util/k-dev/db/page-visits.json",
        "/operations/tools/util/log/db/page-visits.json",
        "/operations/tools/util/nodemon/db/page-visits.json",
        "/operations/tools/util/one-by-one/db/page-visits.json",
        "/operations/tools/util/pluralize/db/page-visits.json",
        "/operations/tools/util/run-child-process/db/page-visits.json",
        "/operations/tools/writer/breadcrumbs/db/page-visits.json",
        "/operations/tools/writer/file-icons/db/page-visits.json",
        "/operations/tools/writer/file-search/db/page-visits.json",
        "/operations/tools/writer/file-tabs/db/page-visits.json",
        "/operations/tools/writer/file-writer/db/page-visits.json",
        "/operations/tools/writer/hotkeys/db/page-visits.json",
        "/operations/tools/writer/next-paths/db/page-visits.json",
        "/operations/tools/writer/todo-ui/db/page-visits.json",
        "/operations/tools/writer/todo-web/db/page-visits.json",
        "/operations/tools/writer/writer-demo-web/db/page-visits.json",
        "/operations/tools/writer/writer-functions/db/page-visits.json",
        "/operations/tools/writer/writer-input/db/page-visits.json",
        "/operations/tools/writer/writer-types/db/page-visits.json",
        "/operations/tools/writer/writer-ui/db/page-visits.json",
        "/operations/tools/writer/writer-web/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-types/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-web/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/page-visits.json",
        "/operations/niches/passionfruit/apps/passionfruit-web/db/page-visits.json",
        "/operations/niches/passionfruit/packages/foodchain-recipes/db/page-visits.json",
        "/operations/niches/passionfruit/packages/foodchain-types/db/page-visits.json",
        "/operations/niches/passionfruit/packages/passionfruit-ui/db/page-visits.json",
        "/operations/niches/sprent/parse-address-henrik/db/page-visits.json",
        "/operations/niches/sprent/parse-images/db/page-visits.json"
      ],
      "hasMore": false
    },
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -1
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -714
      }
    ],
    "id": "tvsouxckhatqccxcneqzphoa"
  },
  {
    "createdAt": 1667380948962,
    "updatedAt": 1667380948962,
    "deletedAt": 0,
    "createdFirstAt": 1667380948962,
    "functionName": "getDatabaseMenu",
    "tsFunctionId": "mrynromkdhmeekzmxhbvzyyd",
    "inputParameters": [],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": {
      "menu": [
        {
          "name": "Device",
          "slug": "Device",
          "rows": 0
        },
        {
          "name": "Group",
          "slug": "Group",
          "rows": 0
        },
        {
          "name": "Page visit",
          "slug": "PageVisit",
          "rows": 0
        },
        {
          "name": "Peer message",
          "slug": "PeerMessage",
          "rows": 0
        },
        {
          "name": "Person",
          "slug": "Person",
          "rows": 0
        },
        {
          "name": "Person information",
          "slug": "PersonInformation",
          "rows": 0
        },
        {
          "name": "Person information value",
          "slug": "PersonInformationValue",
          "rows": 0
        },
        {
          "name": "Person platform connection",
          "slug": "PersonPlatformConnection",
          "rows": 0
        },
        {
          "name": "Platform",
          "slug": "Platform",
          "rows": 0
        },
        {
          "name": "Interest",
          "slug": "Interest",
          "rows": 0
        },
        {
          "name": "Media channel",
          "slug": "MediaChannel",
          "rows": 0
        },
        {
          "name": "Media credentail",
          "slug": "MediaCredentail",
          "rows": 0
        },
        {
          "name": "Media post",
          "slug": "MediaPost",
          "rows": 0
        },
        {
          "name": "Postable",
          "slug": "Postable",
          "rows": 0
        },
        {
          "name": "Bundle config",
          "slug": "BundleConfig",
          "rows": 0
        },
        {
          "name": "Function execution",
          "slug": "FunctionExecution",
          "rows": 0
        },
        {
          "name": "Markdown file config",
          "slug": "MarkdownFileConfig",
          "rows": 0
        },
        {
          "name": "Operation config",
          "slug": "OperationConfig",
          "rows": 0
        },
        {
          "name": "Operation index",
          "slug": "OperationIndex",
          "rows": 0
        },
        {
          "name": "Package json",
          "slug": "PackageJson",
          "rows": 0
        },
        {
          "name": "Social media call to action",
          "slug": "SocialMediaCallToAction",
          "rows": 0
        },
        {
          "name": "Ts build error",
          "slug": "TsBuildError",
          "rows": 0
        },
        {
          "name": "Ts comment",
          "slug": "TsComment",
          "rows": 0
        },
        {
          "name": "Ts config",
          "slug": "TsConfig",
          "rows": 0
        },
        {
          "name": "Ts export",
          "slug": "TsExport",
          "rows": 0
        },
        {
          "name": "Ts function",
          "slug": "TsFunction",
          "rows": 0
        },
        {
          "name": "Ts import",
          "slug": "TsImport",
          "rows": 0
        },
        {
          "name": "Ts interface",
          "slug": "TsInterface",
          "rows": 0
        },
        {
          "name": "Ts lint warning",
          "slug": "TsLintWarning",
          "rows": 0
        },
        {
          "name": "Ts variable",
          "slug": "TsVariable",
          "rows": 0
        },
        {
          "name": "Website call to action",
          "slug": "WebsiteCallToAction",
          "rows": 0
        },
        {
          "name": "Address",
          "slug": "Address",
          "rows": 0
        },
        {
          "name": "Area",
          "slug": "Area",
          "rows": 0
        },
        {
          "name": "City",
          "slug": "City",
          "rows": 0
        },
        {
          "name": "Country",
          "slug": "Country",
          "rows": 0
        },
        {
          "name": "Location",
          "slug": "Location",
          "rows": 0
        },
        {
          "name": "Kvmd word",
          "slug": "KvmdWord",
          "rows": 0
        },
        {
          "name": "Markdown word",
          "slug": "MarkdownWord",
          "rows": 0
        },
        {
          "name": "Nepali english translation matrix",
          "slug": "NepaliEnglishTranslationMatrix",
          "rows": 0
        },
        {
          "name": "Statement",
          "slug": "Statement",
          "rows": 0
        },
        {
          "name": "Toki pona matrix",
          "slug": "TokiPonaMatrix",
          "rows": 0
        },
        {
          "name": "Translation",
          "slug": "Translation",
          "rows": 0
        },
        {
          "name": "Word",
          "slug": "Word",
          "rows": 0
        },
        {
          "name": "Word category",
          "slug": "WordCategory",
          "rows": 0
        },
        {
          "name": "Word matrix",
          "slug": "WordMatrix",
          "rows": 0
        },
        {
          "name": "Slug model type",
          "slug": "SlugModelType",
          "rows": 0
        },
        {
          "name": "App developer",
          "slug": "AppDeveloper",
          "rows": 0
        },
        {
          "name": "Assignment",
          "slug": "Assignment",
          "rows": 0
        },
        {
          "name": "Bag",
          "slug": "Bag",
          "rows": 0
        },
        {
          "name": "Calendar",
          "slug": "Calendar",
          "rows": 0
        },
        {
          "name": "Data point",
          "slug": "DataPoint",
          "rows": 0
        },
        {
          "name": "Deliverable",
          "slug": "Deliverable",
          "rows": 0
        },
        {
          "name": "Diary",
          "slug": "Diary",
          "rows": 0
        },
        {
          "name": "Feeling",
          "slug": "Feeling",
          "rows": 0
        },
        {
          "name": "Feeling log",
          "slug": "FeelingLog",
          "rows": 0
        },
        {
          "name": "Folder",
          "slug": "Folder",
          "rows": 0
        },
        {
          "name": "Host",
          "slug": "Host",
          "rows": 0
        },
        {
          "name": "Inventory",
          "slug": "Inventory",
          "rows": 0
        },
        {
          "name": "Item",
          "slug": "Item",
          "rows": 0
        },
        {
          "name": "Item category",
          "slug": "ItemCategory",
          "rows": 0
        },
        {
          "name": "Kvmd shortcut",
          "slug": "KvmdShortcut",
          "rows": 0
        },
        {
          "name": "Label",
          "slug": "Label",
          "rows": 0
        },
        {
          "name": "Light",
          "slug": "Light",
          "rows": 0
        },
        {
          "name": "Listing",
          "slug": "Listing",
          "rows": 0
        },
        {
          "name": "Login credential",
          "slug": "LoginCredential",
          "rows": 0
        },
        {
          "name": "Material",
          "slug": "Material",
          "rows": 0
        },
        {
          "name": "Message preset",
          "slug": "MessagePreset",
          "rows": 0
        },
        {
          "name": "Progress report",
          "slug": "ProgressReport",
          "rows": 0
        },
        {
          "name": "Question",
          "slug": "Question",
          "rows": 0
        },
        {
          "name": "Reservation",
          "slug": "Reservation",
          "rows": 0
        },
        {
          "name": "Resource",
          "slug": "Resource",
          "rows": 0
        },
        {
          "name": "Shit",
          "slug": "Shit",
          "rows": 0
        },
        {
          "name": "Shit log",
          "slug": "ShitLog",
          "rows": 0
        },
        {
          "name": "Shopping list",
          "slug": "ShoppingList",
          "rows": 0
        },
        {
          "name": "Shortcut",
          "slug": "Shortcut",
          "rows": 0
        },
        {
          "name": "Student",
          "slug": "Student",
          "rows": 0
        },
        {
          "name": "Student 2",
          "slug": "Student2",
          "rows": 0
        },
        {
          "name": "Task error",
          "slug": "TaskError",
          "rows": 0
        },
        {
          "name": "Thing",
          "slug": "Thing",
          "rows": 0
        },
        {
          "name": "Todo file",
          "slug": "TodoFile",
          "rows": 0
        },
        {
          "name": "Trackable",
          "slug": "Trackable",
          "rows": 0
        },
        {
          "name": "User",
          "slug": "User",
          "rows": 0
        },
        {
          "name": "User credential",
          "slug": "UserCredential",
          "rows": 0
        },
        {
          "name": "Jeep type",
          "slug": "JeepType",
          "rows": 0
        },
        {
          "name": "Location type",
          "slug": "LocationType",
          "rows": 0
        },
        {
          "name": "Activity",
          "slug": "Activity",
          "rows": 0
        },
        {
          "name": "Company requirement",
          "slug": "CompanyRequirement",
          "rows": 0
        },
        {
          "name": "Company size",
          "slug": "CompanySize",
          "rows": 0
        },
        {
          "name": "Company type",
          "slug": "CompanyType",
          "rows": 0
        },
        {
          "name": "Company",
          "slug": "Company",
          "rows": 0
        },
        {
          "name": "Contact information",
          "slug": "ContactInformation",
          "rows": 0
        },
        {
          "name": "Contribution",
          "slug": "Contribution",
          "rows": 0
        },
        {
          "name": "Esg metric",
          "slug": "EsgMetric",
          "rows": 0
        },
        {
          "name": "Product category",
          "slug": "ProductCategory",
          "rows": 0
        },
        {
          "name": "Product",
          "slug": "Product",
          "rows": 0
        },
        {
          "name": "Proof state",
          "slug": "ProofState",
          "rows": 0
        },
        {
          "name": "Proof",
          "slug": "Proof",
          "rows": 0
        },
        {
          "name": "Sustainability plan",
          "slug": "SustainabilityPlan",
          "rows": 0
        },
        {
          "name": "Value chain phase",
          "slug": "ValueChainPhase",
          "rows": 0
        }
      ]
    },
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -13
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -1
      }
    ],
    "id": "vurvuvqbugojvxpvdpwebpzz"
  },
  {
    "createdAt": 1667380949007,
    "updatedAt": 1667380949007,
    "deletedAt": 0,
    "createdFirstAt": 1667380949007,
    "functionName": "ping",
    "tsFunctionId": "binosfkbaogacmyjiopkjmns",
    "inputParameters": [],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": true,
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -51
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": 0
      }
    ],
    "id": "rbikibjvfcarzaszlgdxxdqx"
  },
  {
    "createdAt": 1667380949773,
    "updatedAt": 1667380949773,
    "deletedAt": 0,
    "createdFirstAt": 1667380949773,
    "functionName": "getReferencableModelData",
    "tsFunctionId": "nlwqlrrovbinvcftglpdofue",
    "inputParameters": [
      "PageVisit"
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": [
      {
        "id": "rhaezabuxdliwytfmjqyhpbq"
      },
      {
        "id": "xeukxflymydzuhyduglpeede"
      },
      {
        "id": "kadjzdeiomaarcwsonjpintn"
      },
      {
        "id": "prhthxdorsnervjhynkunggd"
      },
      {
        "id": "qiutzjbokqecdfqjcobaulvi"
      },
      {
        "id": "zkoehwlexxrbfkapzhprkdxj"
      }
    ],
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -25
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -794
      }
    ],
    "id": "lateeqwsrbfjadrmyejaygnx"
  },
  {
    "createdAt": 1667380950135,
    "updatedAt": 1667380950135,
    "deletedAt": 0,
    "createdFirstAt": 1667380950135,
    "functionName": "getDbModel",
    "tsFunctionId": "juyaxxbbboszvendbjbfqomm",
    "inputParameters": [
      "PageVisit",
      {
        "start": 0,
        "limit": 30
      }
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": {
      "start": 0,
      "limit": 30,
      "data": [
        {
          "createdAt": 1667380778410,
          "updatedAt": 1667380778410,
          "deletedAt": 0,
          "createdFirstAt": 1667380778410,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "rhaezabuxdliwytfmjqyhpbq",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380778424,
          "updatedAt": 1667380778424,
          "deletedAt": 0,
          "createdFirstAt": 1667380778424,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "xeukxflymydzuhyduglpeede",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380789166,
          "updatedAt": 1667380789166,
          "deletedAt": 0,
          "createdFirstAt": 1667380789166,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "kadjzdeiomaarcwsonjpintn",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380789693,
          "updatedAt": 1667380789693,
          "deletedAt": 0,
          "createdFirstAt": 1667380789693,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "prhthxdorsnervjhynkunggd",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380792811,
          "updatedAt": 1667380792811,
          "deletedAt": 0,
          "createdFirstAt": 1667380792811,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "qiutzjbokqecdfqjcobaulvi",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380792821,
          "updatedAt": 1667380792821,
          "deletedAt": 0,
          "createdFirstAt": 1667380792821,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "zkoehwlexxrbfkapzhprkdxj",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        }
      ],
      "index": {
        "createdAt": 1667379532235,
        "updatedAt": 1667379532235,
        "deletedAt": 0,
        "createdFirstAt": 1667379532235,
        "id": "pagevisit",
        "name": "PageVisit",
        "slug": "pagevisit",
        "operationRelativeTypescriptFilePath": "src/PageVisit.ts",
        "hasGeneric": false,
        "isExported": true,
        "rawText": "\n\n/**\n * Any visit tracked based on a server request\n *\n * NB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?\n */\nexport interface PageVisit extends DefaultModelType {\n  deviceId: string;\n  /**\n   * complete url of the page that was visited\n   */\n  path: string;\n  /**\n   * When was the page visited\n   */\n  createdAt: number;\n  ipInfo: IPInfo;\n}",
        "extensions": [
          "DefaultModelType"
        ],
        "isOperationIndex": false,
        "description": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
        "dbStorageMethod": "jsonMultiple",
        "isDbModel": true,
        "commentsInside": [],
        "type": {
          "typeDefinition": {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "number",
                "description": "When was the page visited"
              },
              "updatedAt": {
                "$ref": "#/definitions/UpdatedAt"
              },
              "deletedAt": {
                "$ref": "#/definitions/DeletedAt"
              },
              "createdFirstAt": {
                "$ref": "#/definitions/CreatedFirstAt"
              },
              "operationName": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "projectRelativePath": {
                "type": "string",
                "description": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "operationRelativePath": {
                "type": "string",
                "description": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "id": {
                "$ref": "#/definitions/Id"
              },
              "categoryStackCalculated": {
                "$ref": "#/definitions/CategoryStack",
                "description": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!"
              },
              "deviceId": {
                "type": "string"
              },
              "path": {
                "type": "string",
                "description": "complete url of the page that was visited"
              },
              "ipInfo": {
                "$ref": "#/definitions/IPInfo"
              }
            },
            "required": [
              "createdAt",
              "createdFirstAt",
              "deletedAt",
              "deviceId",
              "id",
              "ipInfo",
              "operationName",
              "path",
              "projectRelativePath",
              "updatedAt"
            ],
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Id"
                },
                {
                  "not": {}
                }
              ]
            },
            "description": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?"
          },
          "simplifiedSchema": {
            "fullComment": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
            "nb": "TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
            "properties": [
              {
                "name": "createdAt",
                "required": true,
                "schema": {
                  "fullComment": "When was the page visited",
                  "type": "number"
                }
              },
              {
                "name": "updatedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "deletedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "createdFirstAt",
                "required": true,
                "schema": {
                  "fullComment": "in some cases, data can be created before it was created in our system. In this case, use CreatedFirstAt if this information is important.\n\nTime\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "operationName",
                "required": true,
                "schema": {
                  "fullComment": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "null"
                }
              },
              {
                "name": "projectRelativePath",
                "required": true,
                "schema": {
                  "fullComment": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "operationRelativePath",
                "required": false,
                "schema": {
                  "fullComment": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "id",
                "required": true,
                "schema": {
                  "fullComment": "Should be an unique string By default, you can use `generateId()` to generate a random string of 16 characters. If you wish, you can also use any other string, as long as you are sure it's unique.\n\n# Background Info\n\nazAZ09 characters are easy to copy and provide 62 characters. the goal of an id is to be unique.\n\nthe advantage of a random id compared to an numeric id starting with 1 with auto increment is that you can set them up decentralised.\n\nthe change of duplicate ids gets bigger once you make them shorter the change of finding an existing id gets bigger once you make them shorter\n\nAn Id with 12 characters would provide 3.22e21 combinations.\n\nWhat is the change of duplicate ids? This depends on the amount of identifyable items in the data What is the change of guessing an id? This depends on speed of a brute force attack and the amount of available datapoints. If you can guess 10000 times per second, you can make 864.000.000 guesses. A billion guesses on a dataset of a billion datapoints yields 3226 correct ids on average.\n\nWhy make an id short? I don't know if there's an important reason.\n\nAll in all, I think we should make ids 24 characters by default. This would make it very easy to store, yet, with more than E42 combinations, make it nearly impossible to get duplication or brute force hits.\n\nAn id would look like this:\n\n``` { \"id\": \"sk2EcW9AkZpksk2EcW9AkZpk\" } ```\n\nLooks good to me! Don't think about it and just keep it simple. We can always migrate later to a bigger amount, but I don't see good reason to keep it smaller than this.",
                  "type": "string"
                }
              },
              {
                "name": "categoryStackCalculated",
                "required": false,
                "schema": {
                  "fullComment": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!\n\n",
                  "nb": "Changing this value when updating/upserting, changes where the item is located!",
                  "items": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "name": null
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "deviceId",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "path",
                "required": true,
                "schema": {
                  "fullComment": "complete url of the page that was visited",
                  "type": "string"
                }
              },
              {
                "name": "ipInfo",
                "required": true,
                "schema": {
                  "fullComment": "Information that is inferred from an IP",
                  "properties": [
                    {
                      "name": "ip",
                      "required": true,
                      "schema": {
                        "fullComment": "The ip of the device. Can be a local IP or remote IP.\n\nNB: Port is not included",
                        "nb": "Port is not included",
                        "type": "string"
                      }
                    },
                    {
                      "name": "city",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "position",
                      "required": false,
                      "schema": {
                        "fullComment": "",
                        "properties": [
                          {
                            "name": "latitude",
                            "required": true,
                            "schema": {
                              "type": "number"
                            }
                          },
                          {
                            "name": "longitude",
                            "required": true,
                            "schema": {
                              "type": "number"
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "name": "positionRadiusKm",
                      "required": false,
                      "schema": {
                        "type": "number"
                      }
                    },
                    {
                      "name": "country",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "region",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "timezone",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "type": "object"
                }
              }
            ],
            "type": "object"
          },
          "typeCoverage": 0,
          "rawType": "PageVisit",
          "isArray": false,
          "isEnum": false,
          "isEnumLiteral": false,
          "isObject": false,
          "isPrimitive": false
        },
        "operationName": "peer-types",
        "projectRelativePath": "/operations/tools/p2p/peer-types/db/ts-interfaces/pagevisit.json",
        "operationRelativePath": "/db/ts-interfaces/pagevisit.json"
      },
      "fileLocations": [
        "/db/page-visits.json",
        "/operations/tools/admin-operation/operation-ui/db/page-visits.json",
        "/operations/tools/admin-operation/operation-web/db/page-visits.json",
        "/operations/tools/asset/asset-demo-web/db/page-visits.json",
        "/operations/tools/asset/asset-functions-js/db/page-visits.json",
        "/operations/tools/asset/asset-functions-node/db/page-visits.json",
        "/operations/tools/asset/asset-input/db/page-visits.json",
        "/operations/tools/asset/asset-type/db/page-visits.json",
        "/operations/tools/asset/asset-view/db/page-visits.json",
        "/operations/tools/asset/text-or-binary/db/page-visits.json",
        "/operations/tools/control-fs/folder-get-updated-at/db/page-visits.json",
        "/operations/tools/control-fs/fs-util/db/page-visits.json",
        "/operations/tools/control-fs/fs-util-js/db/page-visits.json",
        "/operations/tools/control-fs/get-associated-md/db/page-visits.json",
        "/operations/tools/control-fs/get-available-folder-path/db/page-visits.json",
        "/operations/tools/control-fs/get-package-json/db/page-visits.json",
        "/operations/tools/control-fs/get-package-source-paths/db/page-visits.json",
        "/operations/tools/control-fs/get-ts-config/db/page-visits.json",
        "/operations/tools/control-fs/path-util/db/page-visits.json",
        "/operations/tools/control-fs/rename-template-files/db/page-visits.json",
        "/operations/tools/control-fs/set-json-key/db/page-visits.json",
        "/operations/tools/control-fs/watch-folders/db/page-visits.json",
        "/operations/tools/control-fs/write-to-assets/db/page-visits.json",
        "/operations/tools/control-project/all/db/page-visits.json",
        "/operations/tools/control-project/deprecated/make-file-type/db/page-visits.json",
        "/operations/tools/control-project/explore-project/db/page-visits.json",
        "/operations/tools/control-project/get-all-operation-source-paths/db/page-visits.json",
        "/operations/tools/control-project/get-path/db/page-visits.json",
        "/operations/tools/control-project/k-explore/db/page-visits.json",
        "/operations/tools/control-project/operation-util/db/page-visits.json",
        "/operations/tools/control-project/pm2-util/db/page-visits.json",
        "/operations/tools/control-system/brightness/db/page-visits.json",
        "/operations/tools/control-system/clean-macos-setup/db/page-visits.json",
        "/operations/tools/control-system/play-music/db/page-visits.json",
        "/operations/tools/control-system/reminders/db/page-visits.json",
        "/operations/tools/control-system/set-random-timezone/db/page-visits.json",
        "/operations/tools/control-system/toggle-dark-mode/db/page-visits.json",
        "/operations/tools/control-system/toggle-screen-sleep/db/page-visits.json",
        "/operations/tools/control-system/volume/db/page-visits.json",
        "/operations/tools/control-system/vscode-open/db/page-visits.json",
        "/operations/tools/conventions/filename-conventions/db/page-visits.json",
        "/operations/tools/conventions/name-conventions/db/page-visits.json",
        "/operations/tools/conventions/port-conventions/db/page-visits.json",
        "/operations/tools/database/database/db/page-visits.json",
        "/operations/tools/database/db-recipes/db/page-visits.json",
        "/operations/tools/database/db-ui/db/page-visits.json",
        "/operations/tools/database/db-web/db/page-visits.json",
        "/operations/tools/database/fs-orm/db/page-visits.json",
        "/operations/tools/database/validate-model/db/page-visits.json",
        "/operations/tools/deployment/bundling/bundle-util/db/page-visits.json",
        "/operations/tools/deployment/bundling/bundle-web/db/page-visits.json",
        "/operations/tools/deployment/bundling/create-backup/db/page-visits.json",
        "/operations/tools/deployment/bundling/create-distribution/db/page-visits.json",
        "/operations/tools/deployment/bundling/db-util/db/page-visits.json",
        "/operations/tools/deployment/bundling/generate-bundle/db/page-visits.json",
        "/operations/tools/deployment/bundling/install-node-modules/db/page-visits.json",
        "/operations/tools/deployment/bundling/yarn-install-new-distribution/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-core/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-server/db/page-visits.json",
        "/operations/tools/generated/sdk/db/page-visits.json",
        "/operations/tools/generated/sdk-api/db/page-visits.json",
        "/operations/tools/generated/sdk-api-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-db/db/page-visits.json",
        "/operations/tools/generated/sdk-env-private/db/page-visits.json",
        "/operations/tools/generated/sdk-env-public/db/page-visits.json",
        "/operations/tools/generated/sdk-function-paths/db/page-visits.json",
        "/operations/tools/generated/sdk-js/db/page-visits.json",
        "/operations/tools/generated/sdk-js-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-operations/db/page-visits.json",
        "/operations/tools/interfaces/api/api/db/page-visits.json",
        "/operations/tools/interfaces/api/api-store/db/page-visits.json",
        "/operations/tools/interfaces/api/api-types/db/page-visits.json",
        "/operations/tools/interfaces/api/deprecated/endpoint-util/db/page-visits.json",
        "/operations/tools/interfaces/api/function-recipes/db/page-visits.json",
        "/operations/tools/interfaces/api/function-server/db/page-visits.json",
        "/operations/tools/interfaces/api/function-server-endpoints/db/page-visits.json",
        "/operations/tools/interfaces/api/server-api-url/db/page-visits.json",
        "/operations/tools/interfaces/api/server-login/db/page-visits.json",
        "/operations/tools/interfaces/auditory-ui/remind-me-in/db/page-visits.json",
        "/operations/tools/interfaces/auditory-ui/say/db/page-visits.json",
        "/operations/tools/interfaces/cli/ask/db/page-visits.json",
        "/operations/tools/interfaces/cli/cli-version-updates/db/page-visits.json",
        "/operations/tools/interfaces/cli/function-util/db/page-visits.json",
        "/operations/tools/interfaces/cli/string-to-json/db/page-visits.json",
        "/operations/tools/interfaces/vui/function-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-expo/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-next/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/next/next-a-link/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-alert/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-asset-input/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-notification/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-router/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-select/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/simplified-schema-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/big-button/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/clickable-icon/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/fancy-loader/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/labeled-button/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/login-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/markdown-parse-transpile-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/spoiler/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/ui-util/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/use-url-store/db/page-visits.json",
        "/operations/tools/language/detect-language/db/page-visits.json",
        "/operations/tools/language/generate-simple-sentence/db/page-visits.json",
        "/operations/tools/language/learn-toki-web/db/page-visits.json",
        "/operations/tools/language/simplify-text/db/page-visits.json",
        "/operations/tools/language/speak-words-to-learn/db/page-visits.json",
        "/operations/tools/markdown-reader/augmented-words/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-functions/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-functions-js/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-types/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-ui/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-web/db/page-visits.json",
        "/operations/tools/p2p/auth-types/db/page-visits.json",
        "/operations/tools/p2p/mail/db/page-visits.json",
        "/operations/tools/p2p/os-config/db/page-visits.json",
        "/operations/tools/p2p/peer-functions/db/page-visits.json",
        "/operations/tools/p2p/peer-types/db/page-visits.json",
        "/operations/tools/p2p/peer-web/db/page-visits.json",
        "/operations/tools/p2p/sms/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/compression/unzip/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/compression/zip/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/csv/csv-util/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-to-md/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-to-say-string/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-util/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-translator/db/page-visits.json",
        "/operations/tools/parsing/parse-primitive/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-csv-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-json-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-kvmd-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-markdown-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-typescript-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/try-parse-json/db/page-visits.json",
        "/operations/tools/parsing/rest-util/db/page-visits.json",
        "/operations/tools/parsing/search/db/page-visits.json",
        "/operations/tools/sensation/orientation/get-location/db/page-visits.json",
        "/operations/tools/sensation/sight/get-light/db/page-visits.json",
        "/operations/tools/social-media/social-media-controller/db/page-visits.json",
        "/operations/tools/social-media/social-media-functions/db/page-visits.json",
        "/operations/tools/social-media/social-media-types/db/page-visits.json",
        "/operations/tools/social-media/social-media-ui/db/page-visits.json",
        "/operations/tools/social-media/social-media-web/db/page-visits.json",
        "/operations/tools/types/bundle-types/db/page-visits.json",
        "/operations/tools/types/code-types/db/page-visits.json",
        "/operations/tools/types/geo-types/db/page-visits.json",
        "/operations/tools/types/invoice-types/db/page-visits.json",
        "/operations/tools/types/language-types/db/page-visits.json",
        "/operations/tools/types/matter-types/db/page-visits.json",
        "/operations/tools/types/model-types/db/page-visits.json",
        "/operations/tools/types/os-types/db/page-visits.json",
        "/operations/tools/typescript/cleanup-typescript-database/db/page-visits.json",
        "/operations/tools/typescript/comment-util/db/page-visits.json",
        "/operations/tools/typescript/compile-typescript/db/page-visits.json",
        "/operations/tools/typescript/find-all-dependency-operations/db/page-visits.json",
        "/operations/tools/typescript/generate-index/db/page-visits.json",
        "/operations/tools/typescript/generate-sdk-operations/db/page-visits.json",
        "/operations/tools/typescript/get-imported-dependencies/db/page-visits.json",
        "/operations/tools/typescript/get-imports-exports/db/page-visits.json",
        "/operations/tools/typescript/get-missing-dependencies/db/page-visits.json",
        "/operations/tools/typescript/index-typescript/db/page-visits.json",
        "/operations/tools/typescript/lint/db/page-visits.json",
        "/operations/tools/typescript/minify-build/db/page-visits.json",
        "/operations/tools/typescript/new-template/db/page-visits.json",
        "/operations/tools/typescript/package-scripts/db/page-visits.json",
        "/operations/tools/typescript/prettier-operation/db/page-visits.json",
        "/operations/tools/typescript/rebuild-operation/db/page-visits.json",
        "/operations/tools/typescript/rename-operation/db/page-visits.json",
        "/operations/tools/typescript/schema-util/db/page-visits.json",
        "/operations/tools/typescript/testing/k-test/db/page-visits.json",
        "/operations/tools/typescript/testing/make-test/db/page-visits.json",
        "/operations/tools/typescript/ts-morph-util/db/page-visits.json",
        "/operations/tools/typescript/watch-operations/db/page-visits.json",
        "/operations/tools/util/child-process-helper/db/page-visits.json",
        "/operations/tools/util/convert-case/db/page-visits.json",
        "/operations/tools/util/execute-command/db/page-visits.json",
        "/operations/tools/util/geo-parse/db/page-visits.json",
        "/operations/tools/util/is-online/db/page-visits.json",
        "/operations/tools/util/js-util/db/page-visits.json",
        "/operations/tools/util/k-dev/db/page-visits.json",
        "/operations/tools/util/log/db/page-visits.json",
        "/operations/tools/util/nodemon/db/page-visits.json",
        "/operations/tools/util/one-by-one/db/page-visits.json",
        "/operations/tools/util/pluralize/db/page-visits.json",
        "/operations/tools/util/run-child-process/db/page-visits.json",
        "/operations/tools/writer/breadcrumbs/db/page-visits.json",
        "/operations/tools/writer/file-icons/db/page-visits.json",
        "/operations/tools/writer/file-search/db/page-visits.json",
        "/operations/tools/writer/file-tabs/db/page-visits.json",
        "/operations/tools/writer/file-writer/db/page-visits.json",
        "/operations/tools/writer/hotkeys/db/page-visits.json",
        "/operations/tools/writer/next-paths/db/page-visits.json",
        "/operations/tools/writer/todo-ui/db/page-visits.json",
        "/operations/tools/writer/todo-web/db/page-visits.json",
        "/operations/tools/writer/writer-demo-web/db/page-visits.json",
        "/operations/tools/writer/writer-functions/db/page-visits.json",
        "/operations/tools/writer/writer-input/db/page-visits.json",
        "/operations/tools/writer/writer-types/db/page-visits.json",
        "/operations/tools/writer/writer-ui/db/page-visits.json",
        "/operations/tools/writer/writer-web/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-types/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-web/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/page-visits.json",
        "/operations/niches/passionfruit/apps/passionfruit-web/db/page-visits.json",
        "/operations/niches/passionfruit/packages/foodchain-recipes/db/page-visits.json",
        "/operations/niches/passionfruit/packages/foodchain-types/db/page-visits.json",
        "/operations/niches/passionfruit/packages/passionfruit-ui/db/page-visits.json",
        "/operations/niches/sprent/parse-address-henrik/db/page-visits.json",
        "/operations/niches/sprent/parse-images/db/page-visits.json"
      ],
      "hasMore": false
    },
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -11
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -1174
      }
    ],
    "id": "uhsiewvrmwptcwdtbjqbyhjl"
  },
  {
    "createdAt": 1667380952498,
    "updatedAt": 1667380952498,
    "deletedAt": 0,
    "createdFirstAt": 1667380952498,
    "functionName": "getDbModel",
    "tsFunctionId": "juyaxxbbboszvendbjbfqomm",
    "inputParameters": [
      "PageVisit",
      {
        "start": 0,
        "limit": 30
      }
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": {
      "start": 0,
      "limit": 30,
      "data": [
        {
          "createdAt": 1667380778410,
          "updatedAt": 1667380778410,
          "deletedAt": 0,
          "createdFirstAt": 1667380778410,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "rhaezabuxdliwytfmjqyhpbq",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380778424,
          "updatedAt": 1667380778424,
          "deletedAt": 0,
          "createdFirstAt": 1667380778424,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "xeukxflymydzuhyduglpeede",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380789166,
          "updatedAt": 1667380789166,
          "deletedAt": 0,
          "createdFirstAt": 1667380789166,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "kadjzdeiomaarcwsonjpintn",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380789693,
          "updatedAt": 1667380789693,
          "deletedAt": 0,
          "createdFirstAt": 1667380789693,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "prhthxdorsnervjhynkunggd",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380792811,
          "updatedAt": 1667380792811,
          "deletedAt": 0,
          "createdFirstAt": 1667380792811,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "qiutzjbokqecdfqjcobaulvi",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380792821,
          "updatedAt": 1667380792821,
          "deletedAt": 0,
          "createdFirstAt": 1667380792821,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "zkoehwlexxrbfkapzhprkdxj",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        }
      ],
      "index": {
        "createdAt": 1667379532235,
        "updatedAt": 1667379532235,
        "deletedAt": 0,
        "createdFirstAt": 1667379532235,
        "id": "pagevisit",
        "name": "PageVisit",
        "slug": "pagevisit",
        "operationRelativeTypescriptFilePath": "src/PageVisit.ts",
        "hasGeneric": false,
        "isExported": true,
        "rawText": "\n\n/**\n * Any visit tracked based on a server request\n *\n * NB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?\n */\nexport interface PageVisit extends DefaultModelType {\n  deviceId: string;\n  /**\n   * complete url of the page that was visited\n   */\n  path: string;\n  /**\n   * When was the page visited\n   */\n  createdAt: number;\n  ipInfo: IPInfo;\n}",
        "extensions": [
          "DefaultModelType"
        ],
        "isOperationIndex": false,
        "description": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
        "dbStorageMethod": "jsonMultiple",
        "isDbModel": true,
        "commentsInside": [],
        "type": {
          "typeDefinition": {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "number",
                "description": "When was the page visited"
              },
              "updatedAt": {
                "$ref": "#/definitions/UpdatedAt"
              },
              "deletedAt": {
                "$ref": "#/definitions/DeletedAt"
              },
              "createdFirstAt": {
                "$ref": "#/definitions/CreatedFirstAt"
              },
              "operationName": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "projectRelativePath": {
                "type": "string",
                "description": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "operationRelativePath": {
                "type": "string",
                "description": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "id": {
                "$ref": "#/definitions/Id"
              },
              "categoryStackCalculated": {
                "$ref": "#/definitions/CategoryStack",
                "description": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!"
              },
              "deviceId": {
                "type": "string"
              },
              "path": {
                "type": "string",
                "description": "complete url of the page that was visited"
              },
              "ipInfo": {
                "$ref": "#/definitions/IPInfo"
              }
            },
            "required": [
              "createdAt",
              "createdFirstAt",
              "deletedAt",
              "deviceId",
              "id",
              "ipInfo",
              "operationName",
              "path",
              "projectRelativePath",
              "updatedAt"
            ],
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Id"
                },
                {
                  "not": {}
                }
              ]
            },
            "description": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?"
          },
          "simplifiedSchema": {
            "fullComment": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
            "nb": "TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
            "properties": [
              {
                "name": "createdAt",
                "required": true,
                "schema": {
                  "fullComment": "When was the page visited",
                  "type": "number"
                }
              },
              {
                "name": "updatedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "deletedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "createdFirstAt",
                "required": true,
                "schema": {
                  "fullComment": "in some cases, data can be created before it was created in our system. In this case, use CreatedFirstAt if this information is important.\n\nTime\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "operationName",
                "required": true,
                "schema": {
                  "fullComment": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "null"
                }
              },
              {
                "name": "projectRelativePath",
                "required": true,
                "schema": {
                  "fullComment": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "operationRelativePath",
                "required": false,
                "schema": {
                  "fullComment": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "id",
                "required": true,
                "schema": {
                  "fullComment": "Should be an unique string By default, you can use `generateId()` to generate a random string of 16 characters. If you wish, you can also use any other string, as long as you are sure it's unique.\n\n# Background Info\n\nazAZ09 characters are easy to copy and provide 62 characters. the goal of an id is to be unique.\n\nthe advantage of a random id compared to an numeric id starting with 1 with auto increment is that you can set them up decentralised.\n\nthe change of duplicate ids gets bigger once you make them shorter the change of finding an existing id gets bigger once you make them shorter\n\nAn Id with 12 characters would provide 3.22e21 combinations.\n\nWhat is the change of duplicate ids? This depends on the amount of identifyable items in the data What is the change of guessing an id? This depends on speed of a brute force attack and the amount of available datapoints. If you can guess 10000 times per second, you can make 864.000.000 guesses. A billion guesses on a dataset of a billion datapoints yields 3226 correct ids on average.\n\nWhy make an id short? I don't know if there's an important reason.\n\nAll in all, I think we should make ids 24 characters by default. This would make it very easy to store, yet, with more than E42 combinations, make it nearly impossible to get duplication or brute force hits.\n\nAn id would look like this:\n\n``` { \"id\": \"sk2EcW9AkZpksk2EcW9AkZpk\" } ```\n\nLooks good to me! Don't think about it and just keep it simple. We can always migrate later to a bigger amount, but I don't see good reason to keep it smaller than this.",
                  "type": "string"
                }
              },
              {
                "name": "categoryStackCalculated",
                "required": false,
                "schema": {
                  "fullComment": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!\n\n",
                  "nb": "Changing this value when updating/upserting, changes where the item is located!",
                  "items": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "name": null
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "deviceId",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "path",
                "required": true,
                "schema": {
                  "fullComment": "complete url of the page that was visited",
                  "type": "string"
                }
              },
              {
                "name": "ipInfo",
                "required": true,
                "schema": {
                  "fullComment": "Information that is inferred from an IP",
                  "properties": [
                    {
                      "name": "ip",
                      "required": true,
                      "schema": {
                        "fullComment": "The ip of the device. Can be a local IP or remote IP.\n\nNB: Port is not included",
                        "nb": "Port is not included",
                        "type": "string"
                      }
                    },
                    {
                      "name": "city",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "position",
                      "required": false,
                      "schema": {
                        "fullComment": "",
                        "properties": [
                          {
                            "name": "latitude",
                            "required": true,
                            "schema": {
                              "type": "number"
                            }
                          },
                          {
                            "name": "longitude",
                            "required": true,
                            "schema": {
                              "type": "number"
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "name": "positionRadiusKm",
                      "required": false,
                      "schema": {
                        "type": "number"
                      }
                    },
                    {
                      "name": "country",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "region",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "timezone",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "type": "object"
                }
              }
            ],
            "type": "object"
          },
          "typeCoverage": 0,
          "rawType": "PageVisit",
          "isArray": false,
          "isEnum": false,
          "isEnumLiteral": false,
          "isObject": false,
          "isPrimitive": false
        },
        "operationName": "peer-types",
        "projectRelativePath": "/operations/tools/p2p/peer-types/db/ts-interfaces/pagevisit.json",
        "operationRelativePath": "/db/ts-interfaces/pagevisit.json"
      },
      "fileLocations": [
        "/db/page-visits.json",
        "/operations/tools/admin-operation/operation-ui/db/page-visits.json",
        "/operations/tools/admin-operation/operation-web/db/page-visits.json",
        "/operations/tools/asset/asset-demo-web/db/page-visits.json",
        "/operations/tools/asset/asset-functions-js/db/page-visits.json",
        "/operations/tools/asset/asset-functions-node/db/page-visits.json",
        "/operations/tools/asset/asset-input/db/page-visits.json",
        "/operations/tools/asset/asset-type/db/page-visits.json",
        "/operations/tools/asset/asset-view/db/page-visits.json",
        "/operations/tools/asset/text-or-binary/db/page-visits.json",
        "/operations/tools/control-fs/folder-get-updated-at/db/page-visits.json",
        "/operations/tools/control-fs/fs-util/db/page-visits.json",
        "/operations/tools/control-fs/fs-util-js/db/page-visits.json",
        "/operations/tools/control-fs/get-associated-md/db/page-visits.json",
        "/operations/tools/control-fs/get-available-folder-path/db/page-visits.json",
        "/operations/tools/control-fs/get-package-json/db/page-visits.json",
        "/operations/tools/control-fs/get-package-source-paths/db/page-visits.json",
        "/operations/tools/control-fs/get-ts-config/db/page-visits.json",
        "/operations/tools/control-fs/path-util/db/page-visits.json",
        "/operations/tools/control-fs/rename-template-files/db/page-visits.json",
        "/operations/tools/control-fs/set-json-key/db/page-visits.json",
        "/operations/tools/control-fs/watch-folders/db/page-visits.json",
        "/operations/tools/control-fs/write-to-assets/db/page-visits.json",
        "/operations/tools/control-project/all/db/page-visits.json",
        "/operations/tools/control-project/deprecated/make-file-type/db/page-visits.json",
        "/operations/tools/control-project/explore-project/db/page-visits.json",
        "/operations/tools/control-project/get-all-operation-source-paths/db/page-visits.json",
        "/operations/tools/control-project/get-path/db/page-visits.json",
        "/operations/tools/control-project/k-explore/db/page-visits.json",
        "/operations/tools/control-project/operation-util/db/page-visits.json",
        "/operations/tools/control-project/pm2-util/db/page-visits.json",
        "/operations/tools/control-system/brightness/db/page-visits.json",
        "/operations/tools/control-system/clean-macos-setup/db/page-visits.json",
        "/operations/tools/control-system/play-music/db/page-visits.json",
        "/operations/tools/control-system/reminders/db/page-visits.json",
        "/operations/tools/control-system/set-random-timezone/db/page-visits.json",
        "/operations/tools/control-system/toggle-dark-mode/db/page-visits.json",
        "/operations/tools/control-system/toggle-screen-sleep/db/page-visits.json",
        "/operations/tools/control-system/volume/db/page-visits.json",
        "/operations/tools/control-system/vscode-open/db/page-visits.json",
        "/operations/tools/conventions/filename-conventions/db/page-visits.json",
        "/operations/tools/conventions/name-conventions/db/page-visits.json",
        "/operations/tools/conventions/port-conventions/db/page-visits.json",
        "/operations/tools/database/database/db/page-visits.json",
        "/operations/tools/database/db-recipes/db/page-visits.json",
        "/operations/tools/database/db-ui/db/page-visits.json",
        "/operations/tools/database/db-web/db/page-visits.json",
        "/operations/tools/database/fs-orm/db/page-visits.json",
        "/operations/tools/database/validate-model/db/page-visits.json",
        "/operations/tools/deployment/bundling/bundle-util/db/page-visits.json",
        "/operations/tools/deployment/bundling/bundle-web/db/page-visits.json",
        "/operations/tools/deployment/bundling/create-backup/db/page-visits.json",
        "/operations/tools/deployment/bundling/create-distribution/db/page-visits.json",
        "/operations/tools/deployment/bundling/db-util/db/page-visits.json",
        "/operations/tools/deployment/bundling/generate-bundle/db/page-visits.json",
        "/operations/tools/deployment/bundling/install-node-modules/db/page-visits.json",
        "/operations/tools/deployment/bundling/yarn-install-new-distribution/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-core/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-server/db/page-visits.json",
        "/operations/tools/generated/sdk/db/page-visits.json",
        "/operations/tools/generated/sdk-api/db/page-visits.json",
        "/operations/tools/generated/sdk-api-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-db/db/page-visits.json",
        "/operations/tools/generated/sdk-env-private/db/page-visits.json",
        "/operations/tools/generated/sdk-env-public/db/page-visits.json",
        "/operations/tools/generated/sdk-function-paths/db/page-visits.json",
        "/operations/tools/generated/sdk-js/db/page-visits.json",
        "/operations/tools/generated/sdk-js-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-operations/db/page-visits.json",
        "/operations/tools/interfaces/api/api/db/page-visits.json",
        "/operations/tools/interfaces/api/api-store/db/page-visits.json",
        "/operations/tools/interfaces/api/api-types/db/page-visits.json",
        "/operations/tools/interfaces/api/deprecated/endpoint-util/db/page-visits.json",
        "/operations/tools/interfaces/api/function-recipes/db/page-visits.json",
        "/operations/tools/interfaces/api/function-server/db/page-visits.json",
        "/operations/tools/interfaces/api/function-server-endpoints/db/page-visits.json",
        "/operations/tools/interfaces/api/server-api-url/db/page-visits.json",
        "/operations/tools/interfaces/api/server-login/db/page-visits.json",
        "/operations/tools/interfaces/auditory-ui/remind-me-in/db/page-visits.json",
        "/operations/tools/interfaces/auditory-ui/say/db/page-visits.json",
        "/operations/tools/interfaces/cli/ask/db/page-visits.json",
        "/operations/tools/interfaces/cli/cli-version-updates/db/page-visits.json",
        "/operations/tools/interfaces/cli/function-util/db/page-visits.json",
        "/operations/tools/interfaces/cli/string-to-json/db/page-visits.json",
        "/operations/tools/interfaces/vui/function-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-expo/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-next/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/next/next-a-link/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-alert/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-asset-input/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-notification/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-router/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-select/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/simplified-schema-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/big-button/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/clickable-icon/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/fancy-loader/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/labeled-button/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/login-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/markdown-parse-transpile-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/spoiler/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/ui-util/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/use-url-store/db/page-visits.json",
        "/operations/tools/language/detect-language/db/page-visits.json",
        "/operations/tools/language/generate-simple-sentence/db/page-visits.json",
        "/operations/tools/language/learn-toki-web/db/page-visits.json",
        "/operations/tools/language/simplify-text/db/page-visits.json",
        "/operations/tools/language/speak-words-to-learn/db/page-visits.json",
        "/operations/tools/markdown-reader/augmented-words/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-functions/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-functions-js/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-types/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-ui/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-web/db/page-visits.json",
        "/operations/tools/p2p/auth-types/db/page-visits.json",
        "/operations/tools/p2p/mail/db/page-visits.json",
        "/operations/tools/p2p/os-config/db/page-visits.json",
        "/operations/tools/p2p/peer-functions/db/page-visits.json",
        "/operations/tools/p2p/peer-types/db/page-visits.json",
        "/operations/tools/p2p/peer-web/db/page-visits.json",
        "/operations/tools/p2p/sms/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/compression/unzip/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/compression/zip/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/csv/csv-util/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-to-md/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-to-say-string/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-util/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-translator/db/page-visits.json",
        "/operations/tools/parsing/parse-primitive/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-csv-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-json-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-kvmd-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-markdown-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-typescript-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/try-parse-json/db/page-visits.json",
        "/operations/tools/parsing/rest-util/db/page-visits.json",
        "/operations/tools/parsing/search/db/page-visits.json",
        "/operations/tools/sensation/orientation/get-location/db/page-visits.json",
        "/operations/tools/sensation/sight/get-light/db/page-visits.json",
        "/operations/tools/social-media/social-media-controller/db/page-visits.json",
        "/operations/tools/social-media/social-media-functions/db/page-visits.json",
        "/operations/tools/social-media/social-media-types/db/page-visits.json",
        "/operations/tools/social-media/social-media-ui/db/page-visits.json",
        "/operations/tools/social-media/social-media-web/db/page-visits.json",
        "/operations/tools/types/bundle-types/db/page-visits.json",
        "/operations/tools/types/code-types/db/page-visits.json",
        "/operations/tools/types/geo-types/db/page-visits.json",
        "/operations/tools/types/invoice-types/db/page-visits.json",
        "/operations/tools/types/language-types/db/page-visits.json",
        "/operations/tools/types/matter-types/db/page-visits.json",
        "/operations/tools/types/model-types/db/page-visits.json",
        "/operations/tools/types/os-types/db/page-visits.json",
        "/operations/tools/typescript/cleanup-typescript-database/db/page-visits.json",
        "/operations/tools/typescript/comment-util/db/page-visits.json",
        "/operations/tools/typescript/compile-typescript/db/page-visits.json",
        "/operations/tools/typescript/find-all-dependency-operations/db/page-visits.json",
        "/operations/tools/typescript/generate-index/db/page-visits.json",
        "/operations/tools/typescript/generate-sdk-operations/db/page-visits.json",
        "/operations/tools/typescript/get-imported-dependencies/db/page-visits.json",
        "/operations/tools/typescript/get-imports-exports/db/page-visits.json",
        "/operations/tools/typescript/get-missing-dependencies/db/page-visits.json",
        "/operations/tools/typescript/index-typescript/db/page-visits.json",
        "/operations/tools/typescript/lint/db/page-visits.json",
        "/operations/tools/typescript/minify-build/db/page-visits.json",
        "/operations/tools/typescript/new-template/db/page-visits.json",
        "/operations/tools/typescript/package-scripts/db/page-visits.json",
        "/operations/tools/typescript/prettier-operation/db/page-visits.json",
        "/operations/tools/typescript/rebuild-operation/db/page-visits.json",
        "/operations/tools/typescript/rename-operation/db/page-visits.json",
        "/operations/tools/typescript/schema-util/db/page-visits.json",
        "/operations/tools/typescript/testing/k-test/db/page-visits.json",
        "/operations/tools/typescript/testing/make-test/db/page-visits.json",
        "/operations/tools/typescript/ts-morph-util/db/page-visits.json",
        "/operations/tools/typescript/watch-operations/db/page-visits.json",
        "/operations/tools/util/child-process-helper/db/page-visits.json",
        "/operations/tools/util/convert-case/db/page-visits.json",
        "/operations/tools/util/execute-command/db/page-visits.json",
        "/operations/tools/util/geo-parse/db/page-visits.json",
        "/operations/tools/util/is-online/db/page-visits.json",
        "/operations/tools/util/js-util/db/page-visits.json",
        "/operations/tools/util/k-dev/db/page-visits.json",
        "/operations/tools/util/log/db/page-visits.json",
        "/operations/tools/util/nodemon/db/page-visits.json",
        "/operations/tools/util/one-by-one/db/page-visits.json",
        "/operations/tools/util/pluralize/db/page-visits.json",
        "/operations/tools/util/run-child-process/db/page-visits.json",
        "/operations/tools/writer/breadcrumbs/db/page-visits.json",
        "/operations/tools/writer/file-icons/db/page-visits.json",
        "/operations/tools/writer/file-search/db/page-visits.json",
        "/operations/tools/writer/file-tabs/db/page-visits.json",
        "/operations/tools/writer/file-writer/db/page-visits.json",
        "/operations/tools/writer/hotkeys/db/page-visits.json",
        "/operations/tools/writer/next-paths/db/page-visits.json",
        "/operations/tools/writer/todo-ui/db/page-visits.json",
        "/operations/tools/writer/todo-web/db/page-visits.json",
        "/operations/tools/writer/writer-demo-web/db/page-visits.json",
        "/operations/tools/writer/writer-functions/db/page-visits.json",
        "/operations/tools/writer/writer-input/db/page-visits.json",
        "/operations/tools/writer/writer-types/db/page-visits.json",
        "/operations/tools/writer/writer-ui/db/page-visits.json",
        "/operations/tools/writer/writer-web/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-types/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-web/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/page-visits.json",
        "/operations/niches/passionfruit/apps/passionfruit-web/db/page-visits.json",
        "/operations/niches/passionfruit/packages/foodchain-recipes/db/page-visits.json",
        "/operations/niches/passionfruit/packages/foodchain-types/db/page-visits.json",
        "/operations/niches/passionfruit/packages/passionfruit-ui/db/page-visits.json",
        "/operations/niches/sprent/parse-address-henrik/db/page-visits.json",
        "/operations/niches/sprent/parse-images/db/page-visits.json"
      ],
      "hasMore": false
    },
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -1
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -587
      }
    ],
    "id": "tvqgzkuododamabzoahqrncs"
  },
  {
    "createdAt": 1667380953957,
    "updatedAt": 1667380953957,
    "deletedAt": 0,
    "createdFirstAt": 1667380953957,
    "functionName": "getDbModel",
    "tsFunctionId": "juyaxxbbboszvendbjbfqomm",
    "inputParameters": [
      "PageVisit",
      {
        "start": 0,
        "limit": 30
      }
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": {
      "start": 0,
      "limit": 30,
      "data": [
        {
          "createdAt": 1667380778410,
          "updatedAt": 1667380778410,
          "deletedAt": 0,
          "createdFirstAt": 1667380778410,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "rhaezabuxdliwytfmjqyhpbq",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380778424,
          "updatedAt": 1667380778424,
          "deletedAt": 0,
          "createdFirstAt": 1667380778424,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "xeukxflymydzuhyduglpeede",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380789166,
          "updatedAt": 1667380789166,
          "deletedAt": 0,
          "createdFirstAt": 1667380789166,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "kadjzdeiomaarcwsonjpintn",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380789693,
          "updatedAt": 1667380789693,
          "deletedAt": 0,
          "createdFirstAt": 1667380789693,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "prhthxdorsnervjhynkunggd",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380792811,
          "updatedAt": 1667380792811,
          "deletedAt": 0,
          "createdFirstAt": 1667380792811,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "qiutzjbokqecdfqjcobaulvi",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        },
        {
          "createdAt": 1667380792821,
          "updatedAt": 1667380792821,
          "deletedAt": 0,
          "createdFirstAt": 1667380792821,
          "ipInfo": {
            "ip": "::1"
          },
          "path": "http://localhost:4202/",
          "id": "zkoehwlexxrbfkapzhprkdxj",
          "operationName": null,
          "projectRelativePath": "/db/page-visits.json"
        }
      ],
      "index": {
        "createdAt": 1667379532235,
        "updatedAt": 1667379532235,
        "deletedAt": 0,
        "createdFirstAt": 1667379532235,
        "id": "pagevisit",
        "name": "PageVisit",
        "slug": "pagevisit",
        "operationRelativeTypescriptFilePath": "src/PageVisit.ts",
        "hasGeneric": false,
        "isExported": true,
        "rawText": "\n\n/**\n * Any visit tracked based on a server request\n *\n * NB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?\n */\nexport interface PageVisit extends DefaultModelType {\n  deviceId: string;\n  /**\n   * complete url of the page that was visited\n   */\n  path: string;\n  /**\n   * When was the page visited\n   */\n  createdAt: number;\n  ipInfo: IPInfo;\n}",
        "extensions": [
          "DefaultModelType"
        ],
        "isOperationIndex": false,
        "description": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
        "dbStorageMethod": "jsonMultiple",
        "isDbModel": true,
        "commentsInside": [],
        "type": {
          "typeDefinition": {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "number",
                "description": "When was the page visited"
              },
              "updatedAt": {
                "$ref": "#/definitions/UpdatedAt"
              },
              "deletedAt": {
                "$ref": "#/definitions/DeletedAt"
              },
              "createdFirstAt": {
                "$ref": "#/definitions/CreatedFirstAt"
              },
              "operationName": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "projectRelativePath": {
                "type": "string",
                "description": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "operationRelativePath": {
                "type": "string",
                "description": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "id": {
                "$ref": "#/definitions/Id"
              },
              "categoryStackCalculated": {
                "$ref": "#/definitions/CategoryStack",
                "description": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!"
              },
              "deviceId": {
                "type": "string"
              },
              "path": {
                "type": "string",
                "description": "complete url of the page that was visited"
              },
              "ipInfo": {
                "$ref": "#/definitions/IPInfo"
              }
            },
            "required": [
              "createdAt",
              "createdFirstAt",
              "deletedAt",
              "deviceId",
              "id",
              "ipInfo",
              "operationName",
              "path",
              "projectRelativePath",
              "updatedAt"
            ],
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Id"
                },
                {
                  "not": {}
                }
              ]
            },
            "description": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?"
          },
          "simplifiedSchema": {
            "fullComment": "Any visit tracked based on a server request\n\nNB: TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
            "nb": "TODO: it might occur that a page fetches multiple api endpoints, which will create duplicate data here. How do I fix that?",
            "properties": [
              {
                "name": "createdAt",
                "required": true,
                "schema": {
                  "fullComment": "When was the page visited",
                  "type": "number"
                }
              },
              {
                "name": "updatedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "deletedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "createdFirstAt",
                "required": true,
                "schema": {
                  "fullComment": "in some cases, data can be created before it was created in our system. In this case, use CreatedFirstAt if this information is important.\n\nTime\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "operationName",
                "required": true,
                "schema": {
                  "fullComment": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "null"
                }
              },
              {
                "name": "projectRelativePath",
                "required": true,
                "schema": {
                  "fullComment": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "operationRelativePath",
                "required": false,
                "schema": {
                  "fullComment": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "id",
                "required": true,
                "schema": {
                  "fullComment": "Should be an unique string By default, you can use `generateId()` to generate a random string of 16 characters. If you wish, you can also use any other string, as long as you are sure it's unique.\n\n# Background Info\n\nazAZ09 characters are easy to copy and provide 62 characters. the goal of an id is to be unique.\n\nthe advantage of a random id compared to an numeric id starting with 1 with auto increment is that you can set them up decentralised.\n\nthe change of duplicate ids gets bigger once you make them shorter the change of finding an existing id gets bigger once you make them shorter\n\nAn Id with 12 characters would provide 3.22e21 combinations.\n\nWhat is the change of duplicate ids? This depends on the amount of identifyable items in the data What is the change of guessing an id? This depends on speed of a brute force attack and the amount of available datapoints. If you can guess 10000 times per second, you can make 864.000.000 guesses. A billion guesses on a dataset of a billion datapoints yields 3226 correct ids on average.\n\nWhy make an id short? I don't know if there's an important reason.\n\nAll in all, I think we should make ids 24 characters by default. This would make it very easy to store, yet, with more than E42 combinations, make it nearly impossible to get duplication or brute force hits.\n\nAn id would look like this:\n\n``` { \"id\": \"sk2EcW9AkZpksk2EcW9AkZpk\" } ```\n\nLooks good to me! Don't think about it and just keep it simple. We can always migrate later to a bigger amount, but I don't see good reason to keep it smaller than this.",
                  "type": "string"
                }
              },
              {
                "name": "categoryStackCalculated",
                "required": false,
                "schema": {
                  "fullComment": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!\n\n",
                  "nb": "Changing this value when updating/upserting, changes where the item is located!",
                  "items": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "name": null
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "deviceId",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "path",
                "required": true,
                "schema": {
                  "fullComment": "complete url of the page that was visited",
                  "type": "string"
                }
              },
              {
                "name": "ipInfo",
                "required": true,
                "schema": {
                  "fullComment": "Information that is inferred from an IP",
                  "properties": [
                    {
                      "name": "ip",
                      "required": true,
                      "schema": {
                        "fullComment": "The ip of the device. Can be a local IP or remote IP.\n\nNB: Port is not included",
                        "nb": "Port is not included",
                        "type": "string"
                      }
                    },
                    {
                      "name": "city",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "position",
                      "required": false,
                      "schema": {
                        "fullComment": "",
                        "properties": [
                          {
                            "name": "latitude",
                            "required": true,
                            "schema": {
                              "type": "number"
                            }
                          },
                          {
                            "name": "longitude",
                            "required": true,
                            "schema": {
                              "type": "number"
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "name": "positionRadiusKm",
                      "required": false,
                      "schema": {
                        "type": "number"
                      }
                    },
                    {
                      "name": "country",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "region",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "timezone",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "type": "object"
                }
              }
            ],
            "type": "object"
          },
          "typeCoverage": 0,
          "rawType": "PageVisit",
          "isArray": false,
          "isEnum": false,
          "isEnumLiteral": false,
          "isObject": false,
          "isPrimitive": false
        },
        "operationName": "peer-types",
        "projectRelativePath": "/operations/tools/p2p/peer-types/db/ts-interfaces/pagevisit.json",
        "operationRelativePath": "/db/ts-interfaces/pagevisit.json"
      },
      "fileLocations": [
        "/db/page-visits.json",
        "/operations/tools/admin-operation/operation-ui/db/page-visits.json",
        "/operations/tools/admin-operation/operation-web/db/page-visits.json",
        "/operations/tools/asset/asset-demo-web/db/page-visits.json",
        "/operations/tools/asset/asset-functions-js/db/page-visits.json",
        "/operations/tools/asset/asset-functions-node/db/page-visits.json",
        "/operations/tools/asset/asset-input/db/page-visits.json",
        "/operations/tools/asset/asset-type/db/page-visits.json",
        "/operations/tools/asset/asset-view/db/page-visits.json",
        "/operations/tools/asset/text-or-binary/db/page-visits.json",
        "/operations/tools/control-fs/folder-get-updated-at/db/page-visits.json",
        "/operations/tools/control-fs/fs-util/db/page-visits.json",
        "/operations/tools/control-fs/fs-util-js/db/page-visits.json",
        "/operations/tools/control-fs/get-associated-md/db/page-visits.json",
        "/operations/tools/control-fs/get-available-folder-path/db/page-visits.json",
        "/operations/tools/control-fs/get-package-json/db/page-visits.json",
        "/operations/tools/control-fs/get-package-source-paths/db/page-visits.json",
        "/operations/tools/control-fs/get-ts-config/db/page-visits.json",
        "/operations/tools/control-fs/path-util/db/page-visits.json",
        "/operations/tools/control-fs/rename-template-files/db/page-visits.json",
        "/operations/tools/control-fs/set-json-key/db/page-visits.json",
        "/operations/tools/control-fs/watch-folders/db/page-visits.json",
        "/operations/tools/control-fs/write-to-assets/db/page-visits.json",
        "/operations/tools/control-project/all/db/page-visits.json",
        "/operations/tools/control-project/deprecated/make-file-type/db/page-visits.json",
        "/operations/tools/control-project/explore-project/db/page-visits.json",
        "/operations/tools/control-project/get-all-operation-source-paths/db/page-visits.json",
        "/operations/tools/control-project/get-path/db/page-visits.json",
        "/operations/tools/control-project/k-explore/db/page-visits.json",
        "/operations/tools/control-project/operation-util/db/page-visits.json",
        "/operations/tools/control-project/pm2-util/db/page-visits.json",
        "/operations/tools/control-system/brightness/db/page-visits.json",
        "/operations/tools/control-system/clean-macos-setup/db/page-visits.json",
        "/operations/tools/control-system/play-music/db/page-visits.json",
        "/operations/tools/control-system/reminders/db/page-visits.json",
        "/operations/tools/control-system/set-random-timezone/db/page-visits.json",
        "/operations/tools/control-system/toggle-dark-mode/db/page-visits.json",
        "/operations/tools/control-system/toggle-screen-sleep/db/page-visits.json",
        "/operations/tools/control-system/volume/db/page-visits.json",
        "/operations/tools/control-system/vscode-open/db/page-visits.json",
        "/operations/tools/conventions/filename-conventions/db/page-visits.json",
        "/operations/tools/conventions/name-conventions/db/page-visits.json",
        "/operations/tools/conventions/port-conventions/db/page-visits.json",
        "/operations/tools/database/database/db/page-visits.json",
        "/operations/tools/database/db-recipes/db/page-visits.json",
        "/operations/tools/database/db-ui/db/page-visits.json",
        "/operations/tools/database/db-web/db/page-visits.json",
        "/operations/tools/database/fs-orm/db/page-visits.json",
        "/operations/tools/database/validate-model/db/page-visits.json",
        "/operations/tools/deployment/bundling/bundle-util/db/page-visits.json",
        "/operations/tools/deployment/bundling/bundle-web/db/page-visits.json",
        "/operations/tools/deployment/bundling/create-backup/db/page-visits.json",
        "/operations/tools/deployment/bundling/create-distribution/db/page-visits.json",
        "/operations/tools/deployment/bundling/db-util/db/page-visits.json",
        "/operations/tools/deployment/bundling/generate-bundle/db/page-visits.json",
        "/operations/tools/deployment/bundling/install-node-modules/db/page-visits.json",
        "/operations/tools/deployment/bundling/yarn-install-new-distribution/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-core/db/page-visits.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-server/db/page-visits.json",
        "/operations/tools/generated/sdk/db/page-visits.json",
        "/operations/tools/generated/sdk-api/db/page-visits.json",
        "/operations/tools/generated/sdk-api-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-db/db/page-visits.json",
        "/operations/tools/generated/sdk-env-private/db/page-visits.json",
        "/operations/tools/generated/sdk-env-public/db/page-visits.json",
        "/operations/tools/generated/sdk-function-paths/db/page-visits.json",
        "/operations/tools/generated/sdk-js/db/page-visits.json",
        "/operations/tools/generated/sdk-js-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-keys/db/page-visits.json",
        "/operations/tools/generated/sdk-operations/db/page-visits.json",
        "/operations/tools/interfaces/api/api/db/page-visits.json",
        "/operations/tools/interfaces/api/api-store/db/page-visits.json",
        "/operations/tools/interfaces/api/api-types/db/page-visits.json",
        "/operations/tools/interfaces/api/deprecated/endpoint-util/db/page-visits.json",
        "/operations/tools/interfaces/api/function-recipes/db/page-visits.json",
        "/operations/tools/interfaces/api/function-server/db/page-visits.json",
        "/operations/tools/interfaces/api/function-server-endpoints/db/page-visits.json",
        "/operations/tools/interfaces/api/server-api-url/db/page-visits.json",
        "/operations/tools/interfaces/api/server-login/db/page-visits.json",
        "/operations/tools/interfaces/auditory-ui/remind-me-in/db/page-visits.json",
        "/operations/tools/interfaces/auditory-ui/say/db/page-visits.json",
        "/operations/tools/interfaces/cli/ask/db/page-visits.json",
        "/operations/tools/interfaces/cli/cli-version-updates/db/page-visits.json",
        "/operations/tools/interfaces/cli/function-util/db/page-visits.json",
        "/operations/tools/interfaces/cli/string-to-json/db/page-visits.json",
        "/operations/tools/interfaces/vui/function-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-expo/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-next/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/next/next-a-link/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-alert/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-asset-input/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-notification/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-router/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-select/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/page-visits.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/simplified-schema-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/big-button/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/clickable-icon/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/fancy-loader/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/labeled-button/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/login-form/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/markdown-parse-transpile-ui/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/spoiler/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/ui-util/db/page-visits.json",
        "/operations/tools/interfaces/vui/vui-elements/use-url-store/db/page-visits.json",
        "/operations/tools/language/detect-language/db/page-visits.json",
        "/operations/tools/language/generate-simple-sentence/db/page-visits.json",
        "/operations/tools/language/learn-toki-web/db/page-visits.json",
        "/operations/tools/language/simplify-text/db/page-visits.json",
        "/operations/tools/language/speak-words-to-learn/db/page-visits.json",
        "/operations/tools/markdown-reader/augmented-words/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-functions/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-functions-js/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-types/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-ui/db/page-visits.json",
        "/operations/tools/markdown-reader/markdown-reader-web/db/page-visits.json",
        "/operations/tools/p2p/auth-types/db/page-visits.json",
        "/operations/tools/p2p/mail/db/page-visits.json",
        "/operations/tools/p2p/os-config/db/page-visits.json",
        "/operations/tools/p2p/peer-functions/db/page-visits.json",
        "/operations/tools/p2p/peer-types/db/page-visits.json",
        "/operations/tools/p2p/peer-web/db/page-visits.json",
        "/operations/tools/p2p/sms/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/compression/unzip/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/compression/zip/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/csv/csv-util/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-to-md/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-to-say-string/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/json/json-util/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/page-visits.json",
        "/operations/tools/parsing/file-conversion/md/markdown-translator/db/page-visits.json",
        "/operations/tools/parsing/parse-primitive/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-csv-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-json-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-kvmd-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-markdown-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/read-typescript-file/db/page-visits.json",
        "/operations/tools/parsing/read-files/try-parse-json/db/page-visits.json",
        "/operations/tools/parsing/rest-util/db/page-visits.json",
        "/operations/tools/parsing/search/db/page-visits.json",
        "/operations/tools/sensation/orientation/get-location/db/page-visits.json",
        "/operations/tools/sensation/sight/get-light/db/page-visits.json",
        "/operations/tools/social-media/social-media-controller/db/page-visits.json",
        "/operations/tools/social-media/social-media-functions/db/page-visits.json",
        "/operations/tools/social-media/social-media-types/db/page-visits.json",
        "/operations/tools/social-media/social-media-ui/db/page-visits.json",
        "/operations/tools/social-media/social-media-web/db/page-visits.json",
        "/operations/tools/types/bundle-types/db/page-visits.json",
        "/operations/tools/types/code-types/db/page-visits.json",
        "/operations/tools/types/geo-types/db/page-visits.json",
        "/operations/tools/types/invoice-types/db/page-visits.json",
        "/operations/tools/types/language-types/db/page-visits.json",
        "/operations/tools/types/matter-types/db/page-visits.json",
        "/operations/tools/types/model-types/db/page-visits.json",
        "/operations/tools/types/os-types/db/page-visits.json",
        "/operations/tools/typescript/cleanup-typescript-database/db/page-visits.json",
        "/operations/tools/typescript/comment-util/db/page-visits.json",
        "/operations/tools/typescript/compile-typescript/db/page-visits.json",
        "/operations/tools/typescript/find-all-dependency-operations/db/page-visits.json",
        "/operations/tools/typescript/generate-index/db/page-visits.json",
        "/operations/tools/typescript/generate-sdk-operations/db/page-visits.json",
        "/operations/tools/typescript/get-imported-dependencies/db/page-visits.json",
        "/operations/tools/typescript/get-imports-exports/db/page-visits.json",
        "/operations/tools/typescript/get-missing-dependencies/db/page-visits.json",
        "/operations/tools/typescript/index-typescript/db/page-visits.json",
        "/operations/tools/typescript/lint/db/page-visits.json",
        "/operations/tools/typescript/minify-build/db/page-visits.json",
        "/operations/tools/typescript/new-template/db/page-visits.json",
        "/operations/tools/typescript/package-scripts/db/page-visits.json",
        "/operations/tools/typescript/prettier-operation/db/page-visits.json",
        "/operations/tools/typescript/rebuild-operation/db/page-visits.json",
        "/operations/tools/typescript/rename-operation/db/page-visits.json",
        "/operations/tools/typescript/schema-util/db/page-visits.json",
        "/operations/tools/typescript/testing/k-test/db/page-visits.json",
        "/operations/tools/typescript/testing/make-test/db/page-visits.json",
        "/operations/tools/typescript/ts-morph-util/db/page-visits.json",
        "/operations/tools/typescript/watch-operations/db/page-visits.json",
        "/operations/tools/util/child-process-helper/db/page-visits.json",
        "/operations/tools/util/convert-case/db/page-visits.json",
        "/operations/tools/util/execute-command/db/page-visits.json",
        "/operations/tools/util/geo-parse/db/page-visits.json",
        "/operations/tools/util/is-online/db/page-visits.json",
        "/operations/tools/util/js-util/db/page-visits.json",
        "/operations/tools/util/k-dev/db/page-visits.json",
        "/operations/tools/util/log/db/page-visits.json",
        "/operations/tools/util/nodemon/db/page-visits.json",
        "/operations/tools/util/one-by-one/db/page-visits.json",
        "/operations/tools/util/pluralize/db/page-visits.json",
        "/operations/tools/util/run-child-process/db/page-visits.json",
        "/operations/tools/writer/breadcrumbs/db/page-visits.json",
        "/operations/tools/writer/file-icons/db/page-visits.json",
        "/operations/tools/writer/file-search/db/page-visits.json",
        "/operations/tools/writer/file-tabs/db/page-visits.json",
        "/operations/tools/writer/file-writer/db/page-visits.json",
        "/operations/tools/writer/hotkeys/db/page-visits.json",
        "/operations/tools/writer/next-paths/db/page-visits.json",
        "/operations/tools/writer/todo-ui/db/page-visits.json",
        "/operations/tools/writer/todo-web/db/page-visits.json",
        "/operations/tools/writer/writer-demo-web/db/page-visits.json",
        "/operations/tools/writer/writer-functions/db/page-visits.json",
        "/operations/tools/writer/writer-input/db/page-visits.json",
        "/operations/tools/writer/writer-types/db/page-visits.json",
        "/operations/tools/writer/writer-ui/db/page-visits.json",
        "/operations/tools/writer/writer-web/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-types/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-web/db/page-visits.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/page-visits.json",
        "/operations/niches/passionfruit/apps/passionfruit-web/db/page-visits.json",
        "/operations/niches/passionfruit/packages/foodchain-recipes/db/page-visits.json",
        "/operations/niches/passionfruit/packages/foodchain-types/db/page-visits.json",
        "/operations/niches/passionfruit/packages/passionfruit-ui/db/page-visits.json",
        "/operations/niches/sprent/parse-address-henrik/db/page-visits.json",
        "/operations/niches/sprent/parse-images/db/page-visits.json"
      ],
      "hasMore": false
    },
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -2
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -585
      }
    ],
    "id": "yvhsaezvqhwdigumsllkhndj"
  },
  {
    "createdAt": 1667380957640,
    "updatedAt": 1667380957640,
    "deletedAt": 0,
    "createdFirstAt": 1667380957640,
    "functionName": "getReferencableModelData",
    "tsFunctionId": "nlwqlrrovbinvcftglpdofue",
    "inputParameters": [
      "Device"
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": [
      {
        "id": "kwslcomzoevwqsybcctuswkr",
        "name": "mac-os-safari-undefined-undefined-undefined-1-lnzt",
        "slug": "mac-os-safari-undefined-undefined-undefined-1-lnzt"
      },
      {
        "id": "wvmyozyjuaennhlckkdpxziw",
        "name": "mac-os-safari-undefined-undefined-undefined-1-aete",
        "slug": "mac-os-safari-undefined-undefined-undefined-1-aete"
      },
      {
        "id": "vaqwroeavhjmfcjzehabvvcp",
        "name": "mac-os-safari-undefined-undefined-undefined-1-bwjw",
        "slug": "mac-os-safari-undefined-undefined-undefined-1-bwjw"
      },
      {
        "id": "ftqcaqsfhgxulpkttbzjkzcc",
        "name": "mac-os-safari-undefined-undefined-undefined-1-tjvx",
        "slug": "mac-os-safari-undefined-undefined-undefined-1-tjvx"
      },
      {
        "id": "ucznkcimhvixxjphnapbjnzq",
        "name": "mac-os-safari-undefined-undefined-undefined-1-pwym",
        "slug": "mac-os-safari-undefined-undefined-undefined-1-pwym"
      },
      {
        "id": "lhfbwwbbkisrtucdcvgzioow",
        "name": "mac-os-safari-undefined-undefined-undefined-1-wmah",
        "slug": "mac-os-safari-undefined-undefined-undefined-1-wmah"
      }
    ],
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -2
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -210
      }
    ],
    "id": "pjvxcbdekgsmgqmetvuiyony"
  },
  {
    "createdAt": 1667380958094,
    "updatedAt": 1667380958094,
    "deletedAt": 0,
    "createdFirstAt": 1667380958094,
    "functionName": "getDbModel",
    "tsFunctionId": "juyaxxbbboszvendbjbfqomm",
    "inputParameters": [
      "Device",
      {
        "start": 0,
        "limit": 30
      }
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": {
      "start": 0,
      "limit": 30,
      "data": [
        {
          "createdAt": 1667380778425,
          "updatedAt": 1667380778425,
          "deletedAt": 0,
          "createdFirstAt": 1667380778425,
          "authToken": "jcijvucgciyqnikmpvtrbnnm",
          "authenticationMethods": [],
          "ip": "::1",
          "lastOnlineAt": 0,
          "lastSyncDatabaseAtObject": {},
          "name": "mac-os-safari-undefined-undefined-undefined-1-lnzt",
          "origins": [
            "http://localhost:4202"
          ],
          "previousIps": [],
          "userAgent": {
            "ua": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
            "browser": {
              "name": "Safari",
              "version": "15.6.1",
              "major": "15"
            },
            "engine": {
              "name": "WebKit",
              "version": "605.1.15"
            },
            "os": {
              "name": "Mac OS",
              "version": "10.15.7"
            },
            "device": {},
            "cpu": {}
          },
          "userAgentString": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
          "hasPapi": false,
          "slug": "mac-os-safari-undefined-undefined-undefined-1-lnzt",
          "id": "kwslcomzoevwqsybcctuswkr",
          "operationName": null,
          "projectRelativePath": "/db/devices.json"
        },
        {
          "createdAt": 1667380778427,
          "updatedAt": 1667380778427,
          "deletedAt": 0,
          "createdFirstAt": 1667380778427,
          "authToken": "jcijvucgciyqnikmpvtrbnnm",
          "authenticationMethods": [],
          "ip": "::1",
          "lastOnlineAt": 0,
          "lastSyncDatabaseAtObject": {},
          "name": "mac-os-safari-undefined-undefined-undefined-1-aete",
          "origins": [
            "http://localhost:4202"
          ],
          "previousIps": [],
          "userAgent": {
            "ua": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
            "browser": {
              "name": "Safari",
              "version": "15.6.1",
              "major": "15"
            },
            "engine": {
              "name": "WebKit",
              "version": "605.1.15"
            },
            "os": {
              "name": "Mac OS",
              "version": "10.15.7"
            },
            "device": {},
            "cpu": {}
          },
          "userAgentString": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
          "hasPapi": false,
          "slug": "mac-os-safari-undefined-undefined-undefined-1-aete",
          "id": "wvmyozyjuaennhlckkdpxziw",
          "operationName": null,
          "projectRelativePath": "/db/devices.json"
        },
        {
          "createdAt": 1667380789168,
          "updatedAt": 1667380789168,
          "deletedAt": 0,
          "createdFirstAt": 1667380789168,
          "authToken": "jcijvucgciyqnikmpvtrbnnm",
          "authenticationMethods": [],
          "ip": "::1",
          "lastOnlineAt": 0,
          "lastSyncDatabaseAtObject": {},
          "name": "mac-os-safari-undefined-undefined-undefined-1-bwjw",
          "origins": [
            "http://localhost:4202"
          ],
          "previousIps": [],
          "userAgent": {
            "ua": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
            "browser": {
              "name": "Safari",
              "version": "15.6.1",
              "major": "15"
            },
            "engine": {
              "name": "WebKit",
              "version": "605.1.15"
            },
            "os": {
              "name": "Mac OS",
              "version": "10.15.7"
            },
            "device": {},
            "cpu": {}
          },
          "userAgentString": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
          "hasPapi": false,
          "slug": "mac-os-safari-undefined-undefined-undefined-1-bwjw",
          "id": "vaqwroeavhjmfcjzehabvvcp",
          "operationName": null,
          "projectRelativePath": "/db/devices.json"
        },
        {
          "createdAt": 1667380789694,
          "updatedAt": 1667380789694,
          "deletedAt": 0,
          "createdFirstAt": 1667380789694,
          "authToken": "jcijvucgciyqnikmpvtrbnnm",
          "authenticationMethods": [],
          "ip": "::1",
          "lastOnlineAt": 0,
          "lastSyncDatabaseAtObject": {},
          "name": "mac-os-safari-undefined-undefined-undefined-1-tjvx",
          "origins": [
            "http://localhost:4202"
          ],
          "previousIps": [],
          "userAgent": {
            "ua": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
            "browser": {
              "name": "Safari",
              "version": "15.6.1",
              "major": "15"
            },
            "engine": {
              "name": "WebKit",
              "version": "605.1.15"
            },
            "os": {
              "name": "Mac OS",
              "version": "10.15.7"
            },
            "device": {},
            "cpu": {}
          },
          "userAgentString": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
          "hasPapi": false,
          "slug": "mac-os-safari-undefined-undefined-undefined-1-tjvx",
          "id": "ftqcaqsfhgxulpkttbzjkzcc",
          "operationName": null,
          "projectRelativePath": "/db/devices.json"
        },
        {
          "createdAt": 1667380792822,
          "updatedAt": 1667380792822,
          "deletedAt": 0,
          "createdFirstAt": 1667380792822,
          "authToken": "jcijvucgciyqnikmpvtrbnnm",
          "authenticationMethods": [],
          "ip": "::1",
          "lastOnlineAt": 0,
          "lastSyncDatabaseAtObject": {},
          "name": "mac-os-safari-undefined-undefined-undefined-1-pwym",
          "origins": [
            "http://localhost:4202"
          ],
          "previousIps": [],
          "userAgent": {
            "ua": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
            "browser": {
              "name": "Safari",
              "version": "15.6.1",
              "major": "15"
            },
            "engine": {
              "name": "WebKit",
              "version": "605.1.15"
            },
            "os": {
              "name": "Mac OS",
              "version": "10.15.7"
            },
            "device": {},
            "cpu": {}
          },
          "userAgentString": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
          "hasPapi": false,
          "slug": "mac-os-safari-undefined-undefined-undefined-1-pwym",
          "id": "ucznkcimhvixxjphnapbjnzq",
          "operationName": null,
          "projectRelativePath": "/db/devices.json"
        },
        {
          "createdAt": 1667380792822,
          "updatedAt": 1667380792822,
          "deletedAt": 0,
          "createdFirstAt": 1667380792822,
          "authToken": "jcijvucgciyqnikmpvtrbnnm",
          "authenticationMethods": [],
          "ip": "::1",
          "lastOnlineAt": 0,
          "lastSyncDatabaseAtObject": {},
          "name": "mac-os-safari-undefined-undefined-undefined-1-wmah",
          "origins": [
            "http://localhost:4202"
          ],
          "previousIps": [],
          "userAgent": {
            "ua": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
            "browser": {
              "name": "Safari",
              "version": "15.6.1",
              "major": "15"
            },
            "engine": {
              "name": "WebKit",
              "version": "605.1.15"
            },
            "os": {
              "name": "Mac OS",
              "version": "10.15.7"
            },
            "device": {},
            "cpu": {}
          },
          "userAgentString": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.6.1 Safari/605.1.15",
          "hasPapi": false,
          "slug": "mac-os-safari-undefined-undefined-undefined-1-wmah",
          "id": "lhfbwwbbkisrtucdcvgzioow",
          "operationName": null,
          "projectRelativePath": "/db/devices.json"
        }
      ],
      "index": {
        "createdAt": 1667379036640,
        "updatedAt": 1667379036640,
        "deletedAt": 0,
        "createdFirstAt": 1667379036640,
        "id": "device",
        "name": "Device",
        "slug": "device",
        "operationRelativeTypescriptFilePath": "src/getHasAuthorization.ts",
        "hasGeneric": false,
        "isExported": false,
        "isOperationIndex": false,
        "description": "A Device that accesses any King OS api.\n\nA device can be connected to a person. A person can have multiple `Device`s.\n\nA Device does not necissarily have King OS installed themselves, they can also be a visitor to another King OS app of someone else.",
        "isDbModel": false,
        "commentsInside": [],
        "type": {
          "typeDefinition": {
            "type": "object",
            "properties": {
              "ip": {
                "type": "string",
                "description": "The ip of the device. Can be a local IP or remote IP.\n\nNB: Port is not included"
              },
              "city": {
                "type": "string"
              },
              "position": {
                "$ref": "#/definitions/Position"
              },
              "positionRadiusKm": {
                "type": "number"
              },
              "country": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "createdAt": {
                "$ref": "#/definitions/CreatedAt"
              },
              "updatedAt": {
                "$ref": "#/definitions/UpdatedAt"
              },
              "deletedAt": {
                "$ref": "#/definitions/DeletedAt"
              },
              "createdFirstAt": {
                "$ref": "#/definitions/CreatedFirstAt"
              },
              "operationName": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "projectRelativePath": {
                "type": "string",
                "description": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "operationRelativePath": {
                "type": "string",
                "description": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "id": {
                "$ref": "#/definitions/Id"
              },
              "categoryStackCalculated": {
                "$ref": "#/definitions/CategoryStack",
                "description": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!"
              },
              "authToken": {
                "type": "string",
                "description": "AuthToken is used to identify a device. Unique identifier that is saved in the devices browser/app.\n\nIf the authToken is the same, we can be sure that the device is matched, even if the IP is different."
              },
              "userAgent": {
                "$ref": "#/definitions/UAParser.IResult",
                "description": "Parsed User Agent header.\n\nNOT used to identify the device, since the device can already be connected to a person!"
              },
              "userAgentString": {
                "type": "string",
                "description": "Raw `User-Agent` header.\n\nNOT used to identify the device, since the device can already be connected to a person!"
              },
              "name": {
                "type": "string",
                "description": "Name of the device, calculated based on metadata like location, os, and ip\n\nCan be edited by the user"
              },
              "previousIps": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/IPInfo"
                },
                "description": "the root IPInfo is from the latest IP the device had. All previous IPs are added to this array"
              },
              "origins": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Domains the Device has visited\n\nThe Origin request header indicates the origin (scheme, hostname, and port) that caused the request"
              },
              "hasPapi": {
                "type": "boolean",
                "description": "Is set to true if the devices IP is pinged and seems to have something that resembles a King OS PAPI."
              },
              "isOnlineCalculated": {
                "type": "boolean",
                "description": "Returning `true` or `false` indicating whether or not the IP is giving a response"
              },
              "lastOnlineAt": {
                "type": "number",
                "description": "Whenever the peer is online, this should update"
              },
              "isLocalIpCalculated": {
                "type": "boolean",
                "description": "if true, the above IP is a local one, meaning it cannot be accessed from outside of this network\n\nThis is easy to determine: local IP's must start with \"192.168\""
              },
              "isFavorite": {
                "type": "boolean",
                "description": "if `true`, this device will show on top"
              },
              "isPrivate": {
                "type": "boolean",
                "description": "If true, this peer should not be shared"
              },
              "lastSyncDatabaseAtObject": {
                "type": "object",
                "additionalProperties": {
                  "type": "number"
                },
                "description": "last sync of any model\n\nUseful for example for a p2p messaging"
              },
              "personId": {
                "$ref": "#/definitions/Id",
                "description": "If the device is authenticated, this should be set.\n\nCan be unset by the person"
              },
              "person": {
                "$ref": "#/definitions/Person"
              },
              "appOperationsCalculated": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/AppOperation"
                },
                "description": "Calculated all operations that can be exposed as apps. This is taken from `getAllAppOperations` function"
              },
              "authenticationMethods": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/AuthenticationMethod"
                },
                "description": "If the `Device` is not identified as a person yet, this can be configured to authenticate with different methods. Once it matches to a person, this can be cleared and `personId` can be attached."
              }
            },
            "required": [
              "authToken",
              "authenticationMethods",
              "createdAt",
              "createdFirstAt",
              "deletedAt",
              "id",
              "ip",
              "lastOnlineAt",
              "lastSyncDatabaseAtObject",
              "name",
              "operationName",
              "origins",
              "previousIps",
              "projectRelativePath",
              "updatedAt",
              "userAgent",
              "userAgentString"
            ],
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Id"
                },
                {
                  "not": {}
                }
              ]
            },
            "description": "A Device that accesses any King OS api.\n\nA device can be connected to a person. A person can have multiple `Device`s.\n\nA Device does not necissarily have King OS installed themselves, they can also be a visitor to another King OS app of someone else."
          },
          "simplifiedSchema": {
            "fullComment": "A Device that accesses any King OS api.\n\nA device can be connected to a person. A person can have multiple `Device`s.\n\nA Device does not necissarily have King OS installed themselves, they can also be a visitor to another King OS app of someone else.",
            "properties": [
              {
                "name": "ip",
                "required": true,
                "schema": {
                  "fullComment": "The ip of the device. Can be a local IP or remote IP.\n\nNB: Port is not included",
                  "nb": "Port is not included",
                  "type": "string"
                }
              },
              {
                "name": "city",
                "required": false,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "position",
                "required": false,
                "schema": {
                  "fullComment": "",
                  "properties": [
                    {
                      "name": "latitude",
                      "required": true,
                      "schema": {
                        "type": "number"
                      }
                    },
                    {
                      "name": "longitude",
                      "required": true,
                      "schema": {
                        "type": "number"
                      }
                    }
                  ],
                  "type": "object"
                }
              },
              {
                "name": "positionRadiusKm",
                "required": false,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "country",
                "required": false,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "region",
                "required": false,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "timezone",
                "required": false,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "createdAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "updatedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "deletedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "createdFirstAt",
                "required": true,
                "schema": {
                  "fullComment": "in some cases, data can be created before it was created in our system. In this case, use CreatedFirstAt if this information is important.\n\nTime\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "operationName",
                "required": true,
                "schema": {
                  "fullComment": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "null"
                }
              },
              {
                "name": "projectRelativePath",
                "required": true,
                "schema": {
                  "fullComment": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "operationRelativePath",
                "required": false,
                "schema": {
                  "fullComment": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "id",
                "required": true,
                "schema": {
                  "fullComment": "Should be an unique string By default, you can use `generateId()` to generate a random string of 16 characters. If you wish, you can also use any other string, as long as you are sure it's unique.\n\n# Background Info\n\nazAZ09 characters are easy to copy and provide 62 characters. the goal of an id is to be unique.\n\nthe advantage of a random id compared to an numeric id starting with 1 with auto increment is that you can set them up decentralised.\n\nthe change of duplicate ids gets bigger once you make them shorter the change of finding an existing id gets bigger once you make them shorter\n\nAn Id with 12 characters would provide 3.22e21 combinations.\n\nWhat is the change of duplicate ids? This depends on the amount of identifyable items in the data What is the change of guessing an id? This depends on speed of a brute force attack and the amount of available datapoints. If you can guess 10000 times per second, you can make 864.000.000 guesses. A billion guesses on a dataset of a billion datapoints yields 3226 correct ids on average.\n\nWhy make an id short? I don't know if there's an important reason.\n\nAll in all, I think we should make ids 24 characters by default. This would make it very easy to store, yet, with more than E42 combinations, make it nearly impossible to get duplication or brute force hits.\n\nAn id would look like this:\n\n``` { \"id\": \"sk2EcW9AkZpksk2EcW9AkZpk\" } ```\n\nLooks good to me! Don't think about it and just keep it simple. We can always migrate later to a bigger amount, but I don't see good reason to keep it smaller than this.",
                  "type": "string"
                }
              },
              {
                "name": "categoryStackCalculated",
                "required": false,
                "schema": {
                  "fullComment": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!\n\n",
                  "nb": "Changing this value when updating/upserting, changes where the item is located!",
                  "items": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "name": null
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "authToken",
                "required": true,
                "schema": {
                  "fullComment": "AuthToken is used to identify a device. Unique identifier that is saved in the devices browser/app.\n\nIf the authToken is the same, we can be sure that the device is matched, even if the IP is different.",
                  "type": "string"
                }
              },
              {
                "name": "userAgent",
                "required": true,
                "schema": {
                  "fullComment": "Parsed User Agent header.\n\nNOT used to identify the device, since the device can already be connected to a person!\n\n",
                  "properties": [
                    {
                      "name": "ua",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "browser",
                      "required": true,
                      "schema": {
                        "fullComment": "",
                        "properties": [
                          {
                            "name": "name",
                            "required": false,
                            "schema": {
                              "fullComment": "Possible values : Amaya, Android Browser, Arora, Avant, Baidu, Blazer, Bolt, Camino, Chimera, Chrome, Chromium, Comodo Dragon, Conkeror, Dillo, Dolphin, Doris, Edge, Epiphany, Fennec, Firebird, Firefox, Flock, GoBrowser, iCab, ICE Browser, IceApe, IceCat, IceDragon, Iceweasel, IE [Mobile], Iron, Jasmine, K-Meleon, Konqueror, Kindle, Links, Lunascape, Lynx, Maemo, Maxthon, Midori, Minimo, MIUI Browser, [Mobile] Safari, Mosaic, Mozilla, Netfront, Netscape, NetSurf, Nokia, OmniWeb, Opera [Mini/Mobi/Tablet], Phoenix, Polaris, QQBrowser, RockMelt, Silk, Skyfire, SeaMonkey, SlimBrowser, Swiftfox, Tizen, UCBrowser, Vivaldi, w3m, Yandex",
                              "type": "string"
                            }
                          },
                          {
                            "name": "version",
                            "required": false,
                            "schema": {
                              "fullComment": "Determined dynamically",
                              "type": "string"
                            }
                          },
                          {
                            "name": "major",
                            "required": false,
                            "schema": {
                              "fullComment": "Determined dynamically",
                              "type": "string"
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "name": "device",
                      "required": true,
                      "schema": {
                        "fullComment": "",
                        "properties": [
                          {
                            "name": "model",
                            "required": false,
                            "schema": {
                              "fullComment": "Determined dynamically",
                              "type": "string"
                            }
                          },
                          {
                            "name": "type",
                            "required": false,
                            "schema": {
                              "fullComment": "Possible type: console, mobile, tablet, smarttv, wearable, embedded",
                              "type": "string"
                            }
                          },
                          {
                            "name": "vendor",
                            "required": false,
                            "schema": {
                              "fullComment": "Possible vendor: Acer, Alcatel, Amazon, Apple, Archos, Asus, BenQ, BlackBerry, Dell, GeeksPhone, Google, HP, HTC, Huawei, Jolla, Lenovo, LG, Meizu, Microsoft, Motorola, Nexian, Nintendo, Nokia, Nvidia, Ouya, Palm, Panasonic, Polytron, RIM, Samsung, Sharp, Siemens, Sony-Ericsson, Sprint, Xbox, ZTE",
                              "type": "string"
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "name": "engine",
                      "required": true,
                      "schema": {
                        "fullComment": "",
                        "properties": [
                          {
                            "name": "name",
                            "required": false,
                            "schema": {
                              "fullComment": "Possible name: Amaya, EdgeHTML, Gecko, iCab, KHTML, Links, Lynx, NetFront, NetSurf, Presto, Tasman, Trident, w3m, WebKit",
                              "type": "string"
                            }
                          },
                          {
                            "name": "version",
                            "required": false,
                            "schema": {
                              "fullComment": "Determined dynamically",
                              "type": "string"
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "name": "os",
                      "required": true,
                      "schema": {
                        "fullComment": "",
                        "properties": [
                          {
                            "name": "name",
                            "required": false,
                            "schema": {
                              "fullComment": "Possible 'os.name' AIX, Amiga OS, Android, Arch, Bada, BeOS, BlackBerry, CentOS, Chromium OS, Contiki, Fedora, Firefox OS, FreeBSD, Debian, DragonFly, Gentoo, GNU, Haiku, Hurd, iOS, Joli, Linpus, Linux, Mac OS, Mageia, Mandriva, MeeGo, Minix, Mint, Morph OS, NetBSD, Nintendo, OpenBSD, OpenVMS, OS/2, Palm, PCLinuxOS, Plan9, Playstation, QNX, RedHat, RIM Tablet OS, RISC OS, Sailfish, Series40, Slackware, Solaris, SUSE, Symbian, Tizen, Ubuntu, UNIX, VectorLinux, WebOS, Windows [Phone/Mobile], Zenwalk",
                              "type": "string"
                            }
                          },
                          {
                            "name": "version",
                            "required": false,
                            "schema": {
                              "fullComment": "Determined dynamically",
                              "type": "string"
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    {
                      "name": "cpu",
                      "required": true,
                      "schema": {
                        "fullComment": "",
                        "properties": [
                          {
                            "name": "architecture",
                            "required": false,
                            "schema": {
                              "fullComment": "Possible architecture:  68k, amd64, arm, arm64, avr, ia32, ia64, irix, irix64, mips, mips64, pa-risc,  ppc, sparc, sparc64",
                              "type": "string"
                            }
                          }
                        ],
                        "type": "object"
                      }
                    }
                  ],
                  "type": "object"
                }
              },
              {
                "name": "userAgentString",
                "required": true,
                "schema": {
                  "fullComment": "Raw `User-Agent` header.\n\nNOT used to identify the device, since the device can already be connected to a person!",
                  "type": "string"
                }
              },
              {
                "name": "name",
                "required": true,
                "schema": {
                  "fullComment": "Name of the device, calculated based on metadata like location, os, and ip\n\nCan be edited by the user",
                  "type": "string"
                }
              },
              {
                "name": "previousIps",
                "required": true,
                "schema": {
                  "fullComment": "the root IPInfo is from the latest IP the device had. All previous IPs are added to this array",
                  "items": [
                    {
                      "schema": {
                        "fullComment": "Information that is inferred from an IP",
                        "properties": [
                          {
                            "name": "ip",
                            "required": true,
                            "schema": {
                              "fullComment": "The ip of the device. Can be a local IP or remote IP.\n\nNB: Port is not included",
                              "nb": "Port is not included",
                              "type": "string"
                            }
                          },
                          {
                            "name": "city",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "position",
                            "required": false,
                            "schema": {
                              "fullComment": "",
                              "properties": [
                                {
                                  "name": "latitude",
                                  "required": true,
                                  "schema": {
                                    "type": "number"
                                  }
                                },
                                {
                                  "name": "longitude",
                                  "required": true,
                                  "schema": {
                                    "type": "number"
                                  }
                                }
                              ],
                              "type": "object"
                            }
                          },
                          {
                            "name": "positionRadiusKm",
                            "required": false,
                            "schema": {
                              "type": "number"
                            }
                          },
                          {
                            "name": "country",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "region",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "timezone",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "name": "IPInfo"
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "origins",
                "required": true,
                "schema": {
                  "fullComment": "Domains the Device has visited\n\nThe Origin request header indicates the origin (scheme, hostname, and port) that caused the request",
                  "items": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "name": null
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "hasPapi",
                "required": false,
                "schema": {
                  "fullComment": "Is set to true if the devices IP is pinged and seems to have something that resembles a King OS PAPI.",
                  "type": "boolean"
                }
              },
              {
                "name": "isOnlineCalculated",
                "required": false,
                "schema": {
                  "fullComment": "Returning `true` or `false` indicating whether or not the IP is giving a response",
                  "type": "boolean"
                }
              },
              {
                "name": "lastOnlineAt",
                "required": true,
                "schema": {
                  "fullComment": "Whenever the peer is online, this should update",
                  "type": "number"
                }
              },
              {
                "name": "isLocalIpCalculated",
                "required": false,
                "schema": {
                  "fullComment": "if true, the above IP is a local one, meaning it cannot be accessed from outside of this network\n\nThis is easy to determine: local IP's must start with \"192.168\"",
                  "type": "boolean"
                }
              },
              {
                "name": "isFavorite",
                "required": false,
                "schema": {
                  "fullComment": "if `true`, this device will show on top",
                  "type": "boolean"
                }
              },
              {
                "name": "isPrivate",
                "required": false,
                "schema": {
                  "fullComment": "If true, this peer should not be shared",
                  "type": "boolean"
                }
              },
              {
                "name": "lastSyncDatabaseAtObject",
                "required": true,
                "schema": {
                  "fullComment": "last sync of any model\n\nUseful for example for a p2p messaging",
                  "properties": [],
                  "type": "object"
                }
              },
              {
                "name": "personId",
                "required": false,
                "schema": {
                  "fullComment": "If the device is authenticated, this should be set.\n\nCan be unset by the person\n\nShould be an unique string By default, you can use `generateId()` to generate a random string of 16 characters. If you wish, you can also use any other string, as long as you are sure it's unique.\n\n# Background Info\n\nazAZ09 characters are easy to copy and provide 62 characters. the goal of an id is to be unique.\n\nthe advantage of a random id compared to an numeric id starting with 1 with auto increment is that you can set them up decentralised.\n\nthe change of duplicate ids gets bigger once you make them shorter the change of finding an existing id gets bigger once you make them shorter\n\nAn Id with 12 characters would provide 3.22e21 combinations.\n\nWhat is the change of duplicate ids? This depends on the amount of identifyable items in the data What is the change of guessing an id? This depends on speed of a brute force attack and the amount of available datapoints. If you can guess 10000 times per second, you can make 864.000.000 guesses. A billion guesses on a dataset of a billion datapoints yields 3226 correct ids on average.\n\nWhy make an id short? I don't know if there's an important reason.\n\nAll in all, I think we should make ids 24 characters by default. This would make it very easy to store, yet, with more than E42 combinations, make it nearly impossible to get duplication or brute force hits.\n\nAn id would look like this:\n\n``` { \"id\": \"sk2EcW9AkZpksk2EcW9AkZpk\" } ```\n\nLooks good to me! Don't think about it and just keep it simple. We can always migrate later to a bigger amount, but I don't see good reason to keep it smaller than this.",
                  "type": "string"
                }
              },
              {
                "name": "appOperationsCalculated",
                "required": false,
                "schema": {
                  "fullComment": "Calculated all operations that can be exposed as apps. This is taken from `getAllAppOperations` function",
                  "items": [
                    {
                      "schema": {
                        "fullComment": "",
                        "properties": [
                          {
                            "name": "name",
                            "required": true,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "port",
                            "required": true,
                            "schema": {
                              "type": "number"
                            }
                          },
                          {
                            "name": "description",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "isOnline",
                            "required": false,
                            "schema": {
                              "type": "boolean"
                            }
                          },
                          {
                            "name": "emoji",
                            "required": false,
                            "schema": {
                              "fullComment": "Emoji that should be used as the app icon. Can be calculated from the `OPERATION.md`",
                              "type": "string"
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "name": "AppOperation"
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "authenticationMethods",
                "required": true,
                "schema": {
                  "fullComment": "If the `Device` is not identified as a person yet, this can be configured to authenticate with different methods. Once it matches to a person, this can be cleared and `personId` can be attached.",
                  "items": [
                    {
                      "schema": {
                        "fullComment": "",
                        "properties": [
                          {
                            "name": "method",
                            "required": true,
                            "schema": {
                              "enum": [
                                "usernamePassword",
                                "phoneNumber",
                                "email",
                                "apple",
                                "google",
                                "facebook",
                                "twitter",
                                "linkedin",
                                "github"
                              ],
                              "fullComment": "NB: Not all are supported yet\n\nUsername + password should be the default\n\nEmail OTP, phone number OTP (sms or call or whatsapp), should be optional 2FA methods\n\nAll others can also act as authentication methods, but the token shouldn't be stored",
                              "nb": "Not all are supported yet",
                              "type": "string"
                            }
                          },
                          {
                            "name": "handle",
                            "required": true,
                            "schema": {
                              "fullComment": "most of the time, this is a username, but can also be phone number or email or so",
                              "type": "string"
                            }
                          },
                          {
                            "name": "encryptedCredential",
                            "required": false,
                            "schema": {
                              "fullComment": "This can be a password or token, depending on the method.\n\nIn case of OTP, this isn't required (e.g. for `phoneNumber`)",
                              "type": "string"
                            }
                          },
                          {
                            "name": "otp",
                            "required": false,
                            "schema": {
                              "fullComment": "one time password code, that will be sent to email or sms (or in the future other ways)",
                              "type": "number"
                            }
                          },
                          {
                            "name": "isAuthenticated",
                            "required": true,
                            "schema": {
                              "fullComment": "If OTP is not filled in yet, will be false, otherwise true",
                              "type": "boolean"
                            }
                          }
                        ],
                        "type": "object"
                      },
                      "name": "AuthenticationMethod"
                    }
                  ],
                  "type": "array"
                }
              }
            ],
            "type": "object"
          },
          "typeCoverage": 0,
          "rawType": "Device",
          "isArray": false,
          "isEnum": false,
          "isEnumLiteral": false,
          "isObject": false,
          "isPrimitive": false
        },
        "operationName": "function-server-endpoints",
        "projectRelativePath": "/operations/tools/interfaces/api/function-server-endpoints/db/ts-interfaces/device.json",
        "operationRelativePath": "/db/ts-interfaces/device.json"
      },
      "fileLocations": [
        "/db/devices.json",
        "/operations/tools/admin-operation/operation-ui/db/devices.json",
        "/operations/tools/admin-operation/operation-web/db/devices.json",
        "/operations/tools/asset/asset-demo-web/db/devices.json",
        "/operations/tools/asset/asset-functions-js/db/devices.json",
        "/operations/tools/asset/asset-functions-node/db/devices.json",
        "/operations/tools/asset/asset-input/db/devices.json",
        "/operations/tools/asset/asset-type/db/devices.json",
        "/operations/tools/asset/asset-view/db/devices.json",
        "/operations/tools/asset/text-or-binary/db/devices.json",
        "/operations/tools/control-fs/folder-get-updated-at/db/devices.json",
        "/operations/tools/control-fs/fs-util/db/devices.json",
        "/operations/tools/control-fs/fs-util-js/db/devices.json",
        "/operations/tools/control-fs/get-associated-md/db/devices.json",
        "/operations/tools/control-fs/get-available-folder-path/db/devices.json",
        "/operations/tools/control-fs/get-package-json/db/devices.json",
        "/operations/tools/control-fs/get-package-source-paths/db/devices.json",
        "/operations/tools/control-fs/get-ts-config/db/devices.json",
        "/operations/tools/control-fs/path-util/db/devices.json",
        "/operations/tools/control-fs/rename-template-files/db/devices.json",
        "/operations/tools/control-fs/set-json-key/db/devices.json",
        "/operations/tools/control-fs/watch-folders/db/devices.json",
        "/operations/tools/control-fs/write-to-assets/db/devices.json",
        "/operations/tools/control-project/all/db/devices.json",
        "/operations/tools/control-project/deprecated/make-file-type/db/devices.json",
        "/operations/tools/control-project/explore-project/db/devices.json",
        "/operations/tools/control-project/get-all-operation-source-paths/db/devices.json",
        "/operations/tools/control-project/get-path/db/devices.json",
        "/operations/tools/control-project/k-explore/db/devices.json",
        "/operations/tools/control-project/operation-util/db/devices.json",
        "/operations/tools/control-project/pm2-util/db/devices.json",
        "/operations/tools/control-system/brightness/db/devices.json",
        "/operations/tools/control-system/clean-macos-setup/db/devices.json",
        "/operations/tools/control-system/play-music/db/devices.json",
        "/operations/tools/control-system/reminders/db/devices.json",
        "/operations/tools/control-system/set-random-timezone/db/devices.json",
        "/operations/tools/control-system/toggle-dark-mode/db/devices.json",
        "/operations/tools/control-system/toggle-screen-sleep/db/devices.json",
        "/operations/tools/control-system/volume/db/devices.json",
        "/operations/tools/control-system/vscode-open/db/devices.json",
        "/operations/tools/conventions/filename-conventions/db/devices.json",
        "/operations/tools/conventions/name-conventions/db/devices.json",
        "/operations/tools/conventions/port-conventions/db/devices.json",
        "/operations/tools/database/database/db/devices.json",
        "/operations/tools/database/db-recipes/db/devices.json",
        "/operations/tools/database/db-ui/db/devices.json",
        "/operations/tools/database/db-web/db/devices.json",
        "/operations/tools/database/fs-orm/db/devices.json",
        "/operations/tools/database/validate-model/db/devices.json",
        "/operations/tools/deployment/bundling/bundle-util/db/devices.json",
        "/operations/tools/deployment/bundling/bundle-web/db/devices.json",
        "/operations/tools/deployment/bundling/create-backup/db/devices.json",
        "/operations/tools/deployment/bundling/create-distribution/db/devices.json",
        "/operations/tools/deployment/bundling/db-util/db/devices.json",
        "/operations/tools/deployment/bundling/generate-bundle/db/devices.json",
        "/operations/tools/deployment/bundling/install-node-modules/db/devices.json",
        "/operations/tools/deployment/bundling/yarn-install-new-distribution/db/devices.json",
        "/operations/tools/deployment/deprecated/sensible/sensible/db/devices.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-core/db/devices.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-server/db/devices.json",
        "/operations/tools/generated/sdk/db/devices.json",
        "/operations/tools/generated/sdk-api/db/devices.json",
        "/operations/tools/generated/sdk-api-keys/db/devices.json",
        "/operations/tools/generated/sdk-db/db/devices.json",
        "/operations/tools/generated/sdk-env-private/db/devices.json",
        "/operations/tools/generated/sdk-env-public/db/devices.json",
        "/operations/tools/generated/sdk-function-paths/db/devices.json",
        "/operations/tools/generated/sdk-js/db/devices.json",
        "/operations/tools/generated/sdk-js-keys/db/devices.json",
        "/operations/tools/generated/sdk-keys/db/devices.json",
        "/operations/tools/generated/sdk-operations/db/devices.json",
        "/operations/tools/interfaces/api/api/db/devices.json",
        "/operations/tools/interfaces/api/api-store/db/devices.json",
        "/operations/tools/interfaces/api/api-types/db/devices.json",
        "/operations/tools/interfaces/api/deprecated/endpoint-util/db/devices.json",
        "/operations/tools/interfaces/api/function-recipes/db/devices.json",
        "/operations/tools/interfaces/api/function-server/db/devices.json",
        "/operations/tools/interfaces/api/function-server-endpoints/db/devices.json",
        "/operations/tools/interfaces/api/server-api-url/db/devices.json",
        "/operations/tools/interfaces/api/server-login/db/devices.json",
        "/operations/tools/interfaces/auditory-ui/remind-me-in/db/devices.json",
        "/operations/tools/interfaces/auditory-ui/say/db/devices.json",
        "/operations/tools/interfaces/cli/ask/db/devices.json",
        "/operations/tools/interfaces/cli/cli-version-updates/db/devices.json",
        "/operations/tools/interfaces/cli/function-util/db/devices.json",
        "/operations/tools/interfaces/cli/string-to-json/db/devices.json",
        "/operations/tools/interfaces/vui/function-form/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-expo/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-next/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/next/next-a-link/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-alert/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-asset-input/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-notification/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-router/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-select/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/devices.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-ui/db/devices.json",
        "/operations/tools/interfaces/vui/simplified-schema-form/db/devices.json",
        "/operations/tools/interfaces/vui/vui-elements/big-button/db/devices.json",
        "/operations/tools/interfaces/vui/vui-elements/clickable-icon/db/devices.json",
        "/operations/tools/interfaces/vui/vui-elements/fancy-loader/db/devices.json",
        "/operations/tools/interfaces/vui/vui-elements/labeled-button/db/devices.json",
        "/operations/tools/interfaces/vui/vui-elements/login-form/db/devices.json",
        "/operations/tools/interfaces/vui/vui-elements/markdown-parse-transpile-ui/db/devices.json",
        "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/devices.json",
        "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/devices.json",
        "/operations/tools/interfaces/vui/vui-elements/spoiler/db/devices.json",
        "/operations/tools/interfaces/vui/vui-elements/ui-util/db/devices.json",
        "/operations/tools/interfaces/vui/vui-elements/use-url-store/db/devices.json",
        "/operations/tools/language/detect-language/db/devices.json",
        "/operations/tools/language/generate-simple-sentence/db/devices.json",
        "/operations/tools/language/learn-toki-web/db/devices.json",
        "/operations/tools/language/simplify-text/db/devices.json",
        "/operations/tools/language/speak-words-to-learn/db/devices.json",
        "/operations/tools/markdown-reader/augmented-words/db/devices.json",
        "/operations/tools/markdown-reader/markdown-reader-functions/db/devices.json",
        "/operations/tools/markdown-reader/markdown-reader-functions-js/db/devices.json",
        "/operations/tools/markdown-reader/markdown-reader-types/db/devices.json",
        "/operations/tools/markdown-reader/markdown-reader-ui/db/devices.json",
        "/operations/tools/markdown-reader/markdown-reader-web/db/devices.json",
        "/operations/tools/p2p/auth-types/db/devices.json",
        "/operations/tools/p2p/mail/db/devices.json",
        "/operations/tools/p2p/os-config/db/devices.json",
        "/operations/tools/p2p/peer-functions/db/devices.json",
        "/operations/tools/p2p/peer-types/db/devices.json",
        "/operations/tools/p2p/peer-web/db/devices.json",
        "/operations/tools/p2p/sms/db/devices.json",
        "/operations/tools/parsing/file-conversion/compression/unzip/db/devices.json",
        "/operations/tools/parsing/file-conversion/compression/zip/db/devices.json",
        "/operations/tools/parsing/file-conversion/csv/csv-util/db/devices.json",
        "/operations/tools/parsing/file-conversion/json/json-to-md/db/devices.json",
        "/operations/tools/parsing/file-conversion/json/json-to-say-string/db/devices.json",
        "/operations/tools/parsing/file-conversion/json/json-util/db/devices.json",
        "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/devices.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/devices.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/devices.json",
        "/operations/tools/parsing/file-conversion/md/markdown-translator/db/devices.json",
        "/operations/tools/parsing/parse-primitive/db/devices.json",
        "/operations/tools/parsing/read-files/read-csv-file/db/devices.json",
        "/operations/tools/parsing/read-files/read-json-file/db/devices.json",
        "/operations/tools/parsing/read-files/read-kvmd-file/db/devices.json",
        "/operations/tools/parsing/read-files/read-markdown-file/db/devices.json",
        "/operations/tools/parsing/read-files/read-typescript-file/db/devices.json",
        "/operations/tools/parsing/read-files/try-parse-json/db/devices.json",
        "/operations/tools/parsing/rest-util/db/devices.json",
        "/operations/tools/parsing/search/db/devices.json",
        "/operations/tools/sensation/orientation/get-location/db/devices.json",
        "/operations/tools/sensation/sight/get-light/db/devices.json",
        "/operations/tools/social-media/social-media-controller/db/devices.json",
        "/operations/tools/social-media/social-media-functions/db/devices.json",
        "/operations/tools/social-media/social-media-types/db/devices.json",
        "/operations/tools/social-media/social-media-ui/db/devices.json",
        "/operations/tools/social-media/social-media-web/db/devices.json",
        "/operations/tools/types/bundle-types/db/devices.json",
        "/operations/tools/types/code-types/db/devices.json",
        "/operations/tools/types/geo-types/db/devices.json",
        "/operations/tools/types/invoice-types/db/devices.json",
        "/operations/tools/types/language-types/db/devices.json",
        "/operations/tools/types/matter-types/db/devices.json",
        "/operations/tools/types/model-types/db/devices.json",
        "/operations/tools/types/os-types/db/devices.json",
        "/operations/tools/typescript/cleanup-typescript-database/db/devices.json",
        "/operations/tools/typescript/comment-util/db/devices.json",
        "/operations/tools/typescript/compile-typescript/db/devices.json",
        "/operations/tools/typescript/find-all-dependency-operations/db/devices.json",
        "/operations/tools/typescript/generate-index/db/devices.json",
        "/operations/tools/typescript/generate-sdk-operations/db/devices.json",
        "/operations/tools/typescript/get-imported-dependencies/db/devices.json",
        "/operations/tools/typescript/get-imports-exports/db/devices.json",
        "/operations/tools/typescript/get-missing-dependencies/db/devices.json",
        "/operations/tools/typescript/index-typescript/db/devices.json",
        "/operations/tools/typescript/lint/db/devices.json",
        "/operations/tools/typescript/minify-build/db/devices.json",
        "/operations/tools/typescript/new-template/db/devices.json",
        "/operations/tools/typescript/package-scripts/db/devices.json",
        "/operations/tools/typescript/prettier-operation/db/devices.json",
        "/operations/tools/typescript/rebuild-operation/db/devices.json",
        "/operations/tools/typescript/rename-operation/db/devices.json",
        "/operations/tools/typescript/schema-util/db/devices.json",
        "/operations/tools/typescript/testing/k-test/db/devices.json",
        "/operations/tools/typescript/testing/make-test/db/devices.json",
        "/operations/tools/typescript/ts-morph-util/db/devices.json",
        "/operations/tools/typescript/watch-operations/db/devices.json",
        "/operations/tools/util/child-process-helper/db/devices.json",
        "/operations/tools/util/convert-case/db/devices.json",
        "/operations/tools/util/execute-command/db/devices.json",
        "/operations/tools/util/geo-parse/db/devices.json",
        "/operations/tools/util/is-online/db/devices.json",
        "/operations/tools/util/js-util/db/devices.json",
        "/operations/tools/util/k-dev/db/devices.json",
        "/operations/tools/util/log/db/devices.json",
        "/operations/tools/util/nodemon/db/devices.json",
        "/operations/tools/util/one-by-one/db/devices.json",
        "/operations/tools/util/pluralize/db/devices.json",
        "/operations/tools/util/run-child-process/db/devices.json",
        "/operations/tools/writer/breadcrumbs/db/devices.json",
        "/operations/tools/writer/file-icons/db/devices.json",
        "/operations/tools/writer/file-search/db/devices.json",
        "/operations/tools/writer/file-tabs/db/devices.json",
        "/operations/tools/writer/file-writer/db/devices.json",
        "/operations/tools/writer/hotkeys/db/devices.json",
        "/operations/tools/writer/next-paths/db/devices.json",
        "/operations/tools/writer/todo-ui/db/devices.json",
        "/operations/tools/writer/todo-web/db/devices.json",
        "/operations/tools/writer/writer-demo-web/db/devices.json",
        "/operations/tools/writer/writer-functions/db/devices.json",
        "/operations/tools/writer/writer-input/db/devices.json",
        "/operations/tools/writer/writer-types/db/devices.json",
        "/operations/tools/writer/writer-ui/db/devices.json",
        "/operations/tools/writer/writer-web/db/devices.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/devices.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/devices.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-types/db/devices.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/devices.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-web/db/devices.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/devices.json",
        "/operations/niches/passionfruit/apps/passionfruit-web/db/devices.json",
        "/operations/niches/passionfruit/packages/foodchain-recipes/db/devices.json",
        "/operations/niches/passionfruit/packages/foodchain-types/db/devices.json",
        "/operations/niches/passionfruit/packages/passionfruit-ui/db/devices.json",
        "/operations/niches/sprent/parse-address-henrik/db/devices.json",
        "/operations/niches/sprent/parse-images/db/devices.json"
      ],
      "hasMore": false
    },
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -4
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -665
      }
    ],
    "id": "xolhexjbthztwxncfmmrujyb"
  },
  {
    "createdAt": 1667380978297,
    "updatedAt": 1667380978297,
    "deletedAt": 0,
    "createdFirstAt": 1667380978297,
    "functionName": "getReferencableModelData",
    "tsFunctionId": "nlwqlrrovbinvcftglpdofue",
    "inputParameters": [
      "PeerMessage"
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": [
      {
        "id": "qJreLJuHFnSrZnZy"
      },
      {
        "id": "WdnkxYVPPJfmwlRb"
      },
      {
        "id": "jVpneMQAtuHxjstp"
      },
      {
        "id": "UclkgHxSjCBriyQG"
      },
      {
        "id": "TLTeBvjsdOCRJcdh"
      },
      {
        "id": "AfirTaNCsUzLxHST"
      },
      {
        "id": "XmZrxqlZHfRKCAVv"
      },
      {
        "id": "BMHVChfvHkjNeyIC"
      },
      {
        "id": "olnszmyFavlmYBBg"
      },
      {
        "id": "XoyjLrHuoRoOvKsA"
      },
      {
        "id": "YYsyCfftPShClKmV"
      },
      {
        "id": "eUkXtTqbZBlLLDEt"
      },
      {
        "id": "dUDPgaOdwwECWKaj"
      },
      {
        "id": "dUxwWQTFszoVCMjA"
      },
      {
        "id": "pzkgnSqxjYmIQNyD"
      },
      {
        "id": "mAmpmgLhjFTQGyyA"
      },
      {
        "id": "ZoEjDyvUKKstwMAu"
      },
      {
        "id": "yquhKgzIssLzUgJJ"
      },
      {
        "id": "aHtIyFBPKBtzsFBK"
      },
      {
        "id": "whJeJTazSVduNKjx"
      },
      {
        "id": "rJvWYjxWoHDVCUQD"
      },
      {
        "id": "kXIOepnQcQSgInkA"
      },
      {
        "id": "DyRgVlxFjZqTvTei"
      },
      {
        "id": "uMglperqbZKBhMZe"
      },
      {
        "id": "bFVIdZvquxtQOZYm"
      },
      {
        "id": "WqVHeFxPHtWnaGuK"
      },
      {
        "id": "ojmMwBDcyylQINXY"
      },
      {
        "id": "fZbNUSLZwuUzsJtx"
      },
      {
        "id": "oRLXVixsBGJJSnCL"
      },
      {
        "id": "EaGLDVLzFItacOeT"
      },
      {
        "id": "tINudavCqIIsytBk"
      },
      {
        "id": "VBXLCmRBZyHDttLN"
      },
      {
        "id": "PzGGADIQnaxBEpYx"
      },
      {
        "id": "ceychTgBwrSlrvSz"
      },
      {
        "id": "eGifLxEyINgrHxth"
      },
      {
        "id": "rbvRdeUfZLSfgbpS"
      },
      {
        "id": "GVINwYPIWiObfuDD"
      },
      {
        "id": "jgCawWiYZbfLtbXo"
      },
      {
        "id": "qUsbwbDmHLrROVlg"
      },
      {
        "id": "rlpWSjdOQeElRlRG"
      },
      {
        "id": "mMKiMDZQrIbSQikf"
      },
      {
        "id": "zndNeVnBDUPqNPBN"
      },
      {
        "id": "HhPVCyvYWvqaQMNv"
      },
      {
        "id": "wFYhpbQsMbvKUKSw"
      },
      {
        "id": "jjXfcXLjHvvewSlf"
      },
      {
        "id": "gDLGRxrKoxOQYmKM"
      },
      {
        "id": "SdblaxWbrrUaHEFt"
      },
      {
        "id": "OUZBhPdQOgLHHxtM"
      },
      {
        "id": "BdSTXTzNWZUrLAhn"
      },
      {
        "id": "oDxnSPBsOQpkcfBI"
      },
      {
        "id": "LKvACkylCttYrDOZ"
      },
      {
        "id": "thMXkNlidMvOaKke"
      },
      {
        "id": "BZiliRVJmfVxhbRH"
      },
      {
        "id": "kkyVhFMcUBvLqyNI"
      },
      {
        "id": "VhlhizEWKZjWKsTF"
      },
      {
        "id": "dkiqTNzkJtXbVxqd"
      },
      {
        "id": "QNKbQaQKepfUwYyS"
      },
      {
        "id": "taRnMZYCVnfrSOZj"
      },
      {
        "id": "ldZJmZFIkHmXxVmu"
      },
      {
        "id": "qINwPHNoBsdtPhGo"
      },
      {
        "id": "QMYrAgIgbNBppBfO"
      },
      {
        "id": "OEGEHPiXjeaBkkyt"
      },
      {
        "id": "yshhDeUTrFULgtmG"
      },
      {
        "id": "VeZygeOWXZqlkSAw"
      },
      {
        "id": "zNhJQMMyNHGhCpnN"
      },
      {
        "id": "reZBbPLqQxgcNMvF"
      },
      {
        "id": "odDjPhazbMiAUiVS"
      },
      {
        "id": "owYNGmpTtXGaDQjZ"
      },
      {
        "id": "zSoPYcleIdkHtbFu"
      },
      {
        "id": "VCkMSSETqvnapbRs"
      },
      {
        "id": "MTKZDAoGEespatZu"
      },
      {
        "id": "jPejNvttjVlWImyV"
      },
      {
        "id": "lAkRmCZZDNXDrGRY"
      },
      {
        "id": "rXdxMDVPVvpRmVSD"
      },
      {
        "id": "OwEoPELnVFGCxxmf"
      },
      {
        "id": "safyjqmtVFyEiUot"
      },
      {
        "id": "xFAjpGBNWzJIUuKs"
      },
      {
        "id": "xeEcOwCAsuJPhaAg"
      },
      {
        "id": "rRQiQWiSmWQUKpvG"
      },
      {
        "id": "woynddxrrtuhggefljqaxdya"
      },
      {
        "id": "ixsydjlomjbmzmvafzyyoczm"
      },
      {
        "id": "gurvdcisxxampdbiumaawtdk"
      },
      {
        "id": "udvvwlfkrkoyrtikqgkunypg"
      }
    ],
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -1
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -242
      }
    ],
    "id": "azqyjmasfazjbjjdtwiqhrxr"
  },
  {
    "createdAt": 1667380978764,
    "updatedAt": 1667380978764,
    "deletedAt": 0,
    "createdFirstAt": 1667380978764,
    "functionName": "getDbModel",
    "tsFunctionId": "juyaxxbbboszvendbjbfqomm",
    "inputParameters": [
      "PeerMessage",
      {
        "start": 0,
        "limit": 30
      }
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": {
      "start": 0,
      "limit": 30,
      "data": [
        {
          "createdAt": 1663995533212,
          "updatedAt": 1663995533212,
          "deletedAt": 0,
          "createdFirstAt": 1663995533212,
          "message": "hola bajja",
          "peerSlug": "192-168-18-128",
          "id": "qJreLJuHFnSrZnZy",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663995814978,
          "updatedAt": 1663995814978,
          "deletedAt": 0,
          "createdFirstAt": 1663995814978,
          "message": "holaalala",
          "peerSlug": "192-168-18-128",
          "id": "WdnkxYVPPJfmwlRb",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663996684212,
          "updatedAt": 1663996684212,
          "deletedAt": 0,
          "createdFirstAt": 1663996684212,
          "message": "holaalala",
          "peerSlug": "192-168-18-128",
          "id": "jVpneMQAtuHxjstp",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998361328,
          "updatedAt": 1663998361328,
          "deletedAt": 0,
          "createdFirstAt": 1663998361328,
          "message": "Test",
          "peerSlug": "192-168-0-33",
          "id": "UclkgHxSjCBriyQG",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998361419,
          "updatedAt": 1663998361419,
          "deletedAt": 0,
          "createdFirstAt": 1663998361419,
          "message": "Test",
          "peerSlug": "192-168-0-33",
          "id": "TLTeBvjsdOCRJcdh",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998378818,
          "updatedAt": 1663998378818,
          "deletedAt": 0,
          "createdFirstAt": 1663998378818,
          "message": "Yoyo",
          "peerSlug": "192-168-0-33",
          "id": "AfirTaNCsUzLxHST",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998378924,
          "updatedAt": 1663998378924,
          "deletedAt": 0,
          "createdFirstAt": 1663998378924,
          "message": "Yoyo",
          "peerSlug": "192-168-0-33",
          "id": "XmZrxqlZHfRKCAVv",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998461907,
          "updatedAt": 1663998461907,
          "deletedAt": 0,
          "createdFirstAt": 1663998461907,
          "message": "MOi eem",
          "peerSlug": "192-168-0-33",
          "id": "BMHVChfvHkjNeyIC",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998513597,
          "updatedAt": 1663998513597,
          "deletedAt": 0,
          "createdFirstAt": 1663998513597,
          "message": "goeriedag",
          "peerSlug": "192-168-0-33",
          "id": "olnszmyFavlmYBBg",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998550352,
          "updatedAt": 1663998550352,
          "deletedAt": 0,
          "createdFirstAt": 1663998550352,
          "message": "youyo",
          "peerSlug": "192-168-0-33",
          "id": "XoyjLrHuoRoOvKsA",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998579322,
          "updatedAt": 1663998579322,
          "deletedAt": 0,
          "createdFirstAt": 1663998579322,
          "message": "jojoojojo",
          "peerSlug": "192-168-0-33",
          "id": "YYsyCfftPShClKmV",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998635007,
          "updatedAt": 1663998635007,
          "deletedAt": 0,
          "createdFirstAt": 1663998635007,
          "message": "yo",
          "peerSlug": "192-168-0-33",
          "id": "eUkXtTqbZBlLLDEt",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998642013,
          "updatedAt": 1663998642013,
          "deletedAt": 0,
          "createdFirstAt": 1663998642013,
          "message": "jojojo",
          "peerSlug": "192-168-0-33",
          "id": "dUDPgaOdwwECWKaj",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998650187,
          "updatedAt": 1663998650187,
          "deletedAt": 0,
          "createdFirstAt": 1663998650187,
          "message": "wowowwow",
          "peerSlug": "192-168-0-33",
          "id": "dUxwWQTFszoVCMjA",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998653493,
          "updatedAt": 1663998653493,
          "deletedAt": 0,
          "createdFirstAt": 1663998653493,
          "message": ":D",
          "peerSlug": "192-168-0-33",
          "id": "pzkgnSqxjYmIQNyD",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998858263,
          "updatedAt": 1663998858263,
          "deletedAt": 0,
          "createdFirstAt": 1663998858263,
          "message": "youoyoyo",
          "peerSlug": "192-168-0-33",
          "id": "mAmpmgLhjFTQGyyA",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000117673,
          "updatedAt": 1664000117673,
          "deletedAt": 0,
          "createdFirstAt": 1664000117673,
          "message": "Yo",
          "peerSlug": "192-168-0-102",
          "id": "ZoEjDyvUKKstwMAu",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1663998865680,
          "updatedAt": 1663998865680,
          "deletedAt": 0,
          "createdFirstAt": 1663998865680,
          "message": "zkskzk",
          "peerSlug": "192-168-0-33",
          "id": "yquhKgzIssLzUgJJ",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000131181,
          "updatedAt": 1664000131181,
          "deletedAt": 0,
          "createdFirstAt": 1664000131181,
          "message": "You! works!",
          "peerSlug": "192-168-0-33",
          "id": "aHtIyFBPKBtzsFBK",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000192289,
          "updatedAt": 1664000192289,
          "deletedAt": 0,
          "createdFirstAt": 1664000192289,
          "message": "yooooo brother!",
          "peerSlug": "192-168-0-33",
          "id": "whJeJTazSVduNKjx",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000117468,
          "updatedAt": 1664000117468,
          "deletedAt": 0,
          "createdFirstAt": 1664000117468,
          "message": "Yo",
          "peerSlug": "192-168-0-102",
          "id": "rJvWYjxWoHDVCUQD",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000206862,
          "updatedAt": 1664000206862,
          "deletedAt": 0,
          "createdFirstAt": 1664000206862,
          "message": "hola ",
          "peerSlug": "192-168-0-102",
          "id": "kXIOepnQcQSgInkA",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000207159,
          "updatedAt": 1664000207159,
          "deletedAt": 0,
          "createdFirstAt": 1664000207159,
          "message": "",
          "peerSlug": "192-168-0-102",
          "id": "DyRgVlxFjZqTvTei",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000209923,
          "updatedAt": 1664000209923,
          "deletedAt": 0,
          "createdFirstAt": 1664000209923,
          "message": "hols",
          "peerSlug": "192-168-0-102",
          "id": "uMglperqbZKBhMZe",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000261447,
          "updatedAt": 1664000261447,
          "deletedAt": 0,
          "createdFirstAt": 1664000261447,
          "message": "🤩",
          "peerSlug": "192-168-0-102",
          "id": "bFVIdZvquxtQOZYm",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000547453,
          "updatedAt": 1664000547453,
          "deletedAt": 0,
          "createdFirstAt": 1664000547453,
          "message": "ulalallala",
          "peerSlug": "192-168-0-102",
          "id": "WqVHeFxPHtWnaGuK",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000567624,
          "updatedAt": 1664000567624,
          "deletedAt": 0,
          "createdFirstAt": 1664000567624,
          "message": "🦾",
          "peerSlug": "192-168-0-102",
          "id": "ojmMwBDcyylQINXY",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000606226,
          "updatedAt": 1664000606226,
          "deletedAt": 0,
          "createdFirstAt": 1664000606226,
          "message": "🧌",
          "peerSlug": "192-168-0-102",
          "id": "fZbNUSLZwuUzsJtx",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000652615,
          "updatedAt": 1664000652615,
          "deletedAt": 0,
          "createdFirstAt": 1664000652615,
          "message": "",
          "peerSlug": "192-168-0-102",
          "id": "oRLXVixsBGJJSnCL",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000671197,
          "updatedAt": 1664000671197,
          "deletedAt": 0,
          "createdFirstAt": 1664000671197,
          "message": "🦭",
          "peerSlug": "192-168-0-102",
          "id": "EaGLDVLzFItacOeT",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        }
      ],
      "index": {
        "createdAt": 1667379539544,
        "updatedAt": 1667379539544,
        "deletedAt": 0,
        "createdFirstAt": 1667379539544,
        "id": "peermessage",
        "name": "PeerMessage",
        "slug": "peermessage",
        "operationRelativeTypescriptFilePath": "src/old/PeerMessage.ts",
        "hasGeneric": false,
        "isExported": true,
        "rawText": "\n\n/**\n * DEPRECTATED: should be replaced by `MediaPost`. MediaPost can  have many channels, and this is just one of them\n */\nexport interface PeerMessage extends DefaultModelType {\n  /**\n   * In  this case, this should be the createdAt of the original source! :)\n   */\n  createdFirstAt: number;\n  /**\n   * The peer this message has been posted by\n   */\n  peerSlug: Slug;\n  message: string;\n}",
        "extensions": [
          "DefaultModelType"
        ],
        "isOperationIndex": false,
        "description": "DEPRECTATED: should be replaced by `MediaPost`. MediaPost can  have many channels, and this is just one of them",
        "dbStorageMethod": "jsonMultiple",
        "isDbModel": true,
        "commentsInside": [],
        "type": {
          "typeDefinition": {
            "type": "object",
            "properties": {
              "createdAt": {
                "$ref": "#/definitions/CreatedAt"
              },
              "updatedAt": {
                "$ref": "#/definitions/UpdatedAt"
              },
              "deletedAt": {
                "$ref": "#/definitions/DeletedAt"
              },
              "createdFirstAt": {
                "type": "number",
                "description": "In  this case, this should be the createdAt of the original source! :)"
              },
              "operationName": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "projectRelativePath": {
                "type": "string",
                "description": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "operationRelativePath": {
                "type": "string",
                "description": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "id": {
                "$ref": "#/definitions/Id"
              },
              "categoryStackCalculated": {
                "$ref": "#/definitions/CategoryStack",
                "description": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!"
              },
              "peerSlug": {
                "$ref": "#/definitions/Slug",
                "description": "The peer this message has been posted by"
              },
              "message": {
                "type": "string"
              }
            },
            "required": [
              "createdAt",
              "createdFirstAt",
              "deletedAt",
              "id",
              "message",
              "operationName",
              "peerSlug",
              "projectRelativePath",
              "updatedAt"
            ],
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Id"
                },
                {
                  "not": {}
                }
              ]
            },
            "description": "DEPRECTATED: should be replaced by `MediaPost`. MediaPost can  have many channels, and this is just one of them"
          },
          "simplifiedSchema": {
            "fullComment": "DEPRECTATED: should be replaced by `MediaPost`. MediaPost can  have many channels, and this is just one of them",
            "properties": [
              {
                "name": "createdAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "updatedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "deletedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "createdFirstAt",
                "required": true,
                "schema": {
                  "fullComment": "In  this case, this should be the createdAt of the original source! :)",
                  "type": "number"
                }
              },
              {
                "name": "operationName",
                "required": true,
                "schema": {
                  "fullComment": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "null"
                }
              },
              {
                "name": "projectRelativePath",
                "required": true,
                "schema": {
                  "fullComment": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "operationRelativePath",
                "required": false,
                "schema": {
                  "fullComment": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "id",
                "required": true,
                "schema": {
                  "fullComment": "Should be an unique string By default, you can use `generateId()` to generate a random string of 16 characters. If you wish, you can also use any other string, as long as you are sure it's unique.\n\n# Background Info\n\nazAZ09 characters are easy to copy and provide 62 characters. the goal of an id is to be unique.\n\nthe advantage of a random id compared to an numeric id starting with 1 with auto increment is that you can set them up decentralised.\n\nthe change of duplicate ids gets bigger once you make them shorter the change of finding an existing id gets bigger once you make them shorter\n\nAn Id with 12 characters would provide 3.22e21 combinations.\n\nWhat is the change of duplicate ids? This depends on the amount of identifyable items in the data What is the change of guessing an id? This depends on speed of a brute force attack and the amount of available datapoints. If you can guess 10000 times per second, you can make 864.000.000 guesses. A billion guesses on a dataset of a billion datapoints yields 3226 correct ids on average.\n\nWhy make an id short? I don't know if there's an important reason.\n\nAll in all, I think we should make ids 24 characters by default. This would make it very easy to store, yet, with more than E42 combinations, make it nearly impossible to get duplication or brute force hits.\n\nAn id would look like this:\n\n``` { \"id\": \"sk2EcW9AkZpksk2EcW9AkZpk\" } ```\n\nLooks good to me! Don't think about it and just keep it simple. We can always migrate later to a bigger amount, but I don't see good reason to keep it smaller than this.",
                  "type": "string"
                }
              },
              {
                "name": "categoryStackCalculated",
                "required": false,
                "schema": {
                  "fullComment": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!\n\n",
                  "nb": "Changing this value when updating/upserting, changes where the item is located!",
                  "items": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "name": null
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "peerSlug",
                "required": true,
                "schema": {
                  "fullComment": "The peer this message has been posted by\n\nuse this for any identifier that's not an Id-type. Usually this is a kebab-case version of a written text, but it can also be a file path, for example.",
                  "type": "string"
                }
              },
              {
                "name": "message",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "type": "object"
          },
          "typeCoverage": 0,
          "rawType": "PeerMessage",
          "isArray": false,
          "isEnum": false,
          "isEnumLiteral": false,
          "isObject": false,
          "isPrimitive": false
        },
        "operationName": "peer-types",
        "projectRelativePath": "/operations/tools/p2p/peer-types/db/ts-interfaces/peermessage.json",
        "operationRelativePath": "/db/ts-interfaces/peermessage.json"
      },
      "fileLocations": [
        "/db/peer-messages.json",
        "/operations/tools/admin-operation/operation-ui/db/peer-messages.json",
        "/operations/tools/admin-operation/operation-web/db/peer-messages.json",
        "/operations/tools/asset/asset-demo-web/db/peer-messages.json",
        "/operations/tools/asset/asset-functions-js/db/peer-messages.json",
        "/operations/tools/asset/asset-functions-node/db/peer-messages.json",
        "/operations/tools/asset/asset-input/db/peer-messages.json",
        "/operations/tools/asset/asset-type/db/peer-messages.json",
        "/operations/tools/asset/asset-view/db/peer-messages.json",
        "/operations/tools/asset/text-or-binary/db/peer-messages.json",
        "/operations/tools/control-fs/folder-get-updated-at/db/peer-messages.json",
        "/operations/tools/control-fs/fs-util/db/peer-messages.json",
        "/operations/tools/control-fs/fs-util-js/db/peer-messages.json",
        "/operations/tools/control-fs/get-associated-md/db/peer-messages.json",
        "/operations/tools/control-fs/get-available-folder-path/db/peer-messages.json",
        "/operations/tools/control-fs/get-package-json/db/peer-messages.json",
        "/operations/tools/control-fs/get-package-source-paths/db/peer-messages.json",
        "/operations/tools/control-fs/get-ts-config/db/peer-messages.json",
        "/operations/tools/control-fs/path-util/db/peer-messages.json",
        "/operations/tools/control-fs/rename-template-files/db/peer-messages.json",
        "/operations/tools/control-fs/set-json-key/db/peer-messages.json",
        "/operations/tools/control-fs/watch-folders/db/peer-messages.json",
        "/operations/tools/control-fs/write-to-assets/db/peer-messages.json",
        "/operations/tools/control-project/all/db/peer-messages.json",
        "/operations/tools/control-project/deprecated/make-file-type/db/peer-messages.json",
        "/operations/tools/control-project/explore-project/db/peer-messages.json",
        "/operations/tools/control-project/get-all-operation-source-paths/db/peer-messages.json",
        "/operations/tools/control-project/get-path/db/peer-messages.json",
        "/operations/tools/control-project/k-explore/db/peer-messages.json",
        "/operations/tools/control-project/operation-util/db/peer-messages.json",
        "/operations/tools/control-project/pm2-util/db/peer-messages.json",
        "/operations/tools/control-system/brightness/db/peer-messages.json",
        "/operations/tools/control-system/clean-macos-setup/db/peer-messages.json",
        "/operations/tools/control-system/play-music/db/peer-messages.json",
        "/operations/tools/control-system/reminders/db/peer-messages.json",
        "/operations/tools/control-system/set-random-timezone/db/peer-messages.json",
        "/operations/tools/control-system/toggle-dark-mode/db/peer-messages.json",
        "/operations/tools/control-system/toggle-screen-sleep/db/peer-messages.json",
        "/operations/tools/control-system/volume/db/peer-messages.json",
        "/operations/tools/control-system/vscode-open/db/peer-messages.json",
        "/operations/tools/conventions/filename-conventions/db/peer-messages.json",
        "/operations/tools/conventions/name-conventions/db/peer-messages.json",
        "/operations/tools/conventions/port-conventions/db/peer-messages.json",
        "/operations/tools/database/database/db/peer-messages.json",
        "/operations/tools/database/db-recipes/db/peer-messages.json",
        "/operations/tools/database/db-ui/db/peer-messages.json",
        "/operations/tools/database/db-web/db/peer-messages.json",
        "/operations/tools/database/fs-orm/db/peer-messages.json",
        "/operations/tools/database/validate-model/db/peer-messages.json",
        "/operations/tools/deployment/bundling/bundle-util/db/peer-messages.json",
        "/operations/tools/deployment/bundling/bundle-web/db/peer-messages.json",
        "/operations/tools/deployment/bundling/create-backup/db/peer-messages.json",
        "/operations/tools/deployment/bundling/create-distribution/db/peer-messages.json",
        "/operations/tools/deployment/bundling/db-util/db/peer-messages.json",
        "/operations/tools/deployment/bundling/generate-bundle/db/peer-messages.json",
        "/operations/tools/deployment/bundling/install-node-modules/db/peer-messages.json",
        "/operations/tools/deployment/bundling/yarn-install-new-distribution/db/peer-messages.json",
        "/operations/tools/deployment/deprecated/sensible/sensible/db/peer-messages.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-core/db/peer-messages.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-server/db/peer-messages.json",
        "/operations/tools/generated/sdk/db/peer-messages.json",
        "/operations/tools/generated/sdk-api/db/peer-messages.json",
        "/operations/tools/generated/sdk-api-keys/db/peer-messages.json",
        "/operations/tools/generated/sdk-db/db/peer-messages.json",
        "/operations/tools/generated/sdk-env-private/db/peer-messages.json",
        "/operations/tools/generated/sdk-env-public/db/peer-messages.json",
        "/operations/tools/generated/sdk-function-paths/db/peer-messages.json",
        "/operations/tools/generated/sdk-js/db/peer-messages.json",
        "/operations/tools/generated/sdk-js-keys/db/peer-messages.json",
        "/operations/tools/generated/sdk-keys/db/peer-messages.json",
        "/operations/tools/generated/sdk-operations/db/peer-messages.json",
        "/operations/tools/interfaces/api/api/db/peer-messages.json",
        "/operations/tools/interfaces/api/api-store/db/peer-messages.json",
        "/operations/tools/interfaces/api/api-types/db/peer-messages.json",
        "/operations/tools/interfaces/api/deprecated/endpoint-util/db/peer-messages.json",
        "/operations/tools/interfaces/api/function-recipes/db/peer-messages.json",
        "/operations/tools/interfaces/api/function-server/db/peer-messages.json",
        "/operations/tools/interfaces/api/function-server-endpoints/db/peer-messages.json",
        "/operations/tools/interfaces/api/server-api-url/db/peer-messages.json",
        "/operations/tools/interfaces/api/server-login/db/peer-messages.json",
        "/operations/tools/interfaces/auditory-ui/remind-me-in/db/peer-messages.json",
        "/operations/tools/interfaces/auditory-ui/say/db/peer-messages.json",
        "/operations/tools/interfaces/cli/ask/db/peer-messages.json",
        "/operations/tools/interfaces/cli/cli-version-updates/db/peer-messages.json",
        "/operations/tools/interfaces/cli/function-util/db/peer-messages.json",
        "/operations/tools/interfaces/cli/string-to-json/db/peer-messages.json",
        "/operations/tools/interfaces/vui/function-form/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-expo/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-next/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/next/next-a-link/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-alert/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-asset-input/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-notification/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-router/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-select/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-ui/db/peer-messages.json",
        "/operations/tools/interfaces/vui/simplified-schema-form/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/big-button/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/clickable-icon/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/fancy-loader/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/labeled-button/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/login-form/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/markdown-parse-transpile-ui/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/spoiler/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/ui-util/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/use-url-store/db/peer-messages.json",
        "/operations/tools/language/detect-language/db/peer-messages.json",
        "/operations/tools/language/generate-simple-sentence/db/peer-messages.json",
        "/operations/tools/language/learn-toki-web/db/peer-messages.json",
        "/operations/tools/language/simplify-text/db/peer-messages.json",
        "/operations/tools/language/speak-words-to-learn/db/peer-messages.json",
        "/operations/tools/markdown-reader/augmented-words/db/peer-messages.json",
        "/operations/tools/markdown-reader/markdown-reader-functions/db/peer-messages.json",
        "/operations/tools/markdown-reader/markdown-reader-functions-js/db/peer-messages.json",
        "/operations/tools/markdown-reader/markdown-reader-types/db/peer-messages.json",
        "/operations/tools/markdown-reader/markdown-reader-ui/db/peer-messages.json",
        "/operations/tools/markdown-reader/markdown-reader-web/db/peer-messages.json",
        "/operations/tools/p2p/auth-types/db/peer-messages.json",
        "/operations/tools/p2p/mail/db/peer-messages.json",
        "/operations/tools/p2p/os-config/db/peer-messages.json",
        "/operations/tools/p2p/peer-functions/db/peer-messages.json",
        "/operations/tools/p2p/peer-types/db/peer-messages.json",
        "/operations/tools/p2p/peer-web/db/peer-messages.json",
        "/operations/tools/p2p/sms/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/compression/unzip/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/compression/zip/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/csv/csv-util/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/json/json-to-md/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/json/json-to-say-string/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/json/json-util/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/md/markdown-translator/db/peer-messages.json",
        "/operations/tools/parsing/parse-primitive/db/peer-messages.json",
        "/operations/tools/parsing/read-files/read-csv-file/db/peer-messages.json",
        "/operations/tools/parsing/read-files/read-json-file/db/peer-messages.json",
        "/operations/tools/parsing/read-files/read-kvmd-file/db/peer-messages.json",
        "/operations/tools/parsing/read-files/read-markdown-file/db/peer-messages.json",
        "/operations/tools/parsing/read-files/read-typescript-file/db/peer-messages.json",
        "/operations/tools/parsing/read-files/try-parse-json/db/peer-messages.json",
        "/operations/tools/parsing/rest-util/db/peer-messages.json",
        "/operations/tools/parsing/search/db/peer-messages.json",
        "/operations/tools/sensation/orientation/get-location/db/peer-messages.json",
        "/operations/tools/sensation/sight/get-light/db/peer-messages.json",
        "/operations/tools/social-media/social-media-controller/db/peer-messages.json",
        "/operations/tools/social-media/social-media-functions/db/peer-messages.json",
        "/operations/tools/social-media/social-media-types/db/peer-messages.json",
        "/operations/tools/social-media/social-media-ui/db/peer-messages.json",
        "/operations/tools/social-media/social-media-web/db/peer-messages.json",
        "/operations/tools/types/bundle-types/db/peer-messages.json",
        "/operations/tools/types/code-types/db/peer-messages.json",
        "/operations/tools/types/geo-types/db/peer-messages.json",
        "/operations/tools/types/invoice-types/db/peer-messages.json",
        "/operations/tools/types/language-types/db/peer-messages.json",
        "/operations/tools/types/matter-types/db/peer-messages.json",
        "/operations/tools/types/model-types/db/peer-messages.json",
        "/operations/tools/types/os-types/db/peer-messages.json",
        "/operations/tools/typescript/cleanup-typescript-database/db/peer-messages.json",
        "/operations/tools/typescript/comment-util/db/peer-messages.json",
        "/operations/tools/typescript/compile-typescript/db/peer-messages.json",
        "/operations/tools/typescript/find-all-dependency-operations/db/peer-messages.json",
        "/operations/tools/typescript/generate-index/db/peer-messages.json",
        "/operations/tools/typescript/generate-sdk-operations/db/peer-messages.json",
        "/operations/tools/typescript/get-imported-dependencies/db/peer-messages.json",
        "/operations/tools/typescript/get-imports-exports/db/peer-messages.json",
        "/operations/tools/typescript/get-missing-dependencies/db/peer-messages.json",
        "/operations/tools/typescript/index-typescript/db/peer-messages.json",
        "/operations/tools/typescript/lint/db/peer-messages.json",
        "/operations/tools/typescript/minify-build/db/peer-messages.json",
        "/operations/tools/typescript/new-template/db/peer-messages.json",
        "/operations/tools/typescript/package-scripts/db/peer-messages.json",
        "/operations/tools/typescript/prettier-operation/db/peer-messages.json",
        "/operations/tools/typescript/rebuild-operation/db/peer-messages.json",
        "/operations/tools/typescript/rename-operation/db/peer-messages.json",
        "/operations/tools/typescript/schema-util/db/peer-messages.json",
        "/operations/tools/typescript/testing/k-test/db/peer-messages.json",
        "/operations/tools/typescript/testing/make-test/db/peer-messages.json",
        "/operations/tools/typescript/ts-morph-util/db/peer-messages.json",
        "/operations/tools/typescript/watch-operations/db/peer-messages.json",
        "/operations/tools/util/child-process-helper/db/peer-messages.json",
        "/operations/tools/util/convert-case/db/peer-messages.json",
        "/operations/tools/util/execute-command/db/peer-messages.json",
        "/operations/tools/util/geo-parse/db/peer-messages.json",
        "/operations/tools/util/is-online/db/peer-messages.json",
        "/operations/tools/util/js-util/db/peer-messages.json",
        "/operations/tools/util/k-dev/db/peer-messages.json",
        "/operations/tools/util/log/db/peer-messages.json",
        "/operations/tools/util/nodemon/db/peer-messages.json",
        "/operations/tools/util/one-by-one/db/peer-messages.json",
        "/operations/tools/util/pluralize/db/peer-messages.json",
        "/operations/tools/util/run-child-process/db/peer-messages.json",
        "/operations/tools/writer/breadcrumbs/db/peer-messages.json",
        "/operations/tools/writer/file-icons/db/peer-messages.json",
        "/operations/tools/writer/file-search/db/peer-messages.json",
        "/operations/tools/writer/file-tabs/db/peer-messages.json",
        "/operations/tools/writer/file-writer/db/peer-messages.json",
        "/operations/tools/writer/hotkeys/db/peer-messages.json",
        "/operations/tools/writer/next-paths/db/peer-messages.json",
        "/operations/tools/writer/todo-ui/db/peer-messages.json",
        "/operations/tools/writer/todo-web/db/peer-messages.json",
        "/operations/tools/writer/writer-demo-web/db/peer-messages.json",
        "/operations/tools/writer/writer-functions/db/peer-messages.json",
        "/operations/tools/writer/writer-input/db/peer-messages.json",
        "/operations/tools/writer/writer-types/db/peer-messages.json",
        "/operations/tools/writer/writer-ui/db/peer-messages.json",
        "/operations/tools/writer/writer-web/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-types/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-web/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/peer-messages.json",
        "/operations/niches/passionfruit/apps/passionfruit-web/db/peer-messages.json",
        "/operations/niches/passionfruit/packages/foodchain-recipes/db/peer-messages.json",
        "/operations/niches/passionfruit/packages/foodchain-types/db/peer-messages.json",
        "/operations/niches/passionfruit/packages/passionfruit-ui/db/peer-messages.json",
        "/operations/niches/sprent/parse-address-henrik/db/peer-messages.json",
        "/operations/niches/sprent/parse-images/db/peer-messages.json"
      ],
      "hasMore": true
    },
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -3
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -709
      }
    ],
    "id": "vtxpknylgvhbgqycdznlayqe"
  },
  {
    "createdAt": 1667380979401,
    "updatedAt": 1667380979401,
    "deletedAt": 0,
    "createdFirstAt": 1667380979401,
    "functionName": "getDbModel",
    "tsFunctionId": "juyaxxbbboszvendbjbfqomm",
    "inputParameters": [
      "PeerMessage",
      {
        "start": 30,
        "limit": 30
      }
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": {
      "start": 30,
      "limit": 30,
      "data": [
        {
          "createdAt": 1664000671542,
          "updatedAt": 1664000671542,
          "deletedAt": 0,
          "createdFirstAt": 1664000671542,
          "message": "🦭",
          "peerSlug": "192-168-0-102",
          "id": "tINudavCqIIsytBk",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000690503,
          "updatedAt": 1664000690503,
          "deletedAt": 0,
          "createdFirstAt": 1664000690503,
          "message": "",
          "peerSlug": "192-168-0-102",
          "id": "VBXLCmRBZyHDttLN",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000762286,
          "updatedAt": 1664000762286,
          "deletedAt": 0,
          "createdFirstAt": 1664000762286,
          "message": "🐈‍⬛",
          "peerSlug": "192-168-0-102",
          "id": "PzGGADIQnaxBEpYx",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000242206,
          "updatedAt": 1664000242206,
          "deletedAt": 0,
          "createdFirstAt": 1664000242206,
          "message": "👀🥰👀🥰👀🥰👀🥰👀🥰👀🥰👀🥰👀🥰👀🥰👀🥰👀🥰👀🥰👀🥰👀🥰",
          "peerSlug": "192-168-0-33",
          "id": "ceychTgBwrSlrvSz",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000519957,
          "updatedAt": 1664000519957,
          "deletedAt": 0,
          "createdFirstAt": 1664000519957,
          "message": "Suusususus 👀🥰👀🥰👀🥰👀🥰",
          "peerSlug": "192-168-0-33",
          "id": "eGifLxEyINgrHxth",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000679861,
          "updatedAt": 1664000679861,
          "deletedAt": 0,
          "createdFirstAt": 1664000679861,
          "message": "Test 👀",
          "peerSlug": "192-168-0-33",
          "id": "rbvRdeUfZLSfgbpS",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000746183,
          "updatedAt": 1664000746183,
          "deletedAt": 0,
          "createdFirstAt": 1664000746183,
          "message": "👌👌👌👌👌👌👌👌👌👌",
          "peerSlug": "192-168-0-33",
          "id": "GVINwYPIWiObfuDD",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000751057,
          "updatedAt": 1664000751057,
          "deletedAt": 0,
          "createdFirstAt": 1664000751057,
          "message": "👌👌👌👌👌👌👌",
          "peerSlug": "192-168-0-33",
          "id": "jgCawWiYZbfLtbXo",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000757326,
          "updatedAt": 1664000757326,
          "deletedAt": 0,
          "createdFirstAt": 1664000757326,
          "message": "Test 👀",
          "peerSlug": "192-168-0-33",
          "id": "qUsbwbDmHLrROVlg",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000206448,
          "updatedAt": 1664000206448,
          "deletedAt": 0,
          "createdFirstAt": 1664000206448,
          "message": "hola ",
          "peerSlug": "192-168-0-102",
          "id": "rlpWSjdOQeElRlRG",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000206990,
          "updatedAt": 1664000206990,
          "deletedAt": 0,
          "createdFirstAt": 1664000206990,
          "message": "",
          "peerSlug": "192-168-0-102",
          "id": "mMKiMDZQrIbSQikf",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000209670,
          "updatedAt": 1664000209670,
          "deletedAt": 0,
          "createdFirstAt": 1664000209670,
          "message": "hols",
          "peerSlug": "192-168-0-102",
          "id": "zndNeVnBDUPqNPBN",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000261198,
          "updatedAt": 1664000261198,
          "deletedAt": 0,
          "createdFirstAt": 1664000261198,
          "message": "🤩",
          "peerSlug": "192-168-0-102",
          "id": "HhPVCyvYWvqaQMNv",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000547223,
          "updatedAt": 1664000547223,
          "deletedAt": 0,
          "createdFirstAt": 1664000547223,
          "message": "ulalallala",
          "peerSlug": "192-168-0-102",
          "id": "wFYhpbQsMbvKUKSw",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000567316,
          "updatedAt": 1664000567316,
          "deletedAt": 0,
          "createdFirstAt": 1664000567316,
          "message": "🦾",
          "peerSlug": "192-168-0-102",
          "id": "jjXfcXLjHvvewSlf",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000605998,
          "updatedAt": 1664000605998,
          "deletedAt": 0,
          "createdFirstAt": 1664000605998,
          "message": "🧌",
          "peerSlug": "192-168-0-102",
          "id": "gDLGRxrKoxOQYmKM",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000652316,
          "updatedAt": 1664000652316,
          "deletedAt": 0,
          "createdFirstAt": 1664000652316,
          "message": "",
          "peerSlug": "192-168-0-102",
          "id": "SdblaxWbrrUaHEFt",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000670828,
          "updatedAt": 1664000670828,
          "deletedAt": 0,
          "createdFirstAt": 1664000670828,
          "message": "🦭",
          "peerSlug": "192-168-0-102",
          "id": "OUZBhPdQOgLHHxtM",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000671343,
          "updatedAt": 1664000671343,
          "deletedAt": 0,
          "createdFirstAt": 1664000671343,
          "message": "🦭",
          "peerSlug": "192-168-0-102",
          "id": "BdSTXTzNWZUrLAhn",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000690240,
          "updatedAt": 1664000690240,
          "deletedAt": 0,
          "createdFirstAt": 1664000690240,
          "message": "",
          "peerSlug": "192-168-0-102",
          "id": "oDxnSPBsOQpkcfBI",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664000761980,
          "updatedAt": 1664000761980,
          "deletedAt": 0,
          "createdFirstAt": 1664000761980,
          "message": "🐈‍⬛",
          "peerSlug": "192-168-0-102",
          "id": "LKvACkylCttYrDOZ",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664001208453,
          "updatedAt": 1664001208453,
          "deletedAt": 0,
          "createdFirstAt": 1664001208453,
          "message": "",
          "peerSlug": "192-168-0-33",
          "id": "thMXkNlidMvOaKke",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664001293797,
          "updatedAt": 1664001293797,
          "deletedAt": 0,
          "createdFirstAt": 1664001293797,
          "message": "m online guyssss",
          "peerSlug": "192-168-0-102",
          "id": "BZiliRVJmfVxhbRH",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664001846818,
          "updatedAt": 1664001846818,
          "deletedAt": 0,
          "createdFirstAt": 1664001846818,
          "message": "ljgut",
          "peerSlug": "192-168-0-102",
          "id": "kkyVhFMcUBvLqyNI",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664001999781,
          "updatedAt": 1664001999781,
          "deletedAt": 0,
          "createdFirstAt": 1664001999781,
          "message": "yo",
          "peerSlug": "192-168-0-33",
          "id": "VhlhizEWKZjWKsTF",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664002001067,
          "updatedAt": 1664002001067,
          "deletedAt": 0,
          "createdFirstAt": 1664002001067,
          "message": "yo",
          "peerSlug": "192-168-0-33",
          "id": "dkiqTNzkJtXbVxqd",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664001293449,
          "updatedAt": 1664001293449,
          "deletedAt": 0,
          "createdFirstAt": 1664001293449,
          "message": "m online guyssss",
          "peerSlug": "192-168-0-102",
          "id": "QNKbQaQKepfUwYyS",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664001846388,
          "updatedAt": 1664001846388,
          "deletedAt": 0,
          "createdFirstAt": 1664001846388,
          "message": "ljgut",
          "peerSlug": "192-168-0-102",
          "id": "taRnMZYCVnfrSOZj",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664002096167,
          "updatedAt": 1664002096167,
          "deletedAt": 0,
          "createdFirstAt": 1664002096167,
          "message": "ok",
          "peerSlug": "192-168-0-102",
          "id": "ldZJmZFIkHmXxVmu",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        },
        {
          "createdAt": 1664002117160,
          "updatedAt": 1664002117160,
          "deletedAt": 0,
          "createdFirstAt": 1664002117160,
          "message": "hey its me bhagya",
          "peerSlug": "192-168-0-164",
          "id": "qINwPHNoBsdtPhGo",
          "operationName": null,
          "projectRelativePath": "/db/peer-messages.json"
        }
      ],
      "index": {
        "createdAt": 1667379539544,
        "updatedAt": 1667379539544,
        "deletedAt": 0,
        "createdFirstAt": 1667379539544,
        "id": "peermessage",
        "name": "PeerMessage",
        "slug": "peermessage",
        "operationRelativeTypescriptFilePath": "src/old/PeerMessage.ts",
        "hasGeneric": false,
        "isExported": true,
        "rawText": "\n\n/**\n * DEPRECTATED: should be replaced by `MediaPost`. MediaPost can  have many channels, and this is just one of them\n */\nexport interface PeerMessage extends DefaultModelType {\n  /**\n   * In  this case, this should be the createdAt of the original source! :)\n   */\n  createdFirstAt: number;\n  /**\n   * The peer this message has been posted by\n   */\n  peerSlug: Slug;\n  message: string;\n}",
        "extensions": [
          "DefaultModelType"
        ],
        "isOperationIndex": false,
        "description": "DEPRECTATED: should be replaced by `MediaPost`. MediaPost can  have many channels, and this is just one of them",
        "dbStorageMethod": "jsonMultiple",
        "isDbModel": true,
        "commentsInside": [],
        "type": {
          "typeDefinition": {
            "type": "object",
            "properties": {
              "createdAt": {
                "$ref": "#/definitions/CreatedAt"
              },
              "updatedAt": {
                "$ref": "#/definitions/UpdatedAt"
              },
              "deletedAt": {
                "$ref": "#/definitions/DeletedAt"
              },
              "createdFirstAt": {
                "type": "number",
                "description": "In  this case, this should be the createdAt of the original source! :)"
              },
              "operationName": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "projectRelativePath": {
                "type": "string",
                "description": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "operationRelativePath": {
                "type": "string",
                "description": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "id": {
                "$ref": "#/definitions/Id"
              },
              "categoryStackCalculated": {
                "$ref": "#/definitions/CategoryStack",
                "description": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!"
              },
              "peerSlug": {
                "$ref": "#/definitions/Slug",
                "description": "The peer this message has been posted by"
              },
              "message": {
                "type": "string"
              }
            },
            "required": [
              "createdAt",
              "createdFirstAt",
              "deletedAt",
              "id",
              "message",
              "operationName",
              "peerSlug",
              "projectRelativePath",
              "updatedAt"
            ],
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Id"
                },
                {
                  "not": {}
                }
              ]
            },
            "description": "DEPRECTATED: should be replaced by `MediaPost`. MediaPost can  have many channels, and this is just one of them"
          },
          "simplifiedSchema": {
            "fullComment": "DEPRECTATED: should be replaced by `MediaPost`. MediaPost can  have many channels, and this is just one of them",
            "properties": [
              {
                "name": "createdAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "updatedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "deletedAt",
                "required": true,
                "schema": {
                  "fullComment": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "createdFirstAt",
                "required": true,
                "schema": {
                  "fullComment": "In  this case, this should be the createdAt of the original source! :)",
                  "type": "number"
                }
              },
              {
                "name": "operationName",
                "required": true,
                "schema": {
                  "fullComment": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "null"
                }
              },
              {
                "name": "projectRelativePath",
                "required": true,
                "schema": {
                  "fullComment": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "operationRelativePath",
                "required": false,
                "schema": {
                  "fullComment": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "id",
                "required": true,
                "schema": {
                  "fullComment": "Should be an unique string By default, you can use `generateId()` to generate a random string of 16 characters. If you wish, you can also use any other string, as long as you are sure it's unique.\n\n# Background Info\n\nazAZ09 characters are easy to copy and provide 62 characters. the goal of an id is to be unique.\n\nthe advantage of a random id compared to an numeric id starting with 1 with auto increment is that you can set them up decentralised.\n\nthe change of duplicate ids gets bigger once you make them shorter the change of finding an existing id gets bigger once you make them shorter\n\nAn Id with 12 characters would provide 3.22e21 combinations.\n\nWhat is the change of duplicate ids? This depends on the amount of identifyable items in the data What is the change of guessing an id? This depends on speed of a brute force attack and the amount of available datapoints. If you can guess 10000 times per second, you can make 864.000.000 guesses. A billion guesses on a dataset of a billion datapoints yields 3226 correct ids on average.\n\nWhy make an id short? I don't know if there's an important reason.\n\nAll in all, I think we should make ids 24 characters by default. This would make it very easy to store, yet, with more than E42 combinations, make it nearly impossible to get duplication or brute force hits.\n\nAn id would look like this:\n\n``` { \"id\": \"sk2EcW9AkZpksk2EcW9AkZpk\" } ```\n\nLooks good to me! Don't think about it and just keep it simple. We can always migrate later to a bigger amount, but I don't see good reason to keep it smaller than this.",
                  "type": "string"
                }
              },
              {
                "name": "categoryStackCalculated",
                "required": false,
                "schema": {
                  "fullComment": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!\n\n",
                  "nb": "Changing this value when updating/upserting, changes where the item is located!",
                  "items": [
                    {
                      "schema": {
                        "type": "string"
                      },
                      "name": null
                    }
                  ],
                  "type": "array"
                }
              },
              {
                "name": "peerSlug",
                "required": true,
                "schema": {
                  "fullComment": "The peer this message has been posted by\n\nuse this for any identifier that's not an Id-type. Usually this is a kebab-case version of a written text, but it can also be a file path, for example.",
                  "type": "string"
                }
              },
              {
                "name": "message",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "type": "object"
          },
          "typeCoverage": 0,
          "rawType": "PeerMessage",
          "isArray": false,
          "isEnum": false,
          "isEnumLiteral": false,
          "isObject": false,
          "isPrimitive": false
        },
        "operationName": "peer-types",
        "projectRelativePath": "/operations/tools/p2p/peer-types/db/ts-interfaces/peermessage.json",
        "operationRelativePath": "/db/ts-interfaces/peermessage.json"
      },
      "fileLocations": [
        "/db/peer-messages.json",
        "/operations/tools/admin-operation/operation-ui/db/peer-messages.json",
        "/operations/tools/admin-operation/operation-web/db/peer-messages.json",
        "/operations/tools/asset/asset-demo-web/db/peer-messages.json",
        "/operations/tools/asset/asset-functions-js/db/peer-messages.json",
        "/operations/tools/asset/asset-functions-node/db/peer-messages.json",
        "/operations/tools/asset/asset-input/db/peer-messages.json",
        "/operations/tools/asset/asset-type/db/peer-messages.json",
        "/operations/tools/asset/asset-view/db/peer-messages.json",
        "/operations/tools/asset/text-or-binary/db/peer-messages.json",
        "/operations/tools/control-fs/folder-get-updated-at/db/peer-messages.json",
        "/operations/tools/control-fs/fs-util/db/peer-messages.json",
        "/operations/tools/control-fs/fs-util-js/db/peer-messages.json",
        "/operations/tools/control-fs/get-associated-md/db/peer-messages.json",
        "/operations/tools/control-fs/get-available-folder-path/db/peer-messages.json",
        "/operations/tools/control-fs/get-package-json/db/peer-messages.json",
        "/operations/tools/control-fs/get-package-source-paths/db/peer-messages.json",
        "/operations/tools/control-fs/get-ts-config/db/peer-messages.json",
        "/operations/tools/control-fs/path-util/db/peer-messages.json",
        "/operations/tools/control-fs/rename-template-files/db/peer-messages.json",
        "/operations/tools/control-fs/set-json-key/db/peer-messages.json",
        "/operations/tools/control-fs/watch-folders/db/peer-messages.json",
        "/operations/tools/control-fs/write-to-assets/db/peer-messages.json",
        "/operations/tools/control-project/all/db/peer-messages.json",
        "/operations/tools/control-project/deprecated/make-file-type/db/peer-messages.json",
        "/operations/tools/control-project/explore-project/db/peer-messages.json",
        "/operations/tools/control-project/get-all-operation-source-paths/db/peer-messages.json",
        "/operations/tools/control-project/get-path/db/peer-messages.json",
        "/operations/tools/control-project/k-explore/db/peer-messages.json",
        "/operations/tools/control-project/operation-util/db/peer-messages.json",
        "/operations/tools/control-project/pm2-util/db/peer-messages.json",
        "/operations/tools/control-system/brightness/db/peer-messages.json",
        "/operations/tools/control-system/clean-macos-setup/db/peer-messages.json",
        "/operations/tools/control-system/play-music/db/peer-messages.json",
        "/operations/tools/control-system/reminders/db/peer-messages.json",
        "/operations/tools/control-system/set-random-timezone/db/peer-messages.json",
        "/operations/tools/control-system/toggle-dark-mode/db/peer-messages.json",
        "/operations/tools/control-system/toggle-screen-sleep/db/peer-messages.json",
        "/operations/tools/control-system/volume/db/peer-messages.json",
        "/operations/tools/control-system/vscode-open/db/peer-messages.json",
        "/operations/tools/conventions/filename-conventions/db/peer-messages.json",
        "/operations/tools/conventions/name-conventions/db/peer-messages.json",
        "/operations/tools/conventions/port-conventions/db/peer-messages.json",
        "/operations/tools/database/database/db/peer-messages.json",
        "/operations/tools/database/db-recipes/db/peer-messages.json",
        "/operations/tools/database/db-ui/db/peer-messages.json",
        "/operations/tools/database/db-web/db/peer-messages.json",
        "/operations/tools/database/fs-orm/db/peer-messages.json",
        "/operations/tools/database/validate-model/db/peer-messages.json",
        "/operations/tools/deployment/bundling/bundle-util/db/peer-messages.json",
        "/operations/tools/deployment/bundling/bundle-web/db/peer-messages.json",
        "/operations/tools/deployment/bundling/create-backup/db/peer-messages.json",
        "/operations/tools/deployment/bundling/create-distribution/db/peer-messages.json",
        "/operations/tools/deployment/bundling/db-util/db/peer-messages.json",
        "/operations/tools/deployment/bundling/generate-bundle/db/peer-messages.json",
        "/operations/tools/deployment/bundling/install-node-modules/db/peer-messages.json",
        "/operations/tools/deployment/bundling/yarn-install-new-distribution/db/peer-messages.json",
        "/operations/tools/deployment/deprecated/sensible/sensible/db/peer-messages.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-core/db/peer-messages.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-server/db/peer-messages.json",
        "/operations/tools/generated/sdk/db/peer-messages.json",
        "/operations/tools/generated/sdk-api/db/peer-messages.json",
        "/operations/tools/generated/sdk-api-keys/db/peer-messages.json",
        "/operations/tools/generated/sdk-db/db/peer-messages.json",
        "/operations/tools/generated/sdk-env-private/db/peer-messages.json",
        "/operations/tools/generated/sdk-env-public/db/peer-messages.json",
        "/operations/tools/generated/sdk-function-paths/db/peer-messages.json",
        "/operations/tools/generated/sdk-js/db/peer-messages.json",
        "/operations/tools/generated/sdk-js-keys/db/peer-messages.json",
        "/operations/tools/generated/sdk-keys/db/peer-messages.json",
        "/operations/tools/generated/sdk-operations/db/peer-messages.json",
        "/operations/tools/interfaces/api/api/db/peer-messages.json",
        "/operations/tools/interfaces/api/api-store/db/peer-messages.json",
        "/operations/tools/interfaces/api/api-types/db/peer-messages.json",
        "/operations/tools/interfaces/api/deprecated/endpoint-util/db/peer-messages.json",
        "/operations/tools/interfaces/api/function-recipes/db/peer-messages.json",
        "/operations/tools/interfaces/api/function-server/db/peer-messages.json",
        "/operations/tools/interfaces/api/function-server-endpoints/db/peer-messages.json",
        "/operations/tools/interfaces/api/server-api-url/db/peer-messages.json",
        "/operations/tools/interfaces/api/server-login/db/peer-messages.json",
        "/operations/tools/interfaces/auditory-ui/remind-me-in/db/peer-messages.json",
        "/operations/tools/interfaces/auditory-ui/say/db/peer-messages.json",
        "/operations/tools/interfaces/cli/ask/db/peer-messages.json",
        "/operations/tools/interfaces/cli/cli-version-updates/db/peer-messages.json",
        "/operations/tools/interfaces/cli/function-util/db/peer-messages.json",
        "/operations/tools/interfaces/cli/string-to-json/db/peer-messages.json",
        "/operations/tools/interfaces/vui/function-form/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-expo/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-next/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/next/next-a-link/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-alert/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-asset-input/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-notification/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-router/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-select/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/peer-messages.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-ui/db/peer-messages.json",
        "/operations/tools/interfaces/vui/simplified-schema-form/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/big-button/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/clickable-icon/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/fancy-loader/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/labeled-button/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/login-form/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/markdown-parse-transpile-ui/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/spoiler/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/ui-util/db/peer-messages.json",
        "/operations/tools/interfaces/vui/vui-elements/use-url-store/db/peer-messages.json",
        "/operations/tools/language/detect-language/db/peer-messages.json",
        "/operations/tools/language/generate-simple-sentence/db/peer-messages.json",
        "/operations/tools/language/learn-toki-web/db/peer-messages.json",
        "/operations/tools/language/simplify-text/db/peer-messages.json",
        "/operations/tools/language/speak-words-to-learn/db/peer-messages.json",
        "/operations/tools/markdown-reader/augmented-words/db/peer-messages.json",
        "/operations/tools/markdown-reader/markdown-reader-functions/db/peer-messages.json",
        "/operations/tools/markdown-reader/markdown-reader-functions-js/db/peer-messages.json",
        "/operations/tools/markdown-reader/markdown-reader-types/db/peer-messages.json",
        "/operations/tools/markdown-reader/markdown-reader-ui/db/peer-messages.json",
        "/operations/tools/markdown-reader/markdown-reader-web/db/peer-messages.json",
        "/operations/tools/p2p/auth-types/db/peer-messages.json",
        "/operations/tools/p2p/mail/db/peer-messages.json",
        "/operations/tools/p2p/os-config/db/peer-messages.json",
        "/operations/tools/p2p/peer-functions/db/peer-messages.json",
        "/operations/tools/p2p/peer-types/db/peer-messages.json",
        "/operations/tools/p2p/peer-web/db/peer-messages.json",
        "/operations/tools/p2p/sms/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/compression/unzip/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/compression/zip/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/csv/csv-util/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/json/json-to-md/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/json/json-to-say-string/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/json/json-util/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/peer-messages.json",
        "/operations/tools/parsing/file-conversion/md/markdown-translator/db/peer-messages.json",
        "/operations/tools/parsing/parse-primitive/db/peer-messages.json",
        "/operations/tools/parsing/read-files/read-csv-file/db/peer-messages.json",
        "/operations/tools/parsing/read-files/read-json-file/db/peer-messages.json",
        "/operations/tools/parsing/read-files/read-kvmd-file/db/peer-messages.json",
        "/operations/tools/parsing/read-files/read-markdown-file/db/peer-messages.json",
        "/operations/tools/parsing/read-files/read-typescript-file/db/peer-messages.json",
        "/operations/tools/parsing/read-files/try-parse-json/db/peer-messages.json",
        "/operations/tools/parsing/rest-util/db/peer-messages.json",
        "/operations/tools/parsing/search/db/peer-messages.json",
        "/operations/tools/sensation/orientation/get-location/db/peer-messages.json",
        "/operations/tools/sensation/sight/get-light/db/peer-messages.json",
        "/operations/tools/social-media/social-media-controller/db/peer-messages.json",
        "/operations/tools/social-media/social-media-functions/db/peer-messages.json",
        "/operations/tools/social-media/social-media-types/db/peer-messages.json",
        "/operations/tools/social-media/social-media-ui/db/peer-messages.json",
        "/operations/tools/social-media/social-media-web/db/peer-messages.json",
        "/operations/tools/types/bundle-types/db/peer-messages.json",
        "/operations/tools/types/code-types/db/peer-messages.json",
        "/operations/tools/types/geo-types/db/peer-messages.json",
        "/operations/tools/types/invoice-types/db/peer-messages.json",
        "/operations/tools/types/language-types/db/peer-messages.json",
        "/operations/tools/types/matter-types/db/peer-messages.json",
        "/operations/tools/types/model-types/db/peer-messages.json",
        "/operations/tools/types/os-types/db/peer-messages.json",
        "/operations/tools/typescript/cleanup-typescript-database/db/peer-messages.json",
        "/operations/tools/typescript/comment-util/db/peer-messages.json",
        "/operations/tools/typescript/compile-typescript/db/peer-messages.json",
        "/operations/tools/typescript/find-all-dependency-operations/db/peer-messages.json",
        "/operations/tools/typescript/generate-index/db/peer-messages.json",
        "/operations/tools/typescript/generate-sdk-operations/db/peer-messages.json",
        "/operations/tools/typescript/get-imported-dependencies/db/peer-messages.json",
        "/operations/tools/typescript/get-imports-exports/db/peer-messages.json",
        "/operations/tools/typescript/get-missing-dependencies/db/peer-messages.json",
        "/operations/tools/typescript/index-typescript/db/peer-messages.json",
        "/operations/tools/typescript/lint/db/peer-messages.json",
        "/operations/tools/typescript/minify-build/db/peer-messages.json",
        "/operations/tools/typescript/new-template/db/peer-messages.json",
        "/operations/tools/typescript/package-scripts/db/peer-messages.json",
        "/operations/tools/typescript/prettier-operation/db/peer-messages.json",
        "/operations/tools/typescript/rebuild-operation/db/peer-messages.json",
        "/operations/tools/typescript/rename-operation/db/peer-messages.json",
        "/operations/tools/typescript/schema-util/db/peer-messages.json",
        "/operations/tools/typescript/testing/k-test/db/peer-messages.json",
        "/operations/tools/typescript/testing/make-test/db/peer-messages.json",
        "/operations/tools/typescript/ts-morph-util/db/peer-messages.json",
        "/operations/tools/typescript/watch-operations/db/peer-messages.json",
        "/operations/tools/util/child-process-helper/db/peer-messages.json",
        "/operations/tools/util/convert-case/db/peer-messages.json",
        "/operations/tools/util/execute-command/db/peer-messages.json",
        "/operations/tools/util/geo-parse/db/peer-messages.json",
        "/operations/tools/util/is-online/db/peer-messages.json",
        "/operations/tools/util/js-util/db/peer-messages.json",
        "/operations/tools/util/k-dev/db/peer-messages.json",
        "/operations/tools/util/log/db/peer-messages.json",
        "/operations/tools/util/nodemon/db/peer-messages.json",
        "/operations/tools/util/one-by-one/db/peer-messages.json",
        "/operations/tools/util/pluralize/db/peer-messages.json",
        "/operations/tools/util/run-child-process/db/peer-messages.json",
        "/operations/tools/writer/breadcrumbs/db/peer-messages.json",
        "/operations/tools/writer/file-icons/db/peer-messages.json",
        "/operations/tools/writer/file-search/db/peer-messages.json",
        "/operations/tools/writer/file-tabs/db/peer-messages.json",
        "/operations/tools/writer/file-writer/db/peer-messages.json",
        "/operations/tools/writer/hotkeys/db/peer-messages.json",
        "/operations/tools/writer/next-paths/db/peer-messages.json",
        "/operations/tools/writer/todo-ui/db/peer-messages.json",
        "/operations/tools/writer/todo-web/db/peer-messages.json",
        "/operations/tools/writer/writer-demo-web/db/peer-messages.json",
        "/operations/tools/writer/writer-functions/db/peer-messages.json",
        "/operations/tools/writer/writer-input/db/peer-messages.json",
        "/operations/tools/writer/writer-types/db/peer-messages.json",
        "/operations/tools/writer/writer-ui/db/peer-messages.json",
        "/operations/tools/writer/writer-web/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-types/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-web/db/peer-messages.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/peer-messages.json",
        "/operations/niches/passionfruit/apps/passionfruit-web/db/peer-messages.json",
        "/operations/niches/passionfruit/packages/foodchain-recipes/db/peer-messages.json",
        "/operations/niches/passionfruit/packages/foodchain-types/db/peer-messages.json",
        "/operations/niches/passionfruit/packages/passionfruit-ui/db/peer-messages.json",
        "/operations/niches/sprent/parse-address-henrik/db/peer-messages.json",
        "/operations/niches/sprent/parse-images/db/peer-messages.json"
      ],
      "hasMore": true
    },
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": 0
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -552
      }
    ],
    "id": "adiprpqhcttccqsgvyshdlel"
  },
  {
    "createdAt": 1667380987638,
    "updatedAt": 1667380987638,
    "deletedAt": 0,
    "createdFirstAt": 1667380987638,
    "functionName": "getReferencableModelData",
    "tsFunctionId": "nlwqlrrovbinvcftglpdofue",
    "inputParameters": [
      "CompanyType"
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": [
      {
        "id": "SnOqlxkHkRcrHvxa",
        "name": "hiu",
        "slug": "hiu"
      }
    ],
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -3
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -241
      }
    ],
    "id": "jtsottlfelovklrbncoeeiov"
  },
  {
    "createdAt": 1667380988089,
    "updatedAt": 1667380988089,
    "deletedAt": 0,
    "createdFirstAt": 1667380988089,
    "functionName": "getDbModel",
    "tsFunctionId": "juyaxxbbboszvendbjbfqomm",
    "inputParameters": [
      "CompanyType",
      {
        "start": 0,
        "limit": 30
      }
    ],
    "isExample": false,
    "isTest": false,
    "isResultFromCache": false,
    "output": {
      "start": 0,
      "limit": 30,
      "data": [
        {
          "createdAt": 1663137978413,
          "updatedAt": 1663137978413,
          "deletedAt": 0,
          "createdFirstAt": 1663137978413,
          "name": "hiu",
          "language": "fr",
          "description": "jkjiojoijo",
          "slug": "hiu",
          "id": "SnOqlxkHkRcrHvxa",
          "operationName": null,
          "projectRelativePath": "/db/company-types.json"
        }
      ],
      "index": {
        "createdAt": 1664373300373,
        "updatedAt": 1664373300373,
        "deletedAt": 0,
        "createdFirstAt": 1664373300373,
        "id": "company-type",
        "name": "CompanyType",
        "slug": "company-type",
        "operationRelativeTypescriptFilePath": "src/FoodChain.ts",
        "hasGeneric": false,
        "isExported": true,
        "rawText": "\n\n/** How is this company organized. We include this information so we know who we are talking to and what the expected outcomes could be\n * e.g. an corporations or group speaks for mulitple smaller companies, while a self-oganized company speaks for itself (expected options are: self-organized, corporation, group) */\n\nexport interface CompanyType extends SlugModelType {\n  description: string;\n}",
        "extensions": [
          "SlugModelType"
        ],
        "isOperationIndex": false,
        "description": "How is this company organized. We include this information so we know who we are talking to and what the expected outcomes could be\ne.g. an corporations or group speaks for mulitple smaller companies, while a self-oganized company speaks for itself (expected options are: self-organized, corporation, group)",
        "dbStorageMethod": "jsonMultiple",
        "isDbModel": true,
        "commentsInside": [],
        "type": {
          "typeDefinition": {
            "type": "object",
            "properties": {
              "slug": {
                "$ref": "#/definitions/Slug",
                "description": "kebab-case of the name, should be unique"
              },
              "name": {
                "type": "string"
              },
              "language": {
                "$ref": "#/definitions/Language",
                "default": "en"
              },
              "createdAt": {
                "$ref": "#/definitions/CreatedAt"
              },
              "updatedAt": {
                "$ref": "#/definitions/UpdatedAt"
              },
              "deletedAt": {
                "$ref": "#/definitions/DeletedAt"
              },
              "createdFirstAt": {
                "$ref": "#/definitions/CreatedFirstAt"
              },
              "operationName": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "projectRelativePath": {
                "type": "string",
                "description": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "operationRelativePath": {
                "type": "string",
                "description": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you"
              },
              "id": {
                "$ref": "#/definitions/Id"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "createdAt",
              "createdFirstAt",
              "deletedAt",
              "description",
              "id",
              "language",
              "name",
              "operationName",
              "projectRelativePath",
              "slug",
              "updatedAt"
            ],
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Id"
                },
                {
                  "not": {}
                }
              ]
            },
            "description": "How is this company organized. We include this information so we know who we are talking to and what the expected outcomes could be e.g. an corporations or group speaks for mulitple smaller companies, while a self-oganized company speaks for itself (expected options are: self-organized, corporation, group)"
          },
          "simplifiedSchema": {
            "description": "How is this company organized. We include this information so we know who we are talking to and what the expected outcomes could be e.g. an corporations or group speaks for mulitple smaller companies, while a self-oganized company speaks for itself (expected options are: self-organized, corporation, group)",
            "properties": [
              {
                "name": "slug",
                "required": true,
                "schema": {
                  "description": "use this for any identifier that's not an Id-type. Usually this is a kebab-case version of a written text, but it can also be a file path, for example.",
                  "type": "string"
                }
              },
              {
                "name": "name",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "language",
                "required": true,
                "schema": {
                  "description": "all currently supported languages",
                  "enum": [
                    "en",
                    "nl",
                    "np",
                    "pt",
                    "de",
                    "fr",
                    "es",
                    "it",
                    "no",
                    "sw",
                    "da",
                    "vn",
                    "in",
                    "vl",
                    "af",
                    "tk"
                  ],
                  "type": "string"
                }
              },
              {
                "name": "createdAt",
                "required": true,
                "schema": {
                  "description": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "updatedAt",
                "required": true,
                "schema": {
                  "description": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "deletedAt",
                "required": true,
                "schema": {
                  "description": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "createdFirstAt",
                "required": true,
                "schema": {
                  "description": "Time\n\nTime can be stored in various ways but in my experience it is, again, best to keep it simple and just have one way to store time. I can think about this for hours, but my intuition goes towards using the same format as Date.now() because it is a very small format and is easy to read.\n\nIt is the amount of ms since 1970.\n\nI could argue to store it in seconds since 1970 since there are few applications of doing ms, but maybe we do, and it's just 30% bigger. No problem.\n\nTherefore, let's store all time values in the format Date.now()",
                  "type": "number"
                }
              },
              {
                "name": "operationName",
                "required": true,
                "schema": {
                  "description": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "null"
                }
              },
              {
                "name": "projectRelativePath",
                "required": true,
                "schema": {
                  "description": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "operationRelativePath",
                "required": false,
                "schema": {
                  "description": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "id",
                "required": true,
                "schema": {
                  "description": "Should be an unique string By default, you can use `generateId()` to generate a random string of 16 characters. If you wish, you can also use any other string, as long as you are sure it's unique.\n\n# Background Info\n\nazAZ09 characters are easy to copy and provide 62 characters. the goal of an id is to be unique.\n\nthe advantage of a random id compared to an numeric id starting with 1 with auto increment is that you can set them up decentralised.\n\nthe change of duplicate ids gets bigger once you make them shorter the change of finding an existing id gets bigger once you make them shorter\n\nAn Id with 12 characters would provide 3.22e21 combinations.\n\nWhat is the change of duplicate ids? This depends on the amount of identifyable items in the data What is the change of guessing an id? This depends on speed of a brute force attack and the amount of available datapoints. If you can guess 10000 times per second, you can make 864.000.000 guesses. A billion guesses on a dataset of a billion datapoints yields 3226 correct ids on average.\n\nWhy make an id short? I don't know if there's an important reason.\n\nAll in all, I think we should make ids 24 characters by default. This would make it very easy to store, yet, with more than E42 combinations, make it nearly impossible to get duplication or brute force hits.\n\nAn id would look like this:\n\n``` { \"id\": \"sk2EcW9AkZpksk2EcW9AkZpk\" } ```\n\nLooks good to me! Don't think about it and just keep it simple. We can always migrate later to a bigger amount, but I don't see good reason to keep it smaller than this.",
                  "type": "string"
                }
              },
              {
                "name": "description",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "type": "object"
          },
          "typeCoverage": 0,
          "rawType": "CompanyType",
          "isArray": false,
          "isEnum": false,
          "isEnumLiteral": false,
          "isObject": false,
          "isPrimitive": false
        },
        "operationName": "foodchain-types",
        "projectRelativePath": "/operations/niches/passionfruit/packages/foodchain-types/db/ts-interfaces/company-type.json",
        "operationRelativePath": "/db/ts-interfaces/company-type.json"
      },
      "fileLocations": [
        "/db/company-types.json",
        "/operations/tools/admin-operation/operation-ui/db/company-types.json",
        "/operations/tools/admin-operation/operation-web/db/company-types.json",
        "/operations/tools/asset/asset-demo-web/db/company-types.json",
        "/operations/tools/asset/asset-functions-js/db/company-types.json",
        "/operations/tools/asset/asset-functions-node/db/company-types.json",
        "/operations/tools/asset/asset-input/db/company-types.json",
        "/operations/tools/asset/asset-type/db/company-types.json",
        "/operations/tools/asset/asset-view/db/company-types.json",
        "/operations/tools/asset/text-or-binary/db/company-types.json",
        "/operations/tools/control-fs/folder-get-updated-at/db/company-types.json",
        "/operations/tools/control-fs/fs-util/db/company-types.json",
        "/operations/tools/control-fs/fs-util-js/db/company-types.json",
        "/operations/tools/control-fs/get-associated-md/db/company-types.json",
        "/operations/tools/control-fs/get-available-folder-path/db/company-types.json",
        "/operations/tools/control-fs/get-package-json/db/company-types.json",
        "/operations/tools/control-fs/get-package-source-paths/db/company-types.json",
        "/operations/tools/control-fs/get-ts-config/db/company-types.json",
        "/operations/tools/control-fs/path-util/db/company-types.json",
        "/operations/tools/control-fs/rename-template-files/db/company-types.json",
        "/operations/tools/control-fs/set-json-key/db/company-types.json",
        "/operations/tools/control-fs/watch-folders/db/company-types.json",
        "/operations/tools/control-fs/write-to-assets/db/company-types.json",
        "/operations/tools/control-project/all/db/company-types.json",
        "/operations/tools/control-project/deprecated/make-file-type/db/company-types.json",
        "/operations/tools/control-project/explore-project/db/company-types.json",
        "/operations/tools/control-project/get-all-operation-source-paths/db/company-types.json",
        "/operations/tools/control-project/get-path/db/company-types.json",
        "/operations/tools/control-project/k-explore/db/company-types.json",
        "/operations/tools/control-project/operation-util/db/company-types.json",
        "/operations/tools/control-project/pm2-util/db/company-types.json",
        "/operations/tools/control-system/brightness/db/company-types.json",
        "/operations/tools/control-system/clean-macos-setup/db/company-types.json",
        "/operations/tools/control-system/play-music/db/company-types.json",
        "/operations/tools/control-system/reminders/db/company-types.json",
        "/operations/tools/control-system/set-random-timezone/db/company-types.json",
        "/operations/tools/control-system/toggle-dark-mode/db/company-types.json",
        "/operations/tools/control-system/toggle-screen-sleep/db/company-types.json",
        "/operations/tools/control-system/volume/db/company-types.json",
        "/operations/tools/control-system/vscode-open/db/company-types.json",
        "/operations/tools/conventions/filename-conventions/db/company-types.json",
        "/operations/tools/conventions/name-conventions/db/company-types.json",
        "/operations/tools/conventions/port-conventions/db/company-types.json",
        "/operations/tools/database/database/db/company-types.json",
        "/operations/tools/database/db-recipes/db/company-types.json",
        "/operations/tools/database/db-ui/db/company-types.json",
        "/operations/tools/database/db-web/db/company-types.json",
        "/operations/tools/database/fs-orm/db/company-types.json",
        "/operations/tools/database/validate-model/db/company-types.json",
        "/operations/tools/deployment/bundling/bundle-util/db/company-types.json",
        "/operations/tools/deployment/bundling/bundle-web/db/company-types.json",
        "/operations/tools/deployment/bundling/create-backup/db/company-types.json",
        "/operations/tools/deployment/bundling/create-distribution/db/company-types.json",
        "/operations/tools/deployment/bundling/db-util/db/company-types.json",
        "/operations/tools/deployment/bundling/generate-bundle/db/company-types.json",
        "/operations/tools/deployment/bundling/install-node-modules/db/company-types.json",
        "/operations/tools/deployment/bundling/yarn-install-new-distribution/db/company-types.json",
        "/operations/tools/deployment/deprecated/sensible/sensible/db/company-types.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-core/db/company-types.json",
        "/operations/tools/deployment/deprecated/sensible/sensible-server/db/company-types.json",
        "/operations/tools/generated/sdk/db/company-types.json",
        "/operations/tools/generated/sdk-api/db/company-types.json",
        "/operations/tools/generated/sdk-api-keys/db/company-types.json",
        "/operations/tools/generated/sdk-db/db/company-types.json",
        "/operations/tools/generated/sdk-env-private/db/company-types.json",
        "/operations/tools/generated/sdk-env-public/db/company-types.json",
        "/operations/tools/generated/sdk-function-paths/db/company-types.json",
        "/operations/tools/generated/sdk-js/db/company-types.json",
        "/operations/tools/generated/sdk-js-keys/db/company-types.json",
        "/operations/tools/generated/sdk-keys/db/company-types.json",
        "/operations/tools/generated/sdk-operations/db/company-types.json",
        "/operations/tools/interfaces/api/api/db/company-types.json",
        "/operations/tools/interfaces/api/api-store/db/company-types.json",
        "/operations/tools/interfaces/api/api-types/db/company-types.json",
        "/operations/tools/interfaces/api/deprecated/endpoint-util/db/company-types.json",
        "/operations/tools/interfaces/api/function-recipes/db/company-types.json",
        "/operations/tools/interfaces/api/function-server/db/company-types.json",
        "/operations/tools/interfaces/api/function-server-endpoints/db/company-types.json",
        "/operations/tools/interfaces/api/server-api-url/db/company-types.json",
        "/operations/tools/interfaces/api/server-login/db/company-types.json",
        "/operations/tools/interfaces/auditory-ui/remind-me-in/db/company-types.json",
        "/operations/tools/interfaces/auditory-ui/say/db/company-types.json",
        "/operations/tools/interfaces/cli/ask/db/company-types.json",
        "/operations/tools/interfaces/cli/cli-version-updates/db/company-types.json",
        "/operations/tools/interfaces/cli/function-util/db/company-types.json",
        "/operations/tools/interfaces/cli/string-to-json/db/company-types.json",
        "/operations/tools/interfaces/vui/function-form/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-expo/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-next/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/example/rwn-ui/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/next/next-a-link/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-alert/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-asset-input/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-modal/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-notification/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-router/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-select/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-table/db/company-types.json",
        "/operations/tools/interfaces/vui/react-with-native/react-with-native-ui/db/company-types.json",
        "/operations/tools/interfaces/vui/simplified-schema-form/db/company-types.json",
        "/operations/tools/interfaces/vui/vui-elements/big-button/db/company-types.json",
        "/operations/tools/interfaces/vui/vui-elements/clickable-icon/db/company-types.json",
        "/operations/tools/interfaces/vui/vui-elements/fancy-loader/db/company-types.json",
        "/operations/tools/interfaces/vui/vui-elements/labeled-button/db/company-types.json",
        "/operations/tools/interfaces/vui/vui-elements/login-form/db/company-types.json",
        "/operations/tools/interfaces/vui/vui-elements/markdown-parse-transpile-ui/db/company-types.json",
        "/operations/tools/interfaces/vui/vui-elements/nested-menu/db/company-types.json",
        "/operations/tools/interfaces/vui/vui-elements/react-with-native-store/db/company-types.json",
        "/operations/tools/interfaces/vui/vui-elements/spoiler/db/company-types.json",
        "/operations/tools/interfaces/vui/vui-elements/ui-util/db/company-types.json",
        "/operations/tools/interfaces/vui/vui-elements/use-url-store/db/company-types.json",
        "/operations/tools/language/detect-language/db/company-types.json",
        "/operations/tools/language/generate-simple-sentence/db/company-types.json",
        "/operations/tools/language/learn-toki-web/db/company-types.json",
        "/operations/tools/language/simplify-text/db/company-types.json",
        "/operations/tools/language/speak-words-to-learn/db/company-types.json",
        "/operations/tools/markdown-reader/augmented-words/db/company-types.json",
        "/operations/tools/markdown-reader/markdown-reader-functions/db/company-types.json",
        "/operations/tools/markdown-reader/markdown-reader-functions-js/db/company-types.json",
        "/operations/tools/markdown-reader/markdown-reader-types/db/company-types.json",
        "/operations/tools/markdown-reader/markdown-reader-ui/db/company-types.json",
        "/operations/tools/markdown-reader/markdown-reader-web/db/company-types.json",
        "/operations/tools/p2p/auth-types/db/company-types.json",
        "/operations/tools/p2p/mail/db/company-types.json",
        "/operations/tools/p2p/os-config/db/company-types.json",
        "/operations/tools/p2p/peer-functions/db/company-types.json",
        "/operations/tools/p2p/peer-types/db/company-types.json",
        "/operations/tools/p2p/peer-web/db/company-types.json",
        "/operations/tools/p2p/sms/db/company-types.json",
        "/operations/tools/parsing/file-conversion/compression/unzip/db/company-types.json",
        "/operations/tools/parsing/file-conversion/compression/zip/db/company-types.json",
        "/operations/tools/parsing/file-conversion/csv/csv-util/db/company-types.json",
        "/operations/tools/parsing/file-conversion/json/json-to-md/db/company-types.json",
        "/operations/tools/parsing/file-conversion/json/json-to-say-string/db/company-types.json",
        "/operations/tools/parsing/file-conversion/json/json-util/db/company-types.json",
        "/operations/tools/parsing/file-conversion/md/key-value-markdown-js/db/company-types.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parse-js/db/company-types.json",
        "/operations/tools/parsing/file-conversion/md/markdown-parsings/db/company-types.json",
        "/operations/tools/parsing/file-conversion/md/markdown-translator/db/company-types.json",
        "/operations/tools/parsing/parse-primitive/db/company-types.json",
        "/operations/tools/parsing/read-files/read-csv-file/db/company-types.json",
        "/operations/tools/parsing/read-files/read-json-file/db/company-types.json",
        "/operations/tools/parsing/read-files/read-kvmd-file/db/company-types.json",
        "/operations/tools/parsing/read-files/read-markdown-file/db/company-types.json",
        "/operations/tools/parsing/read-files/read-typescript-file/db/company-types.json",
        "/operations/tools/parsing/read-files/try-parse-json/db/company-types.json",
        "/operations/tools/parsing/rest-util/db/company-types.json",
        "/operations/tools/parsing/search/db/company-types.json",
        "/operations/tools/sensation/orientation/get-location/db/company-types.json",
        "/operations/tools/sensation/sight/get-light/db/company-types.json",
        "/operations/tools/social-media/social-media-controller/db/company-types.json",
        "/operations/tools/social-media/social-media-functions/db/company-types.json",
        "/operations/tools/social-media/social-media-types/db/company-types.json",
        "/operations/tools/social-media/social-media-ui/db/company-types.json",
        "/operations/tools/social-media/social-media-web/db/company-types.json",
        "/operations/tools/types/bundle-types/db/company-types.json",
        "/operations/tools/types/code-types/db/company-types.json",
        "/operations/tools/types/geo-types/db/company-types.json",
        "/operations/tools/types/invoice-types/db/company-types.json",
        "/operations/tools/types/language-types/db/company-types.json",
        "/operations/tools/types/matter-types/db/company-types.json",
        "/operations/tools/types/model-types/db/company-types.json",
        "/operations/tools/types/os-types/db/company-types.json",
        "/operations/tools/typescript/cleanup-typescript-database/db/company-types.json",
        "/operations/tools/typescript/comment-util/db/company-types.json",
        "/operations/tools/typescript/compile-typescript/db/company-types.json",
        "/operations/tools/typescript/find-all-dependency-operations/db/company-types.json",
        "/operations/tools/typescript/generate-index/db/company-types.json",
        "/operations/tools/typescript/generate-sdk-operations/db/company-types.json",
        "/operations/tools/typescript/get-imported-dependencies/db/company-types.json",
        "/operations/tools/typescript/get-imports-exports/db/company-types.json",
        "/operations/tools/typescript/get-missing-dependencies/db/company-types.json",
        "/operations/tools/typescript/index-typescript/db/company-types.json",
        "/operations/tools/typescript/lint/db/company-types.json",
        "/operations/tools/typescript/minify-build/db/company-types.json",
        "/operations/tools/typescript/new-template/db/company-types.json",
        "/operations/tools/typescript/package-scripts/db/company-types.json",
        "/operations/tools/typescript/prettier-operation/db/company-types.json",
        "/operations/tools/typescript/rebuild-operation/db/company-types.json",
        "/operations/tools/typescript/rename-operation/db/company-types.json",
        "/operations/tools/typescript/schema-util/db/company-types.json",
        "/operations/tools/typescript/testing/k-test/db/company-types.json",
        "/operations/tools/typescript/testing/make-test/db/company-types.json",
        "/operations/tools/typescript/ts-morph-util/db/company-types.json",
        "/operations/tools/typescript/watch-operations/db/company-types.json",
        "/operations/tools/util/child-process-helper/db/company-types.json",
        "/operations/tools/util/convert-case/db/company-types.json",
        "/operations/tools/util/execute-command/db/company-types.json",
        "/operations/tools/util/geo-parse/db/company-types.json",
        "/operations/tools/util/is-online/db/company-types.json",
        "/operations/tools/util/js-util/db/company-types.json",
        "/operations/tools/util/k-dev/db/company-types.json",
        "/operations/tools/util/log/db/company-types.json",
        "/operations/tools/util/nodemon/db/company-types.json",
        "/operations/tools/util/one-by-one/db/company-types.json",
        "/operations/tools/util/pluralize/db/company-types.json",
        "/operations/tools/util/run-child-process/db/company-types.json",
        "/operations/tools/writer/breadcrumbs/db/company-types.json",
        "/operations/tools/writer/file-icons/db/company-types.json",
        "/operations/tools/writer/file-search/db/company-types.json",
        "/operations/tools/writer/file-tabs/db/company-types.json",
        "/operations/tools/writer/file-writer/db/company-types.json",
        "/operations/tools/writer/hotkeys/db/company-types.json",
        "/operations/tools/writer/next-paths/db/company-types.json",
        "/operations/tools/writer/todo-ui/db/company-types.json",
        "/operations/tools/writer/todo-web/db/company-types.json",
        "/operations/tools/writer/writer-demo-web/db/company-types.json",
        "/operations/tools/writer/writer-functions/db/company-types.json",
        "/operations/tools/writer/writer-input/db/company-types.json",
        "/operations/tools/writer/writer-types/db/company-types.json",
        "/operations/tools/writer/writer-ui/db/company-types.json",
        "/operations/tools/writer/writer-web/db/company-types.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/course-basics/db/company-types.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-functions/db/company-types.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-types/db/company-types.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-ui/db/company-types.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/himalayajeep/himalayajeep-web/db/company-types.json",
        "/operations/niches/code-from-anywhere/bootcamp-operations/human/db/company-types.json",
        "/operations/niches/passionfruit/apps/passionfruit-web/db/company-types.json",
        "/operations/niches/passionfruit/packages/foodchain-recipes/db/company-types.json",
        "/operations/niches/passionfruit/packages/foodchain-types/db/company-types.json",
        "/operations/niches/passionfruit/packages/passionfruit-ui/db/company-types.json",
        "/operations/niches/sprent/parse-address-henrik/db/company-types.json",
        "/operations/niches/sprent/parse-images/db/company-types.json"
      ],
      "hasMore": false
    },
    "performance": [
      {
        "label": "upsertDevice",
        "durationMs": 0
      },
      {
        "label": "getTsFunction",
        "durationMs": -3
      },
      {
        "label": "auth",
        "durationMs": 0
      },
      {
        "label": "cacheLookup",
        "durationMs": 0
      },
      {
        "label": "inputValidation",
        "durationMs": 0
      },
      {
        "label": "function",
        "durationMs": -694
      }
    ],
    "id": "titmxzlyiddmmnwdyrkmhmrm"
  }
]