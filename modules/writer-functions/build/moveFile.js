"use strict";var __awaiter=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function s(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}u((n=n.apply(e,t||[])).next())}))},__generator=this&&this.__generator||function(e,t){var r,n,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(i=2&o[0]?n.return:o[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,o[1])).done)return i;switch(n=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=s.trys,(i=i.length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.moveFile=void 0;var fs_util_1=require("fs-util"),get_path_1=require("get-path"),moveFile=function(
/**
 * Can be file only for now
 */
e,t){return __awaiter(void 0,void 0,void 0,(function(){var r,n,i;return __generator(this,(function(o){switch(o.label){case 0:return(r=(0,get_path_1.getProjectRoot)())?(n=fs_util_1.path.join(r,e),fs_util_1.fs.existsSync(n)?(i=fs_util_1.path.join(t,fs_util_1.path.parse(n).base),fs_util_1.fs.existsSync(i)?[2/*return*/,{isSuccessful:!1,message:"File already exists"}]:[4/*yield*/,fs_util_1.fs.rename(n,i)]):[2/*return*/,{isSuccessful:!1,message:"This file or folder doesn't exist"}]):[2/*return*/,{isSuccessful:!1,message:"No project root found"}];case 1:return o.sent(),[2/*return*/,{isSuccessful:!0}]}}))}))};exports.moveFile=moveFile;
//# sourceMappingURL=moveFile.js.map