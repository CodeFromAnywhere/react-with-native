{
  "createdAt": 1667379925782,
  "updatedAt": 1667379925782,
  "deletedAt": 0,
  "createdFirstAt": 1667379925782,
  "id": "frontmatter",
  "name": "Frontmatter",
  "slug": "frontmatter",
  "operationRelativeTypescriptFilePath": "src/markdown-model-type.ts",
  "hasGeneric": false,
  "isExported": false,
  "isOperationIndex": false,
  "description": "Our version of frontmatter is a bit simpler than regular frontmatter\n\nNot sure if this is a good idea, but it keeps it simple for our OS\n\nall values parse in a similar way to csv\n\nmake sure that you use quotes if you want to store a string with commas, because commas in a parameter indicate that it is a string array\n\nNB: string arrays are comma separated values, where you can put values with special characters in between quotes",
  "isDbModel": false,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "null"
          },
          {
            "type": "boolean"
          },
          {
            "not": {}
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "description": "Our version of frontmatter is a bit simpler than regular frontmatter\n\nNot sure if this is a good idea, but it keeps it simple for our OS\n\nall values parse in a similar way to csv\n\nmake sure that you use quotes if you want to store a string with commas, because commas in a parameter indicate that it is a string array\n\nNB: string arrays are comma separated values, where you can put values with special characters in between quotes"
    },
    "simplifiedSchema": {
      "fullComment": "Our version of frontmatter is a bit simpler than regular frontmatter\n\nNot sure if this is a good idea, but it keeps it simple for our OS\n\nall values parse in a similar way to csv\n\nmake sure that you use quotes if you want to store a string with commas, because commas in a parameter indicate that it is a string array\n\nNB: string arrays are comma separated values, where you can put values with special characters in between quotes",
      "nb": "string arrays are comma separated values, where you can put values with special characters in between quotes",
      "properties": [],
      "type": "object"
    },
    "typeCoverage": 0,
    "rawType": "Frontmatter",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}