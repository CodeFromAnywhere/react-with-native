{
  "createdAt": 1666260571052,
  "updatedAt": 1666260571052,
  "deletedAt": 0,
  "createdFirstAt": 1666260571052,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getGetApiUrl.ts",
  "commentsInside": [],
  "rawText": " (\n  apiUrl: string,\n  apiFunctionName: string,\n  query: { [name: string]: string[] | string | undefined }\n) => {\n  const ending = \"GetApi\";\n  const apiPath = apiFunctionName.slice(\n    0,\n    apiFunctionName.length - ending.length\n  );\n\n  const queryString = Object.keys(query).length > 0 ? toQueryString(query) : \"\";\n  const url = `${apiUrl}/${apiPath}${queryString}`;\n  return url;\n}",
  "name": "getGetApiUrl",
  "slug": "get-get-api-url",
  "parameters": [
    {
      "name": "apiUrl",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "apiFunctionName",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "query",
      "schema": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            },
            {
              "not": {}
            }
          ]
        }
      },
      "simplifiedSchema": {
        "properties": [],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "gets an api url for a context get api\n\nreturns something like `[apiUrl]/[apiFunctionName][queryString]`",
  "returnType": {
    "rawType": "String",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/String"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 489,
    "lines": 17,
    "bytes": 489,
    "bytesPerCharacter": 1,
    "charactersPerLine": 29,
    "linesPerFile": 17,
    "numberOfFiles": 1
  },
  "id": "usvrdovnngzvtogqmqasnieq"
}