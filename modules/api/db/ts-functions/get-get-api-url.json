{
  "createdAt": 1670528160982,
  "updatedAt": 1670528160982,
  "deletedAt": 0,
  "createdFirstAt": 1670528160982,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/getGetApiUrl.ts",
  "commentsInside": [],
  "rawText": " (\n  apiUrl: string | undefined,\n  apiFunctionName: string,\n  query: { [name: string]: string[] | string | undefined }\n): string | undefined => {\n  if (!apiUrl) return;\n  const queryString = Object.keys(query).length > 0 ? toQueryString(query) : \"\";\n  const url = `${apiUrl}/function/${apiFunctionName}${queryString}`;\n  return url;\n}",
  "name": "getGetApiUrl",
  "slug": "get-get-api-url",
  "parameters": [
    {
      "name": "apiUrl",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": false
    },
    {
      "name": "apiFunctionName",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "query",
      "schema": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            },
            {
              "not": {}
            }
          ]
        }
      },
      "simplifiedSchema": {
        "properties": [],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "gets an api url for a context get api\n\nreturns something like `[apiUrl]/[apiFunctionName][queryString]`",
  "returnType": {
    "rawType": "string | undefined",
    "typeDefinition": {
      "optional": true,
      "type": "string",
      "allOf": [
        {
          "transform": [
            "trim"
          ]
        },
        {
          "minLength": 1
        }
      ]
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "type": "string"
    }
  },
  "maxIndentationDepth": 1,
  "size": {
    "characters": 437,
    "lines": 12,
    "bytes": 437,
    "bytesPerCharacter": 1,
    "charactersPerLine": 36,
    "linesPerFile": 12,
    "numberOfFiles": 1
  },
  "id": "zeprbqxputkpjmnxvimlsraz"
}