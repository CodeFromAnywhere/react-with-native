[{"id":"eErKsereKDWILHlw","comments":[],"name":"shorthands","slug":"shorthands","value":"{\n  filePath: \"input-file\",\n  speechRate: \"rate\",\n  voice: \"voice\",\n  outputFilePath: \"output-file\",\n  audioDevice: \"audio-device\",\n  showProgress: \"progress\",\n  interactive: \"interactive\",\n  fileFormat: \"file-format\",\n  dataFormat: \"data-format\",\n  bitRate: \"bit-rate\",\n  quality: \"quality\",\n}","type":{"rawType":"{ filePath: string; speechRate: string; voice: string; outputFilePath: string; audioDevice: string; showProgress: string; interactive: string; fileFormat: string; dataFormat: string; bitRate: string; quality: string; }","typeDefinition":{"type":"object","properties":{"filePath":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"speechRate":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"voice":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"outputFilePath":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"audioDevice":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"showProgress":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"interactive":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"fileFormat":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"dataFormat":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"bitRate":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"quality":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]}},"required":["filePath","speechRate","voice","outputFilePath","audioDevice","showProgress","interactive","fileFormat","dataFormat","bitRate","quality"],"optional":false},"typeCoverage":0,"isArray":false,"isEnum":false,"isObject":true,"isPrimitive":false,"isEnumLiteral":false,"simplifiedSchema":{"properties":[{"name":"filePath","required":true,"schema":{"type":"string"}},{"name":"speechRate","required":true,"schema":{"type":"string"}},{"name":"voice","required":true,"schema":{"type":"string"}},{"name":"outputFilePath","required":true,"schema":{"type":"string"}},{"name":"audioDevice","required":true,"schema":{"type":"string"}},{"name":"showProgress","required":true,"schema":{"type":"string"}},{"name":"interactive","required":true,"schema":{"type":"string"}},{"name":"fileFormat","required":true,"schema":{"type":"string"}},{"name":"dataFormat","required":true,"schema":{"type":"string"}},{"name":"bitRate","required":true,"schema":{"type":"string"}},{"name":"quality","required":true,"schema":{"type":"string"}}],"type":"object"}},"classification":"const","relativePathFromProjectRoot":"/tools/ui/auditory-ui/say/src/say.ts","srcFileId":"/say","operationFolderName":"say","relativeFilePathFromSrc":"/say.ts","relativeOperationBasePathFromProjectRoot":"/tools/ui/auditory-ui/say","operationName":"say"},{"id":"vTxLzIRklpWvUuAd","comments":[],"name":"test","slug":"test","value":"makeTest(\n  () => {\n    // say(\"test\");\n    // TODO: how do we test this without actually saying something? probably we can test if the cli works by outputting the result to a temporary mp3 file\n  },\n  () => true\n)","type":{"rawType":"() => Promise<boolean>","typeDefinition":{"type":"object","properties":{},"optional":false},"typeCoverage":0,"isArray":false,"isEnum":false,"isObject":true,"isPrimitive":false,"isEnumLiteral":false,"simplifiedSchema":{"properties":[],"type":"object"}},"classification":"const","relativePathFromProjectRoot":"/tools/ui/auditory-ui/say/src/say.ts","srcFileId":"/say","operationFolderName":"say","relativeFilePathFromSrc":"/say.ts","relativeOperationBasePathFromProjectRoot":"/tools/ui/auditory-ui/say","operationName":"say"}]