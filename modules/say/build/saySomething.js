#!/usr/bin/env node
"use strict";var __awaiter=this&&this.__awaiter||function(e,t,n,a){return new(n||(n=Promise))((function(r,o){function i(e){try{c(a.next(e))}catch(e){o(e)}}function s(e){try{c(a.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,s)}c((a=a.apply(e,t||[])).next())}))},__generator=this&&this.__generator||function(e,t){var n,a,r,o,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,a&&(r=2&o[0]?a.return:o[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,o[1])).done)return r;switch(a=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,a=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!(r=i.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){i.label=o[1];break}if(6===o[0]&&i.label<r[1]){i.label=r[1],r=o;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(o);break}r[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],a=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.sayLanguage=exports.sayNepali=exports.sayDutch=exports.test=exports.saySomething=void 0;var child_process_1=require("child_process"),make_test_1=require("make-test"),shorthands={filePath:"input-file",speechRate:"rate",voice:"voice",outputFilePath:"output-file",audioDevice:"audio-device",showProgress:"progress",interactive:"interactive",fileFormat:"file-format",dataFormat:"data-format",bitRate:"bit-rate",quality:"quality"},saySomething=function(e){return __awaiter(void 0,void 0,void 0,(function(){var t,n,a;return __generator(this,(function(r){return t="string"==typeof e?null:Object.keys(e),n="string"==typeof e?null:null==t?void 0:t.reduce((function(t,n){var a=e[n];return void 0===a?t:"message"===n?"".concat(t,' "').concat(a,'"'):"".concat(t," --").concat(shorthands[n],"=").concat(String(a))}),""),a="string"==typeof e?e:n,(0,child_process_1.execSync)("say ".concat(a),{stdio:"inherit"}),[2/*return*/]}))}))};exports.saySomething=saySomething,exports.test=(0,make_test_1.makeTest)((function(){
// say("test");
// TODO: how do we test this without actually saying something? probably we can test if the cli works by outputting the result to a temporary mp3 file
}),(function(){return!0}));var sayDutch=function(e){(0,child_process_1.spawnSync)('say "'.concat(e,'" --voice Xander'),{shell:!0})};exports.sayDutch=sayDutch;var sayNepali=function(e){(0,child_process_1.spawnSync)('say "'.concat(e,'" --voice Lekha'),{shell:!0})};exports.sayNepali=sayNepali;var sayLanguage=function(e,t){var n="np"===t?"Lekha":"nl"===t?"Xander":"Alex";(0,child_process_1.spawnSync)('say "'.concat(e,'" --voice ').concat(n),{shell:!0})};exports.sayLanguage=sayLanguage;
//# sourceMappingURL=saySomething.js.map