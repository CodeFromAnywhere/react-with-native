{
  "createdAt": 1666513261583,
  "updatedAt": 1666513261583,
  "deletedAt": 0,
  "createdFirstAt": 1666513261583,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/object-maps.ts",
  "commentsInside": [],
  "rawText": " async (\n  object: { [key: string]: any },\n  mapFn: (key: string) => string | Promise<string> | undefined\n) => {\n  const keyPairs = await Promise.all(\n    Object.keys(object).map(async (oldKey) => {\n      return { oldKey, newKey: await mapFn(oldKey) };\n    })\n  );\n\n  return mergeObjectsArray(\n    keyPairs\n      .map((pair) => {\n        return pair.newKey ? { [pair.newKey]: object[pair.oldKey] } : null;\n      })\n      .filter(notEmpty)\n  );\n}",
  "name": "mapKeys",
  "slug": "map-keys",
  "parameters": [],
  "description": "maps over all keys in an object and replaces them using a mapfn",
  "returnType": {
    "rawType": "unknown",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 4,
  "size": {
    "characters": 508,
    "lines": 18,
    "bytes": 508,
    "bytesPerCharacter": 1,
    "charactersPerLine": 28,
    "linesPerFile": 18,
    "numberOfFiles": 1
  },
  "id": "gxjgdiefmgbovlbpudlqeuvd"
}