{
  "createdAt": 1666513259329,
  "updatedAt": 1666513259329,
  "deletedAt": 0,
  "createdFirstAt": 1666513259329,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "name": "worker",
  "slug": "worker",
  "isExported": false,
  "operationRelativeTypescriptFilePath": "src/mapMany.ts",
  "commentsInside": [],
  "description": "",
  "parameters": [],
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "size": {
    "characters": 632,
    "lines": 23,
    "bytes": 632,
    "bytesPerCharacter": 1,
    "charactersPerLine": 27,
    "linesPerFile": 23,
    "numberOfFiles": 1
  },
  "rawText": "\n\nasync function worker(\n  id: number,\n  generator: ArrayGenerator,\n  mapFn: MapFn<any, any>,\n  result: any[]\n) {\n  //console.time(`Worker ${id}`);\n  for (let [currentValue, index, array] of generator) {\n    //console.time(`Worker ${id} --- index ${index} item ${currentValue}`);\n\n    const mappedResult = await mapItem(mapFn, currentValue, index, array);\n\n    // NB: if mappedResult gets rejected, change nothing!\n    if (mappedResult.status === \"fulfilled\") {\n      result[index] = mappedResult.value;\n    }\n\n    //console.timeEnd(`Worker ${id} --- index ${index} item ${currentValue}`);\n  }\n  //console.timeEnd(`Worker ${id}`);\n}",
  "maxIndentationDepth": 3,
  "id": "txipqbbfagdhporrivwdexor"
}