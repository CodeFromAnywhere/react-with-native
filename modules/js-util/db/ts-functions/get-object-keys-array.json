{
  "createdAt": 1666513254908,
  "updatedAt": 1666513254908,
  "deletedAt": 0,
  "createdFirstAt": 1666513254908,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getObjectKeysArray.ts",
  "commentsInside": [],
  "rawText": " <TObject extends { [key: string]: any }>(\n  object: TObject\n) => {\n  return Object.keys(object) as Extract<keyof TObject, string>[];\n}",
  "name": "getObjectKeysArray",
  "slug": "get-object-keys-array",
  "parameters": [],
  "description": "Handy function to get the keys of an object, but typed.\n\nNB: The only difference from Object.keys is that this returns the keys in a typesafe manner",
  "returnType": {
    "rawType": "Extract<keyof TObject, string>[]",
    "typeDefinition": {
      "optional": false,
      "type": "array",
      "items": {}
    },
    "typeCoverage": 0,
    "isArray": true,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "items": [
        {
          "schema": {
            "properties": [],
            "type": "object"
          },
          "name": null
        }
      ],
      "type": "array"
    }
  },
  "maxIndentationDepth": 1,
  "size": {
    "characters": 283,
    "lines": 7,
    "bytes": 283,
    "bytesPerCharacter": 1,
    "charactersPerLine": 40,
    "linesPerFile": 7,
    "numberOfFiles": 1
  },
  "id": "xorjtgsgvopidmjdgdrtozmg"
}