{
  "createdAt": 1666513266088,
  "updatedAt": 1666513266088,
  "deletedAt": 0,
  "createdFirstAt": 1666513266088,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/replaceLastOccurence.ts",
  "commentsInside": [],
  "rawText": " (\n  string: string,\n  searchValue: string,\n  replaceValue: string\n) => {\n  const [reversedString, reversedSearchValue, reversedReplaceValue] = [\n    string,\n    searchValue,\n    replaceValue,\n  ].map(reverseString);\n\n  const replacedReversedString = reversedString.replace(\n    reversedSearchValue,\n    reversedReplaceValue\n  );\n\n  const replacedString = reverseString(replacedReversedString);\n\n  return replacedString;\n}",
  "name": "replaceLastOccurence",
  "slug": "replace-last-occurence",
  "parameters": [
    {
      "name": "string",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "searchValue",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "replaceValue",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    }
  ],
  "description": "Replaces the last occerence of something in a string by something else\n\nExample:\n\n```ts\nconst result = replaceLastOccurence(\"theBestSlugSlugSlug\", \"Slug\", \"Slack\");\nconsole.log(result); // returns theBestSlugSlugSlack\n```\n\nNB: this is not the most efficient method, as it reverses the string by making it an array, twice. It can probably be done more efficiently by using `String.lastIndexOf`",
  "returnType": {
    "rawType": "String",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/String"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 814,
    "lines": 29,
    "bytes": 814,
    "bytesPerCharacter": 1,
    "charactersPerLine": 28,
    "linesPerFile": 29,
    "numberOfFiles": 1
  },
  "id": "xnenvyejrxaillrgardbzwni"
}