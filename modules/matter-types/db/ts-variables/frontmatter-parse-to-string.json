{
  "createdAt": 1666263624383,
  "updatedAt": 1666263624383,
  "deletedAt": 0,
  "createdFirstAt": 1666263624383,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "frontmatterParseToString",
  "slug": "frontmatter-parse-to-string",
  "operationRelativeTypescriptFilePath": "src/frontmatterParseToString.ts",
  "type": {
    "rawType": "(frontmatter: import(\"/Users/king/King/operations/tools/types/matter-types/src/Frontmatter\").Frontmatter) => string",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(frontmatter: Frontmatter): string => {\n  const keys = Object.keys(frontmatter);\n\n  const keyValueLines = keys\n    .map((key) => {\n      const value = frontmatter[key];\n      const valueString = getFrontmatterValueString(value);\n\n      if (valueString === null) {\n        return null;\n      }\n\n      const parsedFrontmatterLine = `${key}: ${valueString}`;\n\n      return parsedFrontmatterLine;\n    })\n    .filter(notEmpty);\n\n  return keyValueLines.length === 0\n    ? \"\"\n    : `---\\n${keyValueLines.join(\"\\n\")}\\n---\\n`;\n}",
  "description": "Parses frontmatter object into a frontmatter string\n- includes a newline at the end\n- string[] becomes a comma separated string\nTODO: maybe parse xxxAt values into human readable dates",
  "id": "jjphdmtwdghfytwpxafgaluz"
}