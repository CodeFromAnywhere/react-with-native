[{"id":"ZTNSlhURKaRZegNk","name":"TypeCoverage","slug":"type-coverage","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","rawText":"\n/**\n * quantification of coverage of the specified type or subtypes in our database.\n */\nexport type TypeCoverage = number;","extensions":[],"description":"quantification of coverage of the specified type or subtypes in our database.","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"number","description":"quantification of coverage of the specified type or subtypes in our database."},"simplifiedSchema":{"description":"quantification of coverage of the specified type or subtypes in our database.","type":"number"},"typeCoverage":0,"rawType":"TypeCoverage","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"nJZvIgUzROSBGfBR","name":"TypeInfo","slug":"type-info","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","rawText":"\n\n/**\n * all info that should always be collected when indexing any type interface\n */\nexport type TypeInfo = {\n  /** JSON schema definition of a type interface\n   *\n   *\n   * Some info about the Schema:\n   *\n   * - if the type is an object, there should be properties\n   * - if the type is an array, there should be items\n   */\n  typeDefinition: Schema | undefined;\n  simplifiedSchema?: SimplifiedSchema;\n  /** if the type is an object, this is true. false if it's an array */\n  isObject: boolean;\n  /** if the type is an array, this is true */\n  isArray: boolean;\n  /** if it's a primitive type like \"string\", \"number\", \"boolean\", \"null\" | \"undefined\" */\n  isPrimitive: boolean;\n  /** will be true for any primitive conjunction types */\n  isEnum: boolean;\n  /** will be true for string conjunction types */\n  isEnumLiteral: boolean;\n  typeCoverage: TypeCoverage;\n  /** raw type string */\n  rawType: string;\n};","extensions":[],"description":"all info that should always be collected when indexing any type interface","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"typeDefinition":{"$ref":"#/definitions/Schema","description":"JSON schema definition of a type interface\n\n\nSome info about the Schema:\n\n- if the type is an object, there should be properties\n- if the type is an array, there should be items"},"simplifiedSchema":{"$ref":"#/definitions/SimplifiedSchema"},"isObject":{"type":"boolean","description":"if the type is an object, this is true. false if it's an array"},"isArray":{"type":"boolean","description":"if the type is an array, this is true"},"isPrimitive":{"type":"boolean","description":"if it's a primitive type like \"string\", \"number\", \"boolean\", \"null\" | \"undefined\""},"isEnum":{"type":"boolean","description":"will be true for any primitive conjunction types"},"isEnumLiteral":{"type":"boolean","description":"will be true for string conjunction types"},"typeCoverage":{"$ref":"#/definitions/TypeCoverage"},"rawType":{"type":"string","description":"raw type string"}},"required":["isObject","isArray","isPrimitive","isEnum","isEnumLiteral","typeCoverage","rawType"],"additionalProperties":false,"description":"all info that should always be collected when indexing any type interface"},"simplifiedSchema":{"description":"all info that should always be collected when indexing any type interface","properties":[{"name":"typeDefinition","required":false,"schema":{"properties":[{"name":"$id","required":false,"schema":{"type":"string"}},{"name":"$ref","required":false,"schema":{"type":"string"}},{"name":"$schema","required":false,"schema":{"description":"Meta schema\n\nRecommended values:\n- 'http://json-schema.org/schema#'\n- 'http://json-schema.org/hyper-schema#'\n- 'http://json-schema.org/draft-07/schema#'\n- 'http://json-schema.org/draft-07/hyper-schema#'","type":"string"}},{"name":"$comment","required":false,"schema":{"type":"string"}},{"name":"$defs","required":false,"schema":{"properties":[],"type":"object"}},{"name":"type","required":false,"schema":{"properties":[],"type":"object"}},{"name":"enum","required":false,"schema":{"items":[{"schema":{"description":"Primitive type","properties":[],"type":"object"},"name":"JSONSchema7Type"}],"type":"array"}},{"name":"const","required":false,"schema":{"description":"Primitive type","properties":[],"type":"object"}},{"name":"multipleOf","required":false,"schema":{"type":"number"}},{"name":"maximum","required":false,"schema":{"type":"number"}},{"name":"exclusiveMaximum","required":false,"schema":{"type":"number"}},{"name":"minimum","required":false,"schema":{"type":"number"}},{"name":"exclusiveMinimum","required":false,"schema":{"type":"number"}},{"name":"maxLength","required":false,"schema":{"type":"number"}},{"name":"minLength","required":false,"schema":{"type":"number"}},{"name":"pattern","required":false,"schema":{"type":"string"}},{"name":"items","required":false,"schema":{"properties":[],"type":"object"}},{"name":"additionalItems","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"maxItems","required":false,"schema":{"type":"number"}},{"name":"minItems","required":false,"schema":{"type":"number"}},{"name":"uniqueItems","required":false,"schema":{"type":"boolean"}},{"name":"contains","required":false,"schema":{"circularRefName":"JSONSchema7","properties":[],"type":"object"}},{"name":"maxProperties","required":false,"schema":{"type":"number"}},{"name":"minProperties","required":false,"schema":{"type":"number"}},{"name":"required","required":false,"schema":{"items":[{"schema":{"type":"string"},"name":null}],"type":"array"}},{"name":"properties","required":false,"schema":{"properties":[],"type":"object"}},{"name":"patternProperties","required":false,"schema":{"properties":[],"type":"object"}},{"name":"additionalProperties","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"dependencies","required":false,"schema":{"properties":[],"type":"object"}},{"name":"propertyNames","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"if","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"then","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"else","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"allOf","required":false,"schema":{"items":[{"schema":{"description":"JSON Schema v7","properties":[],"type":"object"},"name":"JSONSchema7Definition"}],"type":"array"}},{"name":"anyOf","required":false,"schema":{"items":[{"schema":{"description":"JSON Schema v7","properties":[],"type":"object"},"name":"JSONSchema7Definition"}],"type":"array"}},{"name":"oneOf","required":false,"schema":{"items":[{"schema":{"description":"JSON Schema v7","properties":[],"type":"object"},"name":"JSONSchema7Definition"}],"type":"array"}},{"name":"not","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"format","required":false,"schema":{"type":"string"}},{"name":"contentMediaType","required":false,"schema":{"type":"string"}},{"name":"contentEncoding","required":false,"schema":{"type":"string"}},{"name":"definitions","required":false,"schema":{"properties":[],"type":"object"}},{"name":"title","required":false,"schema":{"type":"string"}},{"name":"description","required":false,"schema":{"type":"string"}},{"name":"default","required":false,"schema":{"description":"Primitive type","properties":[],"type":"object"}},{"name":"readOnly","required":false,"schema":{"type":"boolean"}},{"name":"writeOnly","required":false,"schema":{"type":"boolean"}},{"name":"examples","required":false,"schema":{"description":"Primitive type","properties":[],"type":"object"}}],"type":"object"}},{"name":"simplifiedSchema","required":false,"schema":{"description":"JSONSchema7 derivative that has the following capabilities and and characteristics...\n\n- does not include objects in objects that are also referenced to using xxxSlug or xxxId\n- recursively finds the references and expands them, unless the references are circular\n- easier to read\n- has all the information we need\n- is able to generate an object with values in the exact format the function needs it\n- is able to easily generate a form","properties":[{"name":"type","required":true,"schema":{"enum":["string","number","boolean","object","array","null"],"type":"string"}},{"name":"description","required":false,"schema":{"type":"string"}},{"name":"circularRefName","required":false,"schema":{"description":"sometimes we still need to reference to another schema because this thing is recursive. In that case the ref name will be here","type":"string"}},{"name":"enum","required":false,"schema":{"description":"in case of enums this could appear... mostly strings, but e.g. numbers can also be an enum I think","items":[{"schema":{"description":"Primitive type","properties":[],"type":"object"},"name":"JSONSchema7Type"}],"type":"array"}},{"name":"properties","required":false,"schema":{"description":"in case of object, this will always appear","items":[{"schema":{"properties":[{"name":"name","required":true,"schema":{"type":"string"}},{"name":"schema","required":true,"schema":{"circularRefName":"SimplifiedSchema","properties":[],"type":"object"}},{"name":"required","required":true,"schema":{"description":"NB: can't we put this in the SimplifiedSchema itself?","type":"boolean"}}],"type":"object"},"name":"SimplifiedSchemaProperty"}],"type":"array"}},{"name":"items","required":false,"schema":{"description":"in case of arrays, this will always appear","items":[{"schema":{"properties":[{"name":"name","required":true,"schema":{"description":"name in case of it being a reference, otherwise null","type":"string"}},{"name":"schema","required":true,"schema":{"circularRefName":"SimplifiedSchema","properties":[],"type":"object"}}],"type":"object"},"name":"SimplifiedSchemaItem"}],"type":"array"}}],"type":"object"}},{"name":"isObject","required":true,"schema":{"description":"if the type is an object, this is true. false if it's an array","type":"boolean"}},{"name":"isArray","required":true,"schema":{"description":"if the type is an array, this is true","type":"boolean"}},{"name":"isPrimitive","required":true,"schema":{"description":"if it's a primitive type like \"string\", \"number\", \"boolean\", \"null\" | \"undefined\"","type":"boolean"}},{"name":"isEnum","required":true,"schema":{"description":"will be true for any primitive conjunction types","type":"boolean"}},{"name":"isEnumLiteral","required":true,"schema":{"description":"will be true for string conjunction types","type":"boolean"}},{"name":"typeCoverage","required":true,"schema":{"description":"quantification of coverage of the specified type or subtypes in our database.","type":"number"}},{"name":"rawType","required":true,"schema":{"description":"raw type string","type":"string"}}],"type":"object"},"typeCoverage":0,"rawType":"TypeInfo","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"rVeezMIyuGUdAlqz","name":"Schema","slug":"schema","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"$ref":"#/definitions/JSONSchema7"},"simplifiedSchema":{"properties":[{"name":"$id","required":false,"schema":{"type":"string"}},{"name":"$ref","required":false,"schema":{"type":"string"}},{"name":"$schema","required":false,"schema":{"description":"Meta schema\n\nRecommended values:\n- 'http://json-schema.org/schema#'\n- 'http://json-schema.org/hyper-schema#'\n- 'http://json-schema.org/draft-07/schema#'\n- 'http://json-schema.org/draft-07/hyper-schema#'","type":"string"}},{"name":"$comment","required":false,"schema":{"type":"string"}},{"name":"$defs","required":false,"schema":{"properties":[],"type":"object"}},{"name":"type","required":false,"schema":{"properties":[],"type":"object"}},{"name":"enum","required":false,"schema":{"items":[{"schema":{"description":"Primitive type","properties":[],"type":"object"},"name":"JSONSchema7Type"}],"type":"array"}},{"name":"const","required":false,"schema":{"description":"Primitive type","properties":[],"type":"object"}},{"name":"multipleOf","required":false,"schema":{"type":"number"}},{"name":"maximum","required":false,"schema":{"type":"number"}},{"name":"exclusiveMaximum","required":false,"schema":{"type":"number"}},{"name":"minimum","required":false,"schema":{"type":"number"}},{"name":"exclusiveMinimum","required":false,"schema":{"type":"number"}},{"name":"maxLength","required":false,"schema":{"type":"number"}},{"name":"minLength","required":false,"schema":{"type":"number"}},{"name":"pattern","required":false,"schema":{"type":"string"}},{"name":"items","required":false,"schema":{"properties":[],"type":"object"}},{"name":"additionalItems","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"maxItems","required":false,"schema":{"type":"number"}},{"name":"minItems","required":false,"schema":{"type":"number"}},{"name":"uniqueItems","required":false,"schema":{"type":"boolean"}},{"name":"contains","required":false,"schema":{"circularRefName":"JSONSchema7","properties":[],"type":"object"}},{"name":"maxProperties","required":false,"schema":{"type":"number"}},{"name":"minProperties","required":false,"schema":{"type":"number"}},{"name":"required","required":false,"schema":{"items":[{"schema":{"type":"string"},"name":null}],"type":"array"}},{"name":"properties","required":false,"schema":{"properties":[],"type":"object"}},{"name":"patternProperties","required":false,"schema":{"properties":[],"type":"object"}},{"name":"additionalProperties","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"dependencies","required":false,"schema":{"properties":[],"type":"object"}},{"name":"propertyNames","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"if","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"then","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"else","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"allOf","required":false,"schema":{"items":[{"schema":{"description":"JSON Schema v7","properties":[],"type":"object"},"name":"JSONSchema7Definition"}],"type":"array"}},{"name":"anyOf","required":false,"schema":{"items":[{"schema":{"description":"JSON Schema v7","properties":[],"type":"object"},"name":"JSONSchema7Definition"}],"type":"array"}},{"name":"oneOf","required":false,"schema":{"items":[{"schema":{"description":"JSON Schema v7","properties":[],"type":"object"},"name":"JSONSchema7Definition"}],"type":"array"}},{"name":"not","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"format","required":false,"schema":{"type":"string"}},{"name":"contentMediaType","required":false,"schema":{"type":"string"}},{"name":"contentEncoding","required":false,"schema":{"type":"string"}},{"name":"definitions","required":false,"schema":{"properties":[],"type":"object"}},{"name":"title","required":false,"schema":{"type":"string"}},{"name":"description","required":false,"schema":{"type":"string"}},{"name":"default","required":false,"schema":{"description":"Primitive type","properties":[],"type":"object"}},{"name":"readOnly","required":false,"schema":{"type":"boolean"}},{"name":"writeOnly","required":false,"schema":{"type":"boolean"}},{"name":"examples","required":false,"schema":{"description":"Primitive type","properties":[],"type":"object"}}],"type":"object"},"typeCoverage":0,"rawType":"Schema","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"bgeoFBscGrIQndtg","name":"JSONSchema7","slug":"jsonschema-7","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"$id":{"type":"string"},"$ref":{"type":"string"},"$schema":{"$ref":"#/definitions/JSONSchema7Version"},"$comment":{"type":"string"},"$defs":{"type":"object","additionalProperties":{"$ref":"#/definitions/JSONSchema7Definition"}},"type":{"anyOf":[{"$ref":"#/definitions/JSONSchema7TypeName"},{"type":"array","items":{"$ref":"#/definitions/JSONSchema7TypeName"}}]},"enum":{"type":"array","items":{"$ref":"#/definitions/JSONSchema7Type"}},"const":{"$ref":"#/definitions/JSONSchema7Type"},"multipleOf":{"type":"number"},"maximum":{"type":"number"},"exclusiveMaximum":{"type":"number"},"minimum":{"type":"number"},"exclusiveMinimum":{"type":"number"},"maxLength":{"type":"number"},"minLength":{"type":"number"},"pattern":{"type":"string"},"items":{"anyOf":[{"$ref":"#/definitions/JSONSchema7Definition"},{"type":"array","items":{"$ref":"#/definitions/JSONSchema7Definition"}}]},"additionalItems":{"$ref":"#/definitions/JSONSchema7Definition"},"maxItems":{"type":"number"},"minItems":{"type":"number"},"uniqueItems":{"type":"boolean"},"contains":{"$ref":"#/definitions/JSONSchema7"},"maxProperties":{"type":"number"},"minProperties":{"type":"number"},"required":{"type":"array","items":{"type":"string"}},"properties":{"type":"object","additionalProperties":{"$ref":"#/definitions/JSONSchema7Definition"}},"patternProperties":{"type":"object","additionalProperties":{"$ref":"#/definitions/JSONSchema7Definition"}},"additionalProperties":{"$ref":"#/definitions/JSONSchema7Definition"},"dependencies":{"type":"object","additionalProperties":{"anyOf":[{"$ref":"#/definitions/JSONSchema7Definition"},{"type":"array","items":{"type":"string"}}]}},"propertyNames":{"$ref":"#/definitions/JSONSchema7Definition"},"if":{"$ref":"#/definitions/JSONSchema7Definition"},"then":{"$ref":"#/definitions/JSONSchema7Definition"},"else":{"$ref":"#/definitions/JSONSchema7Definition"},"allOf":{"type":"array","items":{"$ref":"#/definitions/JSONSchema7Definition"}},"anyOf":{"type":"array","items":{"$ref":"#/definitions/JSONSchema7Definition"}},"oneOf":{"type":"array","items":{"$ref":"#/definitions/JSONSchema7Definition"}},"not":{"$ref":"#/definitions/JSONSchema7Definition"},"format":{"type":"string"},"contentMediaType":{"type":"string"},"contentEncoding":{"type":"string"},"definitions":{"type":"object","additionalProperties":{"$ref":"#/definitions/JSONSchema7Definition"}},"title":{"type":"string"},"description":{"type":"string"},"default":{"$ref":"#/definitions/JSONSchema7Type"},"readOnly":{"type":"boolean"},"writeOnly":{"type":"boolean"},"examples":{"$ref":"#/definitions/JSONSchema7Type"}},"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"$id","required":false,"schema":{"type":"string"}},{"name":"$ref","required":false,"schema":{"type":"string"}},{"name":"$schema","required":false,"schema":{"description":"Meta schema\n\nRecommended values:\n- 'http://json-schema.org/schema#'\n- 'http://json-schema.org/hyper-schema#'\n- 'http://json-schema.org/draft-07/schema#'\n- 'http://json-schema.org/draft-07/hyper-schema#'","type":"string"}},{"name":"$comment","required":false,"schema":{"type":"string"}},{"name":"$defs","required":false,"schema":{"properties":[],"type":"object"}},{"name":"type","required":false,"schema":{"properties":[],"type":"object"}},{"name":"enum","required":false,"schema":{"items":[{"schema":{"description":"Primitive type","properties":[],"type":"object"},"name":"JSONSchema7Type"}],"type":"array"}},{"name":"const","required":false,"schema":{"description":"Primitive type","properties":[],"type":"object"}},{"name":"multipleOf","required":false,"schema":{"type":"number"}},{"name":"maximum","required":false,"schema":{"type":"number"}},{"name":"exclusiveMaximum","required":false,"schema":{"type":"number"}},{"name":"minimum","required":false,"schema":{"type":"number"}},{"name":"exclusiveMinimum","required":false,"schema":{"type":"number"}},{"name":"maxLength","required":false,"schema":{"type":"number"}},{"name":"minLength","required":false,"schema":{"type":"number"}},{"name":"pattern","required":false,"schema":{"type":"string"}},{"name":"items","required":false,"schema":{"properties":[],"type":"object"}},{"name":"additionalItems","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"maxItems","required":false,"schema":{"type":"number"}},{"name":"minItems","required":false,"schema":{"type":"number"}},{"name":"uniqueItems","required":false,"schema":{"type":"boolean"}},{"name":"contains","required":false,"schema":{"circularRefName":"JSONSchema7","properties":[],"type":"object"}},{"name":"maxProperties","required":false,"schema":{"type":"number"}},{"name":"minProperties","required":false,"schema":{"type":"number"}},{"name":"required","required":false,"schema":{"items":[{"schema":{"type":"string"},"name":null}],"type":"array"}},{"name":"properties","required":false,"schema":{"properties":[],"type":"object"}},{"name":"patternProperties","required":false,"schema":{"properties":[],"type":"object"}},{"name":"additionalProperties","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"dependencies","required":false,"schema":{"properties":[],"type":"object"}},{"name":"propertyNames","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"if","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"then","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"else","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"allOf","required":false,"schema":{"items":[{"schema":{"description":"JSON Schema v7","properties":[],"type":"object"},"name":"JSONSchema7Definition"}],"type":"array"}},{"name":"anyOf","required":false,"schema":{"items":[{"schema":{"description":"JSON Schema v7","properties":[],"type":"object"},"name":"JSONSchema7Definition"}],"type":"array"}},{"name":"oneOf","required":false,"schema":{"items":[{"schema":{"description":"JSON Schema v7","properties":[],"type":"object"},"name":"JSONSchema7Definition"}],"type":"array"}},{"name":"not","required":false,"schema":{"description":"JSON Schema v7","properties":[],"type":"object"}},{"name":"format","required":false,"schema":{"type":"string"}},{"name":"contentMediaType","required":false,"schema":{"type":"string"}},{"name":"contentEncoding","required":false,"schema":{"type":"string"}},{"name":"definitions","required":false,"schema":{"properties":[],"type":"object"}},{"name":"title","required":false,"schema":{"type":"string"}},{"name":"description","required":false,"schema":{"type":"string"}},{"name":"default","required":false,"schema":{"description":"Primitive type","properties":[],"type":"object"}},{"name":"readOnly","required":false,"schema":{"type":"boolean"}},{"name":"writeOnly","required":false,"schema":{"type":"boolean"}},{"name":"examples","required":false,"schema":{"description":"Primitive type","properties":[],"type":"object"}}],"type":"object"},"typeCoverage":0,"rawType":"JSONSchema7","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"dmsnApFHzjocRhBE","name":"JSONSchema7Version","slug":"jsonschema-7version","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"Meta schema\n\nRecommended values:\n- 'http://json-schema.org/schema#'\n- 'http://json-schema.org/hyper-schema#'\n- 'http://json-schema.org/draft-07/schema#'\n- 'http://json-schema.org/draft-07/hyper-schema#'","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"string","description":"Meta schema\n\nRecommended values:\n- 'http://json-schema.org/schema#'\n- 'http://json-schema.org/hyper-schema#'\n- 'http://json-schema.org/draft-07/schema#'\n- 'http://json-schema.org/draft-07/hyper-schema#'"},"simplifiedSchema":{"description":"Meta schema\n\nRecommended values:\n- 'http://json-schema.org/schema#'\n- 'http://json-schema.org/hyper-schema#'\n- 'http://json-schema.org/draft-07/schema#'\n- 'http://json-schema.org/draft-07/hyper-schema#'","type":"string"},"typeCoverage":0,"rawType":"JSONSchema7Version","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"tZNrqorfLGHNmyfc","name":"JSONSchema7Definition","slug":"jsonschema-7definition","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"JSON Schema v7","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"anyOf":[{"$ref":"#/definitions/JSONSchema7"},{"type":"boolean"}],"description":"JSON Schema v7"},"simplifiedSchema":{"description":"JSON Schema v7","properties":[],"type":"object"},"typeCoverage":0,"rawType":"JSONSchema7Definition","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"qFiMfswwOjPCTKYL","name":"JSONSchema7TypeName","slug":"jsonschema-7type-name","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"Primitive type","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"string","enum":["string","number","integer","boolean","object","array","null"],"description":"Primitive type"},"simplifiedSchema":{"description":"Primitive type","enum":["string","number","integer","boolean","object","array","null"],"type":"string"},"typeCoverage":0,"rawType":"JSONSchema7TypeName","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"RGxIWDbfwYcbsblR","name":"JSONSchema7Type","slug":"jsonschema-7type","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"Primitive type","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"anyOf":[{"type":"string"},{"type":"number"},{"type":"boolean"},{"$ref":"#/definitions/JSONSchema7Object"},{"$ref":"#/definitions/JSONSchema7Array"},{"type":"null"}],"description":"Primitive type"},"simplifiedSchema":{"description":"Primitive type","properties":[],"type":"object"},"typeCoverage":0,"rawType":"JSONSchema7Type","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"DXExeKHBhutnCnGn","name":"JSONSchema7Object","slug":"jsonschema-7object","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","additionalProperties":{"$ref":"#/definitions/JSONSchema7Type"}},"simplifiedSchema":{"properties":[],"type":"object"},"typeCoverage":0,"rawType":"JSONSchema7Object","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"MVDblCPnvrcZJWHZ","name":"JSONSchema7Array","slug":"jsonschema-7array","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"array","items":{"$ref":"#/definitions/JSONSchema7Type"}},"simplifiedSchema":{"items":[{"schema":{"description":"Primitive type","properties":[],"type":"object"},"name":"JSONSchema7Type"}],"type":"array"},"typeCoverage":0,"rawType":"JSONSchema7Array","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"IyiPKbPtNsUvMxLa","name":"SimplifiedSchema","slug":"simplified-schema","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"JSONSchema7 derivative that has the following capabilities and and characteristics...\n\n- does not include objects in objects that are also referenced to using xxxSlug or xxxId\n- recursively finds the references and expands them, unless the references are circular\n- easier to read\n- has all the information we need\n- is able to generate an object with values in the exact format the function needs it\n- is able to easily generate a form","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"type":{"$ref":"#/definitions/SimplifiedSchemaType","description":"- string\n- number\n- boolean\n- object\n- array\n- null\n\nNB: Omit doesn't work for the indexer! This would be the type: Omit<JSONSchema7TypeName, \"integer\">;"},"description":{"type":"string"},"circularRefName":{"type":"string","description":"sometimes we still need to reference to another schema because this thing is recursive. In that case the ref name will be here"},"enum":{"type":"array","items":{"$ref":"#/definitions/JSONSchema7Type"},"description":"in case of enums this could appear... mostly strings, but e.g. numbers can also be an enum I think"},"properties":{"type":"array","items":{"$ref":"#/definitions/SimplifiedSchemaProperty"},"description":"in case of object, this will always appear"},"items":{"type":"array","items":{"$ref":"#/definitions/SimplifiedSchemaItem"},"description":"in case of arrays, this will always appear"}},"required":["type"],"additionalProperties":false,"description":"JSONSchema7 derivative that has the following capabilities and and characteristics...\n\n- does not include objects in objects that are also referenced to using xxxSlug or xxxId\n- recursively finds the references and expands them, unless the references are circular\n- easier to read\n- has all the information we need\n- is able to generate an object with values in the exact format the function needs it\n- is able to easily generate a form"},"simplifiedSchema":{"description":"JSONSchema7 derivative that has the following capabilities and and characteristics...\n\n- does not include objects in objects that are also referenced to using xxxSlug or xxxId\n- recursively finds the references and expands them, unless the references are circular\n- easier to read\n- has all the information we need\n- is able to generate an object with values in the exact format the function needs it\n- is able to easily generate a form","properties":[{"name":"type","required":true,"schema":{"enum":["string","number","boolean","object","array","null"],"type":"string"}},{"name":"description","required":false,"schema":{"type":"string"}},{"name":"circularRefName","required":false,"schema":{"description":"sometimes we still need to reference to another schema because this thing is recursive. In that case the ref name will be here","type":"string"}},{"name":"enum","required":false,"schema":{"description":"in case of enums this could appear... mostly strings, but e.g. numbers can also be an enum I think","items":[{"schema":{"description":"Primitive type","properties":[],"type":"object"},"name":"JSONSchema7Type"}],"type":"array"}},{"name":"properties","required":false,"schema":{"description":"in case of object, this will always appear","items":[{"schema":{"properties":[{"name":"name","required":true,"schema":{"type":"string"}},{"name":"schema","required":true,"schema":{"circularRefName":"SimplifiedSchema","properties":[],"type":"object"}},{"name":"required","required":true,"schema":{"description":"NB: can't we put this in the SimplifiedSchema itself?","type":"boolean"}}],"type":"object"},"name":"SimplifiedSchemaProperty"}],"type":"array"}},{"name":"items","required":false,"schema":{"description":"in case of arrays, this will always appear","items":[{"schema":{"properties":[{"name":"name","required":true,"schema":{"description":"name in case of it being a reference, otherwise null","type":"string"}},{"name":"schema","required":true,"schema":{"circularRefName":"SimplifiedSchema","properties":[],"type":"object"}}],"type":"object"},"name":"SimplifiedSchemaItem"}],"type":"array"}}],"type":"object"},"typeCoverage":0,"rawType":"SimplifiedSchema","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"LTwiyZyxswKhBYCz","name":"SimplifiedSchemaType","slug":"simplified-schema-type","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"string","enum":["string","number","boolean","object","array","null"]},"simplifiedSchema":{"enum":["string","number","boolean","object","array","null"],"type":"string"},"typeCoverage":0,"rawType":"SimplifiedSchemaType","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"UcxfuNOwPSOzVIAs","name":"SimplifiedSchemaProperty","slug":"simplified-schema-property","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"name":{"type":"string"},"schema":{"$ref":"#/definitions/SimplifiedSchema"},"required":{"type":"boolean","description":"NB: can't we put this in the SimplifiedSchema itself?"}},"required":["name","schema","required"],"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"name","required":true,"schema":{"type":"string"}},{"name":"schema","required":true,"schema":{"description":"JSONSchema7 derivative that has the following capabilities and and characteristics...\n\n- does not include objects in objects that are also referenced to using xxxSlug or xxxId\n- recursively finds the references and expands them, unless the references are circular\n- easier to read\n- has all the information we need\n- is able to generate an object with values in the exact format the function needs it\n- is able to easily generate a form","properties":[{"name":"type","required":true,"schema":{"enum":["string","number","boolean","object","array","null"],"type":"string"}},{"name":"description","required":false,"schema":{"type":"string"}},{"name":"circularRefName","required":false,"schema":{"description":"sometimes we still need to reference to another schema because this thing is recursive. In that case the ref name will be here","type":"string"}},{"name":"enum","required":false,"schema":{"description":"in case of enums this could appear... mostly strings, but e.g. numbers can also be an enum I think","items":[{"schema":{"description":"Primitive type","properties":[],"type":"object"},"name":"JSONSchema7Type"}],"type":"array"}},{"name":"properties","required":false,"schema":{"description":"in case of object, this will always appear","items":[{"schema":{"circularRefName":"SimplifiedSchemaProperty","properties":[],"type":"object"},"name":"SimplifiedSchemaProperty"}],"type":"array"}},{"name":"items","required":false,"schema":{"description":"in case of arrays, this will always appear","items":[{"schema":{"properties":[{"name":"name","required":true,"schema":{"description":"name in case of it being a reference, otherwise null","type":"string"}},{"name":"schema","required":true,"schema":{"circularRefName":"SimplifiedSchema","properties":[],"type":"object"}}],"type":"object"},"name":"SimplifiedSchemaItem"}],"type":"array"}}],"type":"object"}},{"name":"required","required":true,"schema":{"description":"NB: can't we put this in the SimplifiedSchema itself?","type":"boolean"}}],"type":"object"},"typeCoverage":0,"rawType":"SimplifiedSchemaProperty","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"jlJrLGTxqEjCTfJz","name":"SimplifiedSchemaItem","slug":"simplified-schema-item","relativePathFromProjectRoot":"/tools/types/code-types/src/TypeInfo.ts","srcFileId":"/TypeInfo","operationFolderName":"code-types","relativeFilePathFromSrc":"/TypeInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"name":{"type":["string","null"],"description":"name in case of it being a reference, otherwise null"},"schema":{"$ref":"#/definitions/SimplifiedSchema"}},"required":["name","schema"],"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"name","required":true,"schema":{"description":"name in case of it being a reference, otherwise null","type":"string"}},{"name":"schema","required":true,"schema":{"description":"JSONSchema7 derivative that has the following capabilities and and characteristics...\n\n- does not include objects in objects that are also referenced to using xxxSlug or xxxId\n- recursively finds the references and expands them, unless the references are circular\n- easier to read\n- has all the information we need\n- is able to generate an object with values in the exact format the function needs it\n- is able to easily generate a form","properties":[{"name":"type","required":true,"schema":{"enum":["string","number","boolean","object","array","null"],"type":"string"}},{"name":"description","required":false,"schema":{"type":"string"}},{"name":"circularRefName","required":false,"schema":{"description":"sometimes we still need to reference to another schema because this thing is recursive. In that case the ref name will be here","type":"string"}},{"name":"enum","required":false,"schema":{"description":"in case of enums this could appear... mostly strings, but e.g. numbers can also be an enum I think","items":[{"schema":{"description":"Primitive type","properties":[],"type":"object"},"name":"JSONSchema7Type"}],"type":"array"}},{"name":"properties","required":false,"schema":{"description":"in case of object, this will always appear","items":[{"schema":{"properties":[{"name":"name","required":true,"schema":{"type":"string"}},{"name":"schema","required":true,"schema":{"circularRefName":"SimplifiedSchema","properties":[],"type":"object"}},{"name":"required","required":true,"schema":{"description":"NB: can't we put this in the SimplifiedSchema itself?","type":"boolean"}}],"type":"object"},"name":"SimplifiedSchemaProperty"}],"type":"array"}},{"name":"items","required":false,"schema":{"description":"in case of arrays, this will always appear","items":[{"schema":{"circularRefName":"SimplifiedSchemaItem","properties":[],"type":"object"},"name":"SimplifiedSchemaItem"}],"type":"array"}}],"type":"object"}}],"type":"object"},"typeCoverage":0,"rawType":"SimplifiedSchemaItem","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}}]