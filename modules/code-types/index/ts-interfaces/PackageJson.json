[{"id":"DRHgOaTuIEvmTTqT","name":"PackageInfoObject","slug":"package-info-object","relativePathFromProjectRoot":"/tools/types/code-types/src/PackageJson.ts","srcFileId":"/PackageJson","operationFolderName":"code-types","relativeFilePathFromSrc":"/PackageJson.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","rawText":"\n\nexport type PackageInfoObject = {\n  [key: string]: string;\n};","extensions":[],"description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","additionalProperties":{"type":"string"}},"simplifiedSchema":{"properties":[],"type":"object"},"typeCoverage":0,"rawType":"PackageInfoObject","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"pypHweFhVlrxsDvo","name":"ProjectType","slug":"project-type","relativePathFromProjectRoot":"/tools/types/code-types/src/PackageJson.ts","srcFileId":"/PackageJson","operationFolderName":"code-types","relativeFilePathFromSrc":"/PackageJson.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","rawText":"\n/** DEPRECATED: TODO: should use OperationClassification */\nexport type ProjectType =\n  | \"next\"\n  | \"react-native\"\n  | \"react\"\n  | \"express\"\n  | \"server\"\n  | \"unknown\";","extensions":[],"description":"DEPRECATED: TODO: should use OperationClassification","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"string","enum":["next","react-native","react","express","server","unknown"],"description":"DEPRECATED: TODO: should use OperationClassification"},"simplifiedSchema":{"description":"DEPRECATED: TODO: should use OperationClassification","enum":["next","react-native","react","express","server","unknown"],"type":"string"},"typeCoverage":0,"rawType":"ProjectType","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"AQLWYfoUfUEdgXEj","name":"SensibleConfig","slug":"sensible-config","relativePathFromProjectRoot":"/tools/types/code-types/src/PackageJson.ts","srcFileId":"/PackageJson","operationFolderName":"code-types","relativeFilePathFromSrc":"/PackageJson.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","rawText":"\n\n/**\n * Sensible-global configurations\n */\nexport type SensibleConfig = {\n  isSensibleProject: boolean;\n};","extensions":[],"description":"Sensible-global configurations","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"isSensibleProject":{"type":"boolean"}},"required":["isSensibleProject"],"additionalProperties":false,"description":"Sensible-global configurations"},"simplifiedSchema":{"description":"Sensible-global configurations","properties":[{"name":"isSensibleProject","required":true,"schema":{"type":"boolean"}}],"type":"object"},"typeCoverage":0,"rawType":"SensibleConfig","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"IZsFnHiZbZSYOMlM","name":"PackageJSON","slug":"package-json","relativePathFromProjectRoot":"/tools/types/code-types/src/PackageJson.ts","srcFileId":"/PackageJson","operationFolderName":"code-types","relativeFilePathFromSrc":"/PackageJson.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","rawText":"\n\n/**\n * ---\n * defaultDbStorageMethod: jsonSingle\n * ---\n */\nexport type PackageJSON = {\n  id?: string;\n  // Default keys\n  path: string;\n  name?: string;\n  main?: string;\n  source?: string;\n  description?: string;\n  version?: string;\n  private?: boolean;\n  author?: string | { [key: string]: string };\n  repository: string | { [key: string]: string };\n  homepage?: string;\n  dependencies?: PackageInfoObject;\n  devDependencies?: PackageInfoObject;\n  peerDependencies?: PackageInfoObject;\n  bin?: { [key: string]: string };\n  workspaces?: string[];\n  // My own keys\n  type?: OperationClassification;\n  sensible?: SensibleConfig;\n  operation?: OperationConfig;\n};","extensions":[],"description":"","defaultDbStorageMethod":"jsonSingle","isDbModel":true,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"id":{"type":"string"},"path":{"type":"string"},"name":{"type":"string"},"main":{"type":"string"},"source":{"type":"string"},"description":{"type":"string"},"version":{"type":"string"},"private":{"type":"boolean"},"author":{"anyOf":[{"type":"string"},{"type":"object","additionalProperties":{"type":"string"}}]},"repository":{"anyOf":[{"type":"string"},{"type":"object","additionalProperties":{"type":"string"}}]},"homepage":{"type":"string"},"dependencies":{"$ref":"#/definitions/PackageInfoObject"},"devDependencies":{"$ref":"#/definitions/PackageInfoObject"},"peerDependencies":{"$ref":"#/definitions/PackageInfoObject"},"bin":{"type":"object","additionalProperties":{"type":"string"}},"workspaces":{"type":"array","items":{"type":"string"}},"type":{"$ref":"#/definitions/OperationClassification"},"sensible":{"$ref":"#/definitions/SensibleConfig"},"operation":{"$ref":"#/definitions/OperationConfig"}},"required":["path","repository"],"additionalProperties":false,"description":"--- defaultDbStorageMethod: jsonSingle\n---"},"simplifiedSchema":{"description":"--- defaultDbStorageMethod: jsonSingle\n---","properties":[{"name":"id","required":false,"schema":{"type":"string"}},{"name":"path","required":true,"schema":{"type":"string"}},{"name":"name","required":false,"schema":{"type":"string"}},{"name":"main","required":false,"schema":{"type":"string"}},{"name":"source","required":false,"schema":{"type":"string"}},{"name":"description","required":false,"schema":{"type":"string"}},{"name":"version","required":false,"schema":{"type":"string"}},{"name":"private","required":false,"schema":{"type":"boolean"}},{"name":"author","required":false,"schema":{"properties":[],"type":"object"}},{"name":"repository","required":true,"schema":{"properties":[],"type":"object"}},{"name":"homepage","required":false,"schema":{"type":"string"}},{"name":"dependencies","required":false,"schema":{"properties":[],"type":"object"}},{"name":"devDependencies","required":false,"schema":{"properties":[],"type":"object"}},{"name":"peerDependencies","required":false,"schema":{"properties":[],"type":"object"}},{"name":"bin","required":false,"schema":{"properties":[],"type":"object"}},{"name":"workspaces","required":false,"schema":{"items":[{"schema":{"type":"string"},"name":null}],"type":"array"}},{"name":"type","required":false,"schema":{"description":"# Classification\n\nTODO: think about what the differences are and how we need to change processes to make it all work good\n\n### Possible values\n\njs: only js (no node) (well, ts of course)\n\nnode: includes other node packages, operations, core-imports, or globals.\n\nserver: exposes something on some port when it is ran and uses node code\n\nweb: uses react and exposes something on some port when it is ran\n\napp: uses react-native and exposes something on some port when it is ran\n\nui-es6: uses react (with (native)), which main entry points to typescript es6 files (this ui package cannot be built, should be transpiled)\n\nui-es5: ui which main entry points to javascript es5 files (this ui package can be built)","enum":["js","node","server","web","app","ui-es6","ui-es5"],"type":"string"}},{"name":"sensible","required":false,"schema":{"description":"Sensible-global configurations","properties":[{"name":"isSensibleProject","required":true,"schema":{"type":"boolean"}}],"type":"object"}},{"name":"operation","required":false,"schema":{"description":"anything configurable about the operation.\n\nThis can live in operation.json or as a prop in package.json.","properties":[{"name":"indirectDependencies","required":false,"schema":{"description":"Sometimes you are using function in a UI, which cannot be inferred with imports because they are used indirectly via an api. Here you can specify which operations on the backend are needed for an operation (ui mostly)\n\nThis array is simply a list of operation names needed for this operation that are not imported.\n\nNB: no need to specify things here that you also import in this operation, because these are already automatically detected.","items":[{"schema":{"type":"string"},"name":null}],"type":"array"}}],"type":"object"}}],"type":"object"},"typeCoverage":0,"rawType":"PackageJSON","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"YKTUPSnTYaLLGGAq","name":"OperationClassification","slug":"operation-classification","relativePathFromProjectRoot":"/tools/types/code-types/src/PackageJson.ts","srcFileId":"/PackageJson","operationFolderName":"code-types","relativeFilePathFromSrc":"/PackageJson.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"# Classification\n\nTODO: think about what the differences are and how we need to change processes to make it all work good\n\n### Possible values\n\njs: only js (no node) (well, ts of course)\n\nnode: includes other node packages, operations, core-imports, or globals.\n\nserver: exposes something on some port when it is ran and uses node code\n\nweb: uses react and exposes something on some port when it is ran\n\napp: uses react-native and exposes something on some port when it is ran\n\nui-es6: uses react (with (native)), which main entry points to typescript es6 files (this ui package cannot be built, should be transpiled)\n\nui-es5: ui which main entry points to javascript es5 files (this ui package can be built)","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"string","enum":["js","node","server","web","app","ui-es6","ui-es5"],"description":"# Classification\n\nTODO: think about what the differences are and how we need to change processes to make it all work good\n\n### Possible values\n\njs: only js (no node) (well, ts of course)\n\nnode: includes other node packages, operations, core-imports, or globals.\n\nserver: exposes something on some port when it is ran and uses node code\n\nweb: uses react and exposes something on some port when it is ran\n\napp: uses react-native and exposes something on some port when it is ran\n\nui-es6: uses react (with (native)), which main entry points to typescript es6 files (this ui package cannot be built, should be transpiled)\n\nui-es5: ui which main entry points to javascript es5 files (this ui package can be built)"},"simplifiedSchema":{"description":"# Classification\n\nTODO: think about what the differences are and how we need to change processes to make it all work good\n\n### Possible values\n\njs: only js (no node) (well, ts of course)\n\nnode: includes other node packages, operations, core-imports, or globals.\n\nserver: exposes something on some port when it is ran and uses node code\n\nweb: uses react and exposes something on some port when it is ran\n\napp: uses react-native and exposes something on some port when it is ran\n\nui-es6: uses react (with (native)), which main entry points to typescript es6 files (this ui package cannot be built, should be transpiled)\n\nui-es5: ui which main entry points to javascript es5 files (this ui package can be built)","enum":["js","node","server","web","app","ui-es6","ui-es5"],"type":"string"},"typeCoverage":0,"rawType":"OperationClassification","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"PxDcKEgfLqVMWDOU","name":"OperationConfig","slug":"operation-config","relativePathFromProjectRoot":"/tools/types/code-types/src/PackageJson.ts","srcFileId":"/PackageJson","operationFolderName":"code-types","relativeFilePathFromSrc":"/PackageJson.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"anything configurable about the operation.\n\nThis can live in operation.json or as a prop in package.json.","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"indirectDependencies":{"type":"array","items":{"type":"string"},"description":"Sometimes you are using function in a UI, which cannot be inferred with imports because they are used indirectly via an api. Here you can specify which operations on the backend are needed for an operation (ui mostly)\n\nThis array is simply a list of operation names needed for this operation that are not imported.\n\nNB: no need to specify things here that you also import in this operation, because these are already automatically detected."}},"additionalProperties":false,"description":"anything configurable about the operation.\n\nThis can live in operation.json or as a prop in package.json."},"simplifiedSchema":{"description":"anything configurable about the operation.\n\nThis can live in operation.json or as a prop in package.json.","properties":[{"name":"indirectDependencies","required":false,"schema":{"description":"Sometimes you are using function in a UI, which cannot be inferred with imports because they are used indirectly via an api. Here you can specify which operations on the backend are needed for an operation (ui mostly)\n\nThis array is simply a list of operation names needed for this operation that are not imported.\n\nNB: no need to specify things here that you also import in this operation, because these are already automatically detected.","items":[{"schema":{"type":"string"},"name":null}],"type":"array"}}],"type":"object"},"typeCoverage":0,"rawType":"OperationConfig","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}}]