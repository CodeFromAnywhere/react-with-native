[{"id":"KNWwJWTCrYZvtcIj","name":"IndexId","slug":"index-id","relativePathFromProjectRoot":"/tools/types/code-types/src/IndexId.ts","srcFileId":"/IndexId","operationFolderName":"code-types","relativeFilePathFromSrc":"/IndexId.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","rawText":"\n\n/**\n * identifier of any index type interface\n *\n * TODO: should rename to OperationIndexModelType\n */\nexport type IndexId = {\n  /**\n   * unique id of the model\n   */\n  id: string;\n  /**\n   * name (identifier) of the model\n   */\n  name: string;\n  /**\n   * kebab-case variant of the name\n   */\n  slug: string;\n} & OperationPathParse;","extensions":[],"description":"identifier of any index type interface\n\nTODO: should rename to OperationIndexModelType","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","additionalProperties":false,"properties":{"relativeOperationBasePathFromProjectRoot":{"type":"string","description":"relative file path from the project-root to the operation (DOES include operation folder)\n\ne.g. /tools/cognition/typescript/index-typescript"},"relativeFilePathFromSrc":{"type":"string","description":"relative file path from the operation src\n\ne.g. general.ts"},"srcFileId":{"type":"string","description":"file id (same as relativeFilePathFromSrc but without extension)\n\ne.g. \"general\""},"operationName":{"type":"string","description":"operation package.json name"},"operationFolderName":{"type":"string","description":"operation folder name (by convention, must be identical to operationName, but it could have some mistakes)"},"relativePathFromProjectRoot":{"type":"string","description":"relative file or folder path from the project root"},"id":{"type":"string","description":"unique id of the model"},"name":{"type":"string","description":"name (identifier) of the model"},"slug":{"type":"string","description":"kebab-case variant of the name"}},"required":["id","name","operationFolderName","relativeFilePathFromSrc","relativeOperationBasePathFromProjectRoot","relativePathFromProjectRoot","slug","srcFileId"],"description":"identifier of any index type interface\n\nTODO: should rename to OperationIndexModelType"},"simplifiedSchema":{"description":"identifier of any index type interface\n\nTODO: should rename to OperationIndexModelType","properties":[{"name":"relativeOperationBasePathFromProjectRoot","required":true,"schema":{"description":"relative file path from the project-root to the operation (DOES include operation folder)\n\ne.g. /tools/cognition/typescript/index-typescript","type":"string"}},{"name":"relativeFilePathFromSrc","required":true,"schema":{"description":"relative file path from the operation src\n\ne.g. general.ts","type":"string"}},{"name":"srcFileId","required":true,"schema":{"description":"file id (same as relativeFilePathFromSrc but without extension)\n\ne.g. \"general\"","type":"string"}},{"name":"operationName","required":false,"schema":{"description":"operation package.json name","type":"string"}},{"name":"operationFolderName","required":true,"schema":{"description":"operation folder name (by convention, must be identical to operationName, but it could have some mistakes)","type":"string"}},{"name":"relativePathFromProjectRoot","required":true,"schema":{"description":"relative file or folder path from the project root","type":"string"}},{"name":"id","required":true,"schema":{"description":"unique id of the model","type":"string"}},{"name":"name","required":true,"schema":{"description":"name (identifier) of the model","type":"string"}},{"name":"slug","required":true,"schema":{"description":"kebab-case variant of the name","type":"string"}}],"type":"object"},"typeCoverage":0,"rawType":"IndexId","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"JJATeXtCoROBaOMW","name":"OperationPathParse","slug":"operation-path-parse","relativePathFromProjectRoot":"/tools/types/code-types/src/IndexId.ts","srcFileId":"/IndexId","operationFolderName":"code-types","relativeFilePathFromSrc":"/IndexId.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","additionalProperties":false,"properties":{"relativeOperationBasePathFromProjectRoot":{"type":"string","description":"relative file path from the project-root to the operation (DOES include operation folder)\n\ne.g. /tools/cognition/typescript/index-typescript"},"relativeFilePathFromSrc":{"type":"string","description":"relative file path from the operation src\n\ne.g. general.ts"},"srcFileId":{"type":"string","description":"file id (same as relativeFilePathFromSrc but without extension)\n\ne.g. \"general\""},"operationName":{"type":"string","description":"operation package.json name"},"operationFolderName":{"type":"string","description":"operation folder name (by convention, must be identical to operationName, but it could have some mistakes)"},"relativePathFromProjectRoot":{"type":"string","description":"relative file or folder path from the project root"}},"required":["operationFolderName","relativeFilePathFromSrc","relativeOperationBasePathFromProjectRoot","relativePathFromProjectRoot","srcFileId"]},"simplifiedSchema":{"properties":[{"name":"relativeOperationBasePathFromProjectRoot","required":true,"schema":{"description":"relative file path from the project-root to the operation (DOES include operation folder)\n\ne.g. /tools/cognition/typescript/index-typescript","type":"string"}},{"name":"relativeFilePathFromSrc","required":true,"schema":{"description":"relative file path from the operation src\n\ne.g. general.ts","type":"string"}},{"name":"srcFileId","required":true,"schema":{"description":"file id (same as relativeFilePathFromSrc but without extension)\n\ne.g. \"general\"","type":"string"}},{"name":"operationName","required":false,"schema":{"description":"operation package.json name","type":"string"}},{"name":"operationFolderName","required":true,"schema":{"description":"operation folder name (by convention, must be identical to operationName, but it could have some mistakes)","type":"string"}},{"name":"relativePathFromProjectRoot","required":true,"schema":{"description":"relative file or folder path from the project root","type":"string"}}],"type":"object"},"typeCoverage":0,"rawType":"OperationPathParse","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"bXuvrpfrXhkhFflb","name":"PathParse","slug":"path-parse","relativePathFromProjectRoot":"/tools/types/code-types/src/IndexId.ts","srcFileId":"/IndexId","operationFolderName":"code-types","relativeFilePathFromSrc":"/IndexId.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","description":"object to represent a folder or file path in different ways\n\nNB: doesn't include the absolute path so the indexes can be exported easily witout creating incorrect paths","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"relativePathFromProjectRoot":{"type":"string","description":"relative file or folder path from the project root"}},"required":["relativePathFromProjectRoot"],"additionalProperties":false,"description":"object to represent a folder or file path in different ways\n\nNB: doesn't include the absolute path so the indexes can be exported easily witout creating incorrect paths"},"simplifiedSchema":{"description":"object to represent a folder or file path in different ways\n\nNB: doesn't include the absolute path so the indexes can be exported easily witout creating incorrect paths","properties":[{"name":"relativePathFromProjectRoot","required":true,"schema":{"description":"relative file or folder path from the project root","type":"string"}}],"type":"object"},"typeCoverage":0,"rawType":"PathParse","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"lFbeQCtfdvvQhopv","name":"DbStorageMethod","slug":"db-storage-method","relativePathFromProjectRoot":"/tools/types/code-types/src/IndexId.ts","srcFileId":"/IndexId","operationFolderName":"code-types","relativeFilePathFromSrc":"/IndexId.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","rawText":"\n\nexport type DbStorageMethod = typeof dbStorageMethodsConst[number];","extensions":[],"description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"string","enum":["jsonMultiple","jsonSingle","markdown","keyValueMarkdown","csv"]},"simplifiedSchema":{"enum":["jsonMultiple","jsonSingle","markdown","keyValueMarkdown","csv"],"type":"string"},"typeCoverage":0,"rawType":"DbStorageMethod","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}}]