[{"id":"XCJmoELBNMKtNhCJ","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/types/code-types/src/PathMetaData.ts","srcFileId":"/PathMetaData","operationFolderName":"code-types","relativeFilePathFromSrc":"/PathMetaData.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","comment":"All interesting metadata about any path (files and folders)","rawStatement":"export type PathMetaData = {\n  /**\n   * a comment about this file or folder. Can be parsed from:\n   * - an associated markdown file and/or the top of the file (If they're both there, they're concatenated)\n   * - for folders, looks for README.md\n   */\n  mainComment?: TsComment;\n  /**\n   * filename including extension, if the path is not a folder\n   */\n  fullFileName?: string;\n  isFolder: boolean;\n  /**\n   * unix time this file was last updated (or for folders: unix time of last modifiation of any file in this folder, recursively)\n   *\n   * TODO: renames also count as updates, I guess. Needs to be clear!\n   */\n  updatedAt: number;\n  /**\n   * unix time this file was created (or for folders: unix time of creation of the first file in this folder)\n   *\n   * TODO: figure out if we can get the creation date of the folder itself?\n   */\n  createdAt: number;\n  /**\n   * categorized sizes for the file(s)\n   */\n  sizes: FolderSummary;\n} & PathParse;","parameters":{},"types":[],"firstLine":4,"lastLine":6},{"id":"XCJmoELBNMKtNhCJ","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/types/code-types/src/PathMetaData.ts","srcFileId":"/PathMetaData","operationFolderName":"code-types","relativeFilePathFromSrc":"/PathMetaData.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","comment":"object to represent a folder or file path in different ways\n\nNB: doesn't include the absolute path so the indexes can be exported easily witout creating incorrect paths","rawStatement":"export type PathParse = {\n  /**\n   * relative file or folder path from the project root\n   */\n  relativePathFromProjectRoot: string;\n};","parameters":{},"types":["nb"],"firstLine":37,"lastLine":41}]