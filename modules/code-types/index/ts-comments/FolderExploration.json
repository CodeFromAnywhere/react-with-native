[{"id":"uwoJNcGmxwEiPOAe","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/types/code-types/src/FolderExploration.ts","srcFileId":"/FolderExploration","operationFolderName":"code-types","relativeFilePathFromSrc":"/FolderExploration.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","comment":"suggested type for menu is FolderExploration[]\n\nNB: recursive!","rawStatement":"export type FolderExploration = {\n  type:\n    | \"folder\"\n    | \"operation\"\n    | \"operationFolder\"\n    | \"markdown\"\n    | \"typescript\"\n    | \"function\"\n    | \"interface\"\n    | \"variable\";\n  name: string;\n  /** path to the folder, operation, operationFolder, or file. functions, interfaces or variables direct to the file they are defined in */\n  relativeProjectPath: string;\n  /**\n   * Every FolderExploration has children, which are simply the files/folders that can be found in there. The children of files are functions, interfaces and variables for typescript files. Markdownfiles don't get any children (although we could childify the outline of the file, maybe, later...)\n   */\n  children?: FolderExploration[];\n};","parameters":{},"types":["nb"],"firstLine":6,"lastLine":10}]