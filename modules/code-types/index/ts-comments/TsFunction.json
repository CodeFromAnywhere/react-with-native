[{"id":"ZtFWnjgIEeTNjRDy","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/types/code-types/src/TsFunction.ts","srcFileId":"/TsFunction","operationFolderName":"code-types","relativeFilePathFromSrc":"/TsFunction.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/code-types","operationName":"code-types","comment":"Interface for arrow functions and normal functions","rawStatement":"export interface TsFunction extends IndexId {\n  /**\n   * parsed comment from doc-comment\n   */\n  description?: Markdown;\n\n  /**\n   * raw text of the function\n   */\n  rawText?: string;\n\n  /**\n   * all comments found in a function and the node that they belong to\n   */\n  commentsInside: TsComment[];\n\n  /**\n   * return type JSON Schema definition\n   */\n  returnType: TypeInfo;\n\n  /**\n   * parameters the function takes as its arguments, if any\n   */\n  parameters?: FunctionParameter[];\n\n  /**\n   * size of this function (comments + code)\n   */\n  size: SizeSummary;\n  /**\n   * size of the comments of this function (including surrounding comments)\n   */\n  commentSize?: SizeSummary;\n  /**\n   * size of the code inside the function (without comments)\n   */\n  codeSize?: SizeSummary;\n\n  /**\n   * tells you the size of itself and all its dependencies that are used that are also part of an operation, recursively\n   */\n  cumulativeSize?: SizeSummary;\n  cumulativeCommentSize?: SizeSummary;\n  cumulativeCodeSize?: SizeSummary;\n\n  // Code quality indexes\n\n  /**\n   * maximum amount of times indedented in this function\n   *\n   * good for determining the complexity and finding code that can be simplified/destructured into smaller pieces\n   */\n  maxIndentationDepth: number;\n\n  /**\n   * finds all files that import this function\n   *\n   * NB: this is not indexed because this information has nothing to do with the operation itself, but the exposure to the broader monorepo. This is calculated on the fly.\n   */\n  dependantFiles?: string[];\n}","parameters":{},"types":[],"firstLine":16,"lastLine":19}]