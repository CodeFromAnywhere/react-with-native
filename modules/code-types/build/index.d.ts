import { dbStorageMethodsConst } from "./IndexId";
import { dbStorageMethods } from "./IndexId";
import { markdownTextParameterNames } from "./ParameterName";
import { passwordTextParameterNames } from "./ParameterName";
import { referenceParameterNames } from "./ParameterName";
import { referencePluralParameterNames } from "./ParameterName";
import { generatedParameterNames } from "./ParameterName";
import { isGeneratedParameterName } from "./ParameterName";
import { commentTypesConst } from "./TsComment";
import { commentTypes } from "./TsComment";
import { indexDbModels } from "./TypescriptIndex";
import { indexDbModelFolders } from "./TypescriptIndex";
import type { FolderExploration } from "./FolderExploration";
import type { ExplorationDetails } from "./FolderExploration";
import type { SizeSummary } from "./FolderSummary";
import type { FolderSummary } from "./FolderSummary";
import type { IndexId } from "./IndexId";
import type { DbStorageMethod } from "./IndexId";
import type { ImageMarkdownJson } from "./MarkdownParse";
import type { MarkdownContentLevel } from "./MarkdownParse";
import type { MarkdownParagraph } from "./MarkdownParse";
import type { MarkdownChunk } from "./MarkdownParse";
import type { MarkdownFileParse } from "./MarkdownParse";
import type { MarkdownParse } from "./MarkdownParse";
import type { MarkdownHeader } from "./MarkdownParse";
import type { ModelInfo } from "./Menu";
import type { OperationConfig } from "./OperationConfig";
import type { OperationIndex } from "./OperationIndex";
import type { OperationClassification } from "./OperationIndex";
import type { GeneralOperationIndex } from "./OperationIndex";
import type { CategorizedFilePaths } from "./OperationIndex";
import type { PackageInfoObject } from "./PackageJson";
import type { ProjectType } from "./PackageJson";
import type { SensibleConfig } from "./PackageJson";
import type { PackageJSON } from "./PackageJson";
import type { ParameterName } from "./ParameterName";
import type { PatternMatcher } from "./ParameterName";
import type { PathMetaData } from "./PathMetaData";
import type { PathParse } from "./PathMetaData";
import type { OperationPathParse } from "./PathMetaData";
import type { SimplifiedSchemaType } from "./SimplifiedSchema";
import type { SimplifiedSchema } from "./SimplifiedSchema";
import type { SimplifiedSchemaProperty } from "./SimplifiedSchema";
import type { SimplifiedSchemaItem } from "./SimplifiedSchema";
import type { TSConfig } from "./TSConfig";
import type { TextJson } from "./TextJson";
import type { CommentType } from "./TsComment";
import type { TsComment } from "./TsComment";
import type { FunctionParameter } from "./TsFunction";
import type { TsFunction } from "./TsFunction";
import type { TsInterface } from "./TsInterface";
import type { MaybeInteface } from "./TsInterface";
import type { TypeCoverage } from "./TypeInfo";
import type { TypeInfo } from "./TypeInfo";
import type { TypescriptIndex } from "./TypescriptIndex";
import type { IndexModels } from "./TypescriptIndex";
import type { TsBuildError } from "./TypescriptIndex";
import type { TsLintWarning } from "./TypescriptIndex";
import type { TsExport } from "./TypescriptIndex";
import type { ImportClassification } from "./TypescriptIndex";
import type { TsImport } from "./TypescriptIndex";
import type { TsVariable } from "./TypescriptIndex";
export declare type CodeTypesTypes = {
    FolderExploration: FolderExploration;
    ExplorationDetails: ExplorationDetails;
    SizeSummary: SizeSummary;
    FolderSummary: FolderSummary;
    IndexId: IndexId;
    DbStorageMethod: DbStorageMethod;
    ImageMarkdownJson: ImageMarkdownJson;
    MarkdownContentLevel: MarkdownContentLevel;
    MarkdownParagraph: MarkdownParagraph;
    MarkdownChunk: MarkdownChunk;
    MarkdownFileParse: MarkdownFileParse;
    MarkdownParse: MarkdownParse;
    MarkdownHeader: MarkdownHeader;
    ModelInfo: ModelInfo;
    OperationConfig: OperationConfig;
    OperationIndex: OperationIndex;
    OperationClassification: OperationClassification;
    GeneralOperationIndex: GeneralOperationIndex;
    CategorizedFilePaths: CategorizedFilePaths;
    PackageInfoObject: PackageInfoObject;
    ProjectType: ProjectType;
    SensibleConfig: SensibleConfig;
    PackageJSON: PackageJSON;
    ParameterName: ParameterName;
    PatternMatcher: PatternMatcher;
    PathMetaData: PathMetaData;
    PathParse: PathParse;
    OperationPathParse: OperationPathParse;
    SimplifiedSchemaType: SimplifiedSchemaType;
    SimplifiedSchema: SimplifiedSchema;
    SimplifiedSchemaProperty: SimplifiedSchemaProperty;
    SimplifiedSchemaItem: SimplifiedSchemaItem;
    TSConfig: TSConfig;
    TextJson: TextJson;
    CommentType: CommentType;
    TsComment: TsComment;
    FunctionParameter: FunctionParameter;
    TsFunction: TsFunction;
    TsInterface: TsInterface;
    MaybeInteface: MaybeInteface;
    TypeCoverage: TypeCoverage;
    TypeInfo: TypeInfo;
    TypescriptIndex: TypescriptIndex;
    IndexModels: IndexModels;
    TsBuildError: TsBuildError;
    TsLintWarning: TsLintWarning;
    TsExport: TsExport;
    ImportClassification: ImportClassification;
    TsImport: TsImport;
    TsVariable: TsVariable;
};
export { dbStorageMethodsConst, dbStorageMethods, markdownTextParameterNames, passwordTextParameterNames, referenceParameterNames, referencePluralParameterNames, generatedParameterNames, isGeneratedParameterName, commentTypesConst, commentTypes, indexDbModels, indexDbModelFolders };
export { FolderExploration, ExplorationDetails, SizeSummary, FolderSummary, IndexId, DbStorageMethod, ImageMarkdownJson, MarkdownContentLevel, MarkdownParagraph, MarkdownChunk, MarkdownFileParse, MarkdownParse, MarkdownHeader, ModelInfo, OperationConfig, OperationIndex, OperationClassification, GeneralOperationIndex, CategorizedFilePaths, PackageInfoObject, ProjectType, SensibleConfig, PackageJSON, ParameterName, PatternMatcher, PathMetaData, PathParse, OperationPathParse, SimplifiedSchemaType, SimplifiedSchema, SimplifiedSchemaProperty, SimplifiedSchemaItem, TSConfig, TextJson, CommentType, TsComment, FunctionParameter, TsFunction, TsInterface, MaybeInteface, TypeCoverage, TypeInfo, TypescriptIndex, IndexModels, TsBuildError, TsLintWarning, TsExport, ImportClassification, TsImport, TsVariable };
//# sourceMappingURL=index.d.ts.map