{
  "createdAt": 1670064042619,
  "updatedAt": 1670064042619,
  "deletedAt": 0,
  "createdFirstAt": 1670064042619,
  "id": "typescriptscopecontent",
  "name": "TypescriptScopeContent",
  "slug": "typescriptscopecontent",
  "operationRelativeTypescriptFilePath": "src/ts/TypescriptFile.ts",
  "hasGeneric": false,
  "isExported": true,
  "rawText": "\n\nexport interface TypescriptScopeContent {\n  statements: {\n    name: string;\n    /**\n     * can not be done in functions\n     */\n    isExported: boolean;\n    comment?: string;\n    isFunction?: boolean;\n    variableJsonValue?: any;\n    functionDefinition?: TypescriptScopeContext & {\n      /**\n       * Inside of the function (recursion on itself)\n       */\n      content: TypescriptScopeContent;\n    };\n  }[];\n\n  interfaces: {\n    name: string;\n    isExported: boolean;\n    comment?: string;\n    simplifiedSchema: SimplifiedSchema;\n  }[];\n\n  /**\n   * Only in functions\n   */\n  returnStatementRaw?: string;\n}",
  "extensions": [],
  "isOperationIndex": false,
  "description": "",
  "isDbModel": false,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "object",
      "properties": {
        "statements": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "isExported": {
                "type": "boolean",
                "description": "can not be done in functions"
              },
              "comment": {
                "type": "string"
              },
              "isFunction": {
                "type": "boolean"
              },
              "variableJsonValue": {},
              "functionDefinition": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "content": {
                    "$ref": "#/definitions/TypescriptScopeContent",
                    "description": "Inside of the function (recursion on itself)"
                  },
                  "statementContext": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/TypescriptScopeStatementContext"
                    },
                    "description": "Parameters"
                  },
                  "typeContext": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/TypescriptScopeTypeContext"
                    },
                    "description": "Generics"
                  }
                },
                "required": [
                  "content"
                ]
              }
            },
            "required": [
              "name",
              "isExported"
            ],
            "additionalProperties": false
          }
        },
        "interfaces": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "isExported": {
                "type": "boolean"
              },
              "comment": {
                "type": "string"
              },
              "simplifiedSchema": {
                "$ref": "#/definitions/SimplifiedSchema"
              }
            },
            "required": [
              "name",
              "isExported",
              "simplifiedSchema"
            ],
            "additionalProperties": false
          }
        },
        "returnStatementRaw": {
          "type": "string",
          "description": "Only in functions"
        }
      },
      "required": [
        "statements",
        "interfaces"
      ],
      "additionalProperties": false
    },
    "simplifiedSchema": {
      "properties": [
        {
          "name": "statements",
          "required": true,
          "schema": {
            "items": [
              {
                "schema": {
                  "properties": [
                    {
                      "name": "name",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "isExported",
                      "required": true,
                      "schema": {
                        "fullComment": "can not be done in functions",
                        "type": "boolean"
                      }
                    },
                    {
                      "name": "comment",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "isFunction",
                      "required": false,
                      "schema": {
                        "type": "boolean"
                      }
                    },
                    {
                      "name": "variableJsonValue",
                      "required": false,
                      "schema": {
                        "properties": [],
                        "type": "object"
                      }
                    },
                    {
                      "name": "functionDefinition",
                      "required": false,
                      "schema": {
                        "properties": [
                          {
                            "name": "content",
                            "required": true,
                            "schema": {
                              "circularRefName": "TypescriptScopeContent",
                              "fullComment": "Inside of the function (recursion on itself)",
                              "properties": [],
                              "type": "object"
                            }
                          },
                          {
                            "name": "statementContext",
                            "required": false,
                            "schema": {
                              "fullComment": "Parameters",
                              "items": [
                                {
                                  "schema": {
                                    "fullComment": "",
                                    "properties": [
                                      {
                                        "name": "name",
                                        "required": true,
                                        "schema": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "name": "isRequired",
                                        "required": false,
                                        "schema": {
                                          "fullComment": "Only for functions",
                                          "type": "boolean"
                                        }
                                      },
                                      {
                                        "name": "simplifiedSchema",
                                        "required": true,
                                        "schema": {
                                          "fullComment": "JSONSchema7 derivative that has the following capabilities and and characteristics...\n\n- does not include objects in objects that are also referenced to using xxxSlug or xxxId\n- recursively finds the references and expands them, unless the references are circular\n- easier to read\n- has all the information we need\n- is able to generate an object with values in the exact format the function needs it\n- is able to easily generate a form",
                                          "properties": [
                                            {
                                              "name": "todo",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "discussion",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "idea",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "later",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "nb",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "title",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "section",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "description",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "type",
                                              "required": true,
                                              "schema": {
                                                "enum": [
                                                  "string",
                                                  "number",
                                                  "boolean",
                                                  "object",
                                                  "array",
                                                  "null"
                                                ],
                                                "fullComment": "- string\n- number\n- boolean\n- object\n- array\n- null\n\nNB: Omit doesn't work for the indexer! This would be the type: Omit<JSONSchema7TypeName, \"integer\">;\n\n",
                                                "nb": "Omit doesn't work for the indexer! This would be the type: Omit<JSONSchema7TypeName, \"integer\">;",
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "circularRefName",
                                              "required": false,
                                              "schema": {
                                                "fullComment": "sometimes we still need to reference to another schema because this thing is recursive. In that case the ref name will be here",
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "enum",
                                              "required": false,
                                              "schema": {
                                                "fullComment": "in case of enums this could appear... mostly strings, but e.g. numbers can also be an enum I think",
                                                "items": [
                                                  {
                                                    "schema": {
                                                      "fullComment": "Primitive type",
                                                      "properties": [],
                                                      "type": "object"
                                                    },
                                                    "name": "JSONSchema7Type"
                                                  }
                                                ],
                                                "type": "array"
                                              }
                                            },
                                            {
                                              "name": "properties",
                                              "required": false,
                                              "schema": {
                                                "fullComment": "in case of object, this will always appear",
                                                "items": [
                                                  {
                                                    "schema": {
                                                      "fullComment": "",
                                                      "properties": [
                                                        {
                                                          "name": "name",
                                                          "required": true,
                                                          "schema": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        {
                                                          "name": "schema",
                                                          "required": true,
                                                          "schema": {
                                                            "circularRefName": "SimplifiedSchema",
                                                            "properties": [],
                                                            "type": "object"
                                                          }
                                                        },
                                                        {
                                                          "name": "required",
                                                          "required": true,
                                                          "schema": {
                                                            "fullComment": "NB: can't we put this in the SimplifiedSchema itself?",
                                                            "nb": "can't we put this in the SimplifiedSchema itself?",
                                                            "type": "boolean"
                                                          }
                                                        }
                                                      ],
                                                      "type": "object"
                                                    },
                                                    "name": "SimplifiedSchemaProperty"
                                                  }
                                                ],
                                                "type": "array"
                                              }
                                            },
                                            {
                                              "name": "items",
                                              "required": false,
                                              "schema": {
                                                "fullComment": "in case of arrays, this will always appear",
                                                "items": [
                                                  {
                                                    "schema": {
                                                      "fullComment": "",
                                                      "properties": [
                                                        {
                                                          "name": "name",
                                                          "required": true,
                                                          "schema": {
                                                            "fullComment": "name in case of it being a reference, otherwise null",
                                                            "type": "string"
                                                          }
                                                        },
                                                        {
                                                          "name": "schema",
                                                          "required": true,
                                                          "schema": {
                                                            "circularRefName": "SimplifiedSchema",
                                                            "properties": [],
                                                            "type": "object"
                                                          }
                                                        }
                                                      ],
                                                      "type": "object"
                                                    },
                                                    "name": "SimplifiedSchemaItem"
                                                  }
                                                ],
                                                "type": "array"
                                              }
                                            },
                                            {
                                              "name": "fullComment",
                                              "required": false,
                                              "schema": {
                                                "fullComment": "Full doccomment, parsed without all stars syntax.\n\nNB: besides this, every `CommentType` can optionally also be found as a property on the `SimplifiedSchema`",
                                                "nb": "besides this, every `CommentType` can optionally also be found as a property on the `SimplifiedSchema`",
                                                "type": "string"
                                              }
                                            }
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      {
                                        "name": "comment",
                                        "required": true,
                                        "schema": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "name": "isRest",
                                        "required": false,
                                        "schema": {
                                          "type": "boolean"
                                        }
                                      }
                                    ],
                                    "type": "object"
                                  },
                                  "name": "TypescriptScopeStatementContext"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          {
                            "name": "typeContext",
                            "required": false,
                            "schema": {
                              "fullComment": "Generics",
                              "items": [
                                {
                                  "schema": {
                                    "fullComment": "",
                                    "properties": [
                                      {
                                        "name": "name",
                                        "required": true,
                                        "schema": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "name": "comment",
                                        "required": false,
                                        "schema": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "name": "simplifiedSchema",
                                        "required": true,
                                        "schema": {
                                          "fullComment": "JSONSchema7 derivative that has the following capabilities and and characteristics...\n\n- does not include objects in objects that are also referenced to using xxxSlug or xxxId\n- recursively finds the references and expands them, unless the references are circular\n- easier to read\n- has all the information we need\n- is able to generate an object with values in the exact format the function needs it\n- is able to easily generate a form",
                                          "properties": [
                                            {
                                              "name": "todo",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "discussion",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "idea",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "later",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "nb",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "title",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "section",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "description",
                                              "required": false,
                                              "schema": {
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "type",
                                              "required": true,
                                              "schema": {
                                                "enum": [
                                                  "string",
                                                  "number",
                                                  "boolean",
                                                  "object",
                                                  "array",
                                                  "null"
                                                ],
                                                "fullComment": "- string\n- number\n- boolean\n- object\n- array\n- null\n\nNB: Omit doesn't work for the indexer! This would be the type: Omit<JSONSchema7TypeName, \"integer\">;\n\n",
                                                "nb": "Omit doesn't work for the indexer! This would be the type: Omit<JSONSchema7TypeName, \"integer\">;",
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "circularRefName",
                                              "required": false,
                                              "schema": {
                                                "fullComment": "sometimes we still need to reference to another schema because this thing is recursive. In that case the ref name will be here",
                                                "type": "string"
                                              }
                                            },
                                            {
                                              "name": "enum",
                                              "required": false,
                                              "schema": {
                                                "fullComment": "in case of enums this could appear... mostly strings, but e.g. numbers can also be an enum I think",
                                                "items": [
                                                  {
                                                    "schema": {
                                                      "fullComment": "Primitive type",
                                                      "properties": [],
                                                      "type": "object"
                                                    },
                                                    "name": "JSONSchema7Type"
                                                  }
                                                ],
                                                "type": "array"
                                              }
                                            },
                                            {
                                              "name": "properties",
                                              "required": false,
                                              "schema": {
                                                "fullComment": "in case of object, this will always appear",
                                                "items": [
                                                  {
                                                    "schema": {
                                                      "fullComment": "",
                                                      "properties": [
                                                        {
                                                          "name": "name",
                                                          "required": true,
                                                          "schema": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        {
                                                          "name": "schema",
                                                          "required": true,
                                                          "schema": {
                                                            "circularRefName": "SimplifiedSchema",
                                                            "properties": [],
                                                            "type": "object"
                                                          }
                                                        },
                                                        {
                                                          "name": "required",
                                                          "required": true,
                                                          "schema": {
                                                            "fullComment": "NB: can't we put this in the SimplifiedSchema itself?",
                                                            "nb": "can't we put this in the SimplifiedSchema itself?",
                                                            "type": "boolean"
                                                          }
                                                        }
                                                      ],
                                                      "type": "object"
                                                    },
                                                    "name": "SimplifiedSchemaProperty"
                                                  }
                                                ],
                                                "type": "array"
                                              }
                                            },
                                            {
                                              "name": "items",
                                              "required": false,
                                              "schema": {
                                                "fullComment": "in case of arrays, this will always appear",
                                                "items": [
                                                  {
                                                    "schema": {
                                                      "fullComment": "",
                                                      "properties": [
                                                        {
                                                          "name": "name",
                                                          "required": true,
                                                          "schema": {
                                                            "fullComment": "name in case of it being a reference, otherwise null",
                                                            "type": "string"
                                                          }
                                                        },
                                                        {
                                                          "name": "schema",
                                                          "required": true,
                                                          "schema": {
                                                            "circularRefName": "SimplifiedSchema",
                                                            "properties": [],
                                                            "type": "object"
                                                          }
                                                        }
                                                      ],
                                                      "type": "object"
                                                    },
                                                    "name": "SimplifiedSchemaItem"
                                                  }
                                                ],
                                                "type": "array"
                                              }
                                            },
                                            {
                                              "name": "fullComment",
                                              "required": false,
                                              "schema": {
                                                "fullComment": "Full doccomment, parsed without all stars syntax.\n\nNB: besides this, every `CommentType` can optionally also be found as a property on the `SimplifiedSchema`",
                                                "nb": "besides this, every `CommentType` can optionally also be found as a property on the `SimplifiedSchema`",
                                                "type": "string"
                                              }
                                            }
                                          ],
                                          "type": "object"
                                        }
                                      }
                                    ],
                                    "type": "object"
                                  },
                                  "name": "TypescriptScopeTypeContext"
                                }
                              ],
                              "type": "array"
                            }
                          }
                        ],
                        "type": "object"
                      }
                    }
                  ],
                  "type": "object"
                },
                "name": null
              }
            ],
            "type": "array"
          }
        },
        {
          "name": "interfaces",
          "required": true,
          "schema": {
            "items": [
              {
                "schema": {
                  "properties": [
                    {
                      "name": "name",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "isExported",
                      "required": true,
                      "schema": {
                        "type": "boolean"
                      }
                    },
                    {
                      "name": "comment",
                      "required": false,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "simplifiedSchema",
                      "required": true,
                      "schema": {
                        "fullComment": "JSONSchema7 derivative that has the following capabilities and and characteristics...\n\n- does not include objects in objects that are also referenced to using xxxSlug or xxxId\n- recursively finds the references and expands them, unless the references are circular\n- easier to read\n- has all the information we need\n- is able to generate an object with values in the exact format the function needs it\n- is able to easily generate a form",
                        "properties": [
                          {
                            "name": "todo",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "discussion",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "idea",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "later",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "nb",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "title",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "section",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "description",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          },
                          {
                            "name": "type",
                            "required": true,
                            "schema": {
                              "enum": [
                                "string",
                                "number",
                                "boolean",
                                "object",
                                "array",
                                "null"
                              ],
                              "fullComment": "- string\n- number\n- boolean\n- object\n- array\n- null\n\nNB: Omit doesn't work for the indexer! This would be the type: Omit<JSONSchema7TypeName, \"integer\">;\n\n",
                              "nb": "Omit doesn't work for the indexer! This would be the type: Omit<JSONSchema7TypeName, \"integer\">;",
                              "type": "string"
                            }
                          },
                          {
                            "name": "circularRefName",
                            "required": false,
                            "schema": {
                              "fullComment": "sometimes we still need to reference to another schema because this thing is recursive. In that case the ref name will be here",
                              "type": "string"
                            }
                          },
                          {
                            "name": "enum",
                            "required": false,
                            "schema": {
                              "fullComment": "in case of enums this could appear... mostly strings, but e.g. numbers can also be an enum I think",
                              "items": [
                                {
                                  "schema": {
                                    "fullComment": "Primitive type",
                                    "properties": [],
                                    "type": "object"
                                  },
                                  "name": "JSONSchema7Type"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          {
                            "name": "properties",
                            "required": false,
                            "schema": {
                              "fullComment": "in case of object, this will always appear",
                              "items": [
                                {
                                  "schema": {
                                    "fullComment": "",
                                    "properties": [
                                      {
                                        "name": "name",
                                        "required": true,
                                        "schema": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "name": "schema",
                                        "required": true,
                                        "schema": {
                                          "circularRefName": "SimplifiedSchema",
                                          "properties": [],
                                          "type": "object"
                                        }
                                      },
                                      {
                                        "name": "required",
                                        "required": true,
                                        "schema": {
                                          "fullComment": "NB: can't we put this in the SimplifiedSchema itself?",
                                          "nb": "can't we put this in the SimplifiedSchema itself?",
                                          "type": "boolean"
                                        }
                                      }
                                    ],
                                    "type": "object"
                                  },
                                  "name": "SimplifiedSchemaProperty"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          {
                            "name": "items",
                            "required": false,
                            "schema": {
                              "fullComment": "in case of arrays, this will always appear",
                              "items": [
                                {
                                  "schema": {
                                    "fullComment": "",
                                    "properties": [
                                      {
                                        "name": "name",
                                        "required": true,
                                        "schema": {
                                          "fullComment": "name in case of it being a reference, otherwise null",
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "name": "schema",
                                        "required": true,
                                        "schema": {
                                          "circularRefName": "SimplifiedSchema",
                                          "properties": [],
                                          "type": "object"
                                        }
                                      }
                                    ],
                                    "type": "object"
                                  },
                                  "name": "SimplifiedSchemaItem"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          {
                            "name": "fullComment",
                            "required": false,
                            "schema": {
                              "fullComment": "Full doccomment, parsed without all stars syntax.\n\nNB: besides this, every `CommentType` can optionally also be found as a property on the `SimplifiedSchema`",
                              "nb": "besides this, every `CommentType` can optionally also be found as a property on the `SimplifiedSchema`",
                              "type": "string"
                            }
                          }
                        ],
                        "type": "object"
                      }
                    }
                  ],
                  "type": "object"
                },
                "name": null
              }
            ],
            "type": "array"
          }
        },
        {
          "name": "returnStatementRaw",
          "required": false,
          "schema": {
            "fullComment": "Only in functions",
            "type": "string"
          }
        }
      ],
      "type": "object"
    },
    "typeCoverage": 0,
    "rawType": "TypescriptScopeContent",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}