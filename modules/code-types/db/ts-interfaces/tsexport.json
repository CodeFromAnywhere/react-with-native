{
  "createdAt": 1667684679068,
  "updatedAt": 1667684679068,
  "deletedAt": 0,
  "createdFirstAt": 1667684679068,
  "id": "tsexport",
  "name": "TsExport",
  "slug": "tsexport",
  "operationRelativeTypescriptFilePath": "src/TsExport.ts",
  "hasGeneric": false,
  "isExported": true,
  "rawText": "\n\n/**\n */\nexport interface TsExport extends TsIndexModelType {\n  /**\n   * surrounding comments and comments inside of the import\n   */\n  comments: Creation<TsComment>[];\n\n  type: \"value\" | \"type\" | undefined;\n  /**\n   * used for duplicate export names\n   */\n  alias?: string;\n  /**\n   * only for type exports. tells you whether or not the type has one or more generic parameter(s)\n   */\n  hasGeneric?: boolean;\n}",
  "extensions": [
    "TsIndexModelType"
  ],
  "isOperationIndex": true,
  "description": "",
  "dbStorageMethod": "jsonMultiple",
  "isDbModel": true,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "object",
      "properties": {
        "operationName": {
          "type": [
            "null",
            "string"
          ],
          "description": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you"
        },
        "projectRelativePath": {
          "type": "string",
          "description": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you"
        },
        "operationRelativePath": {
          "type": "string",
          "description": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you"
        },
        "id": {
          "type": "string",
          "description": "unique id of the model"
        },
        "name": {
          "type": "string",
          "description": "name (identifier) of the model"
        },
        "slug": {
          "type": "string",
          "description": "kebab-case variant of the name"
        },
        "operationRelativeTypescriptFilePath": {
          "type": "string",
          "description": "relative file path from the operation that this indexed instance is referencing to\n\ne.g. src/general.ts\n\n(no preceding slash)"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Creation%3CTsComment%3E"
          },
          "description": "surrounding comments and comments inside of the import"
        },
        "type": {
          "type": "string",
          "enum": [
            "value",
            "type"
          ]
        },
        "alias": {
          "type": "string",
          "description": "used for duplicate export names"
        },
        "hasGeneric": {
          "type": "boolean",
          "description": "only for type exports. tells you whether or not the type has one or more generic parameter(s)"
        }
      },
      "required": [
        "comments",
        "id",
        "name",
        "operationName",
        "operationRelativeTypescriptFilePath",
        "projectRelativePath",
        "slug"
      ],
      "additionalProperties": false
    },
    "simplifiedSchema": {
      "properties": [
        {
          "name": "operationName",
          "required": true,
          "schema": {
            "fullComment": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you",
            "type": "null"
          }
        },
        {
          "name": "projectRelativePath",
          "required": true,
          "schema": {
            "fullComment": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you",
            "type": "string"
          }
        },
        {
          "name": "operationRelativePath",
          "required": false,
          "schema": {
            "fullComment": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you",
            "type": "string"
          }
        },
        {
          "name": "id",
          "required": true,
          "schema": {
            "fullComment": "unique id of the model",
            "type": "string"
          }
        },
        {
          "name": "name",
          "required": true,
          "schema": {
            "fullComment": "name (identifier) of the model",
            "type": "string"
          }
        },
        {
          "name": "slug",
          "required": true,
          "schema": {
            "fullComment": "kebab-case variant of the name",
            "type": "string"
          }
        },
        {
          "name": "operationRelativeTypescriptFilePath",
          "required": true,
          "schema": {
            "fullComment": "relative file path from the operation that this indexed instance is referencing to\n\ne.g. src/general.ts\n\n(no preceding slash)",
            "type": "string"
          }
        },
        {
          "name": "comments",
          "required": true,
          "schema": {
            "fullComment": "surrounding comments and comments inside of the import",
            "items": [],
            "type": "array"
          }
        },
        {
          "name": "type",
          "required": false,
          "schema": {
            "enum": [
              "value",
              "type"
            ],
            "type": "string"
          }
        },
        {
          "name": "alias",
          "required": false,
          "schema": {
            "fullComment": "used for duplicate export names",
            "type": "string"
          }
        },
        {
          "name": "hasGeneric",
          "required": false,
          "schema": {
            "fullComment": "only for type exports. tells you whether or not the type has one or more generic parameter(s)",
            "type": "boolean"
          }
        }
      ],
      "type": "object"
    },
    "typeCoverage": 0,
    "rawType": "TsExport",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}