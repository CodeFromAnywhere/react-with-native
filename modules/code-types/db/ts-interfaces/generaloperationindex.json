{
  "createdAt": 1667684668125,
  "updatedAt": 1667684668125,
  "deletedAt": 0,
  "createdFirstAt": 1667684668125,
  "id": "generaloperationindex",
  "name": "GeneralOperationIndex",
  "slug": "generaloperationindex",
  "operationRelativeTypescriptFilePath": "src/OperationIndex.ts",
  "hasGeneric": false,
  "isExported": true,
  "rawText": "\n\nexport type GeneralOperationIndex = {\n  updatedAt: number;\n  name: string;\n  slug: string;\n  /**\n   * name of the package in package.json\n   */\n  packageName: string;\n  /**\n   * name of the operation folder\n   */\n  folderName: string;\n  /**\n   * relative path to the operation (does not include operation folder itself)\n   *\n   * relative from project root\n   */\n  relativeOperationLocationPath: string;\n\n  classification: OperationClassification;\n\n  /**\n   * package dependency names (non-operation)\n   */\n  packageDependencies: string[];\n  /**\n   * operation dependency names\n   */\n  operationDependencies: string[];\n  /**\n   * core dependencies (e.g. `path` and `fs`)\n   */\n  coreDependencies: string[];\n};",
  "extensions": [],
  "isOperationIndex": false,
  "description": "",
  "isDbModel": false,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "object",
      "properties": {
        "updatedAt": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "packageName": {
          "type": "string",
          "description": "name of the package in package.json"
        },
        "folderName": {
          "type": "string",
          "description": "name of the operation folder"
        },
        "relativeOperationLocationPath": {
          "type": "string",
          "description": "relative path to the operation (does not include operation folder itself)\n\nrelative from project root"
        },
        "classification": {
          "$ref": "#/definitions/OperationClassification"
        },
        "packageDependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "package dependency names (non-operation)"
        },
        "operationDependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "operation dependency names"
        },
        "coreDependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "core dependencies (e.g. `path` and `fs`)"
        }
      },
      "required": [
        "updatedAt",
        "name",
        "slug",
        "packageName",
        "folderName",
        "relativeOperationLocationPath",
        "classification",
        "packageDependencies",
        "operationDependencies",
        "coreDependencies"
      ],
      "additionalProperties": false
    },
    "simplifiedSchema": {
      "properties": [
        {
          "name": "updatedAt",
          "required": true,
          "schema": {
            "type": "number"
          }
        },
        {
          "name": "name",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "slug",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "packageName",
          "required": true,
          "schema": {
            "fullComment": "name of the package in package.json",
            "type": "string"
          }
        },
        {
          "name": "folderName",
          "required": true,
          "schema": {
            "fullComment": "name of the operation folder",
            "type": "string"
          }
        },
        {
          "name": "relativeOperationLocationPath",
          "required": true,
          "schema": {
            "fullComment": "relative path to the operation (does not include operation folder itself)\n\nrelative from project root",
            "type": "string"
          }
        },
        {
          "name": "classification",
          "required": true,
          "schema": {
            "enum": [
              "js",
              "ts",
              "node",
              "server",
              "web",
              "app",
              "ui-es6",
              "ui-es5",
              "ui-esm"
            ],
            "fullComment": "# Classification\n\nTODO: think about what the differences are and how we need to change processes to make it all work good\n\n## Possible values\n\njs: only js (no node) (well, ts of course, but it gets built into js)\n\nts: non-built ts code\n\nnode: includes other node packages, operations, core-imports, or globals.\n\nserver: exposes something on some port when it is ran and uses node code\n\nweb: has next.config.js and thus exposes something on some port when it is ran. next.js + react-based...\n\napp: uses react-native and exposes something on some port when it is ran\n\nDEPRECATED: ui-es6: uses react (with (native)), which main entry points to typescript es6 files (this ui package cannot be built, should be transpiled. highly discouraged, please use ui-es5, or, if needed, ui-esm)\n\nui-es5: ui which main entry points to javascript es5 files (this ui package can be built)\n\nui-esm: ui which builds to ESM module resolved Javascript",
            "todo": "think about what the differences are and how we need to change processes to make it all work good",
            "type": "string"
          }
        },
        {
          "name": "packageDependencies",
          "required": true,
          "schema": {
            "fullComment": "package dependency names (non-operation)",
            "items": [
              {
                "schema": {
                  "type": "string"
                },
                "name": null
              }
            ],
            "type": "array"
          }
        },
        {
          "name": "operationDependencies",
          "required": true,
          "schema": {
            "fullComment": "operation dependency names",
            "items": [
              {
                "schema": {
                  "type": "string"
                },
                "name": null
              }
            ],
            "type": "array"
          }
        },
        {
          "name": "coreDependencies",
          "required": true,
          "schema": {
            "fullComment": "core dependencies (e.g. `path` and `fs`)",
            "items": [
              {
                "schema": {
                  "type": "string"
                },
                "name": null
              }
            ],
            "type": "array"
          }
        }
      ],
      "type": "object"
    },
    "typeCoverage": 0,
    "rawType": "GeneralOperationIndex",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}