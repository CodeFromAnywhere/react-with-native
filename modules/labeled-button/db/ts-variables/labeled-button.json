{
  "createdAt": 1666261826075,
  "updatedAt": 1666261826075,
  "deletedAt": 0,
  "createdFirstAt": 1666261826075,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "LabeledButton",
  "slug": "labeled-button",
  "operationRelativeTypescriptFilePath": "src/LabeledButton.tsx",
  "type": {
    "rawType": "(button: import(\"/Users/king/King/operations/tools/interfaces/vui/vui-elements/labeled-button/src/LabeledButton\").LabeledButtonType, index: number) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(button: LabeledButtonType, index: number) => {\n  const size = button.size === \"small\" ? 12 : 24;\n  const heightClass = button.size === \"small\" ? \"h-4\" : \"h-7\";\n  const textSizeClass = button.size === \"small\" ? \"text-xs\" : \"text-xl\";\n  return (\n    <Button\n      key={`labeledbutton${index}`}\n      className={`flex flex-col items-center`}\n      onClick={button.onClick}\n    >\n      <Div\n        className={`w-10 ${\n          button.isActive ? \"bg-blue-900 dark:bg-blue-600 rounded-full\" : \"\"\n        }`}\n      >\n        {button.icon ? (\n          <Svg src={button.icon} width={size} height={size} />\n        ) : button.emoji ? (\n          <P className={`${textSizeClass} hover:scale-110`}>{button.emoji}</P>\n        ) : button.component ? (\n          <Div className={heightClass}>{button.component()}</Div>\n        ) : null}\n      </Div>\n      {button.size === \"small\" ? null : (\n        <P className=\"text-xs\">{button.title}</P>\n      )}\n    </Button>\n  );\n}",
  "description": "",
  "id": "aussfwnhmrtuwismrgfvfkbf"
}