[{"id":"yWuYSEjchjAKaLmW","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/ui/react-with-native/recipes/nested-menu/src/NestedMenuItem.tsx","srcFileId":"/NestedMenuItem","operationFolderName":"nested-menu","relativeFilePathFromSrc":"/NestedMenuItem.tsx","relativeOperationBasePathFromProjectRoot":"/tools/ui/react-with-native/recipes/nested-menu","operationName":"nested-menu","comment":"General purpose NestedMenuItem\n\nTODO: make style customizable","rawStatement":"export const NestedMenuItem = (\n  props: MenuItemType & { headersClickable?: boolean; level?: number }\n) => {\n  const {\n    title,\n    children,\n    icon,\n    onClick,\n    onDoubleClick,\n    onContextMenu,\n    rightIcon,\n    target,\n    href,\n    showChildren,\n    level,\n    headersClickable,\n  } = props;\n  const router = useRouter();\n  const isSelected = router.asPath.substring(1) === href;\n\n  const realLevel = level || 0;\n  const hasChildren = children && children.length > 0 && showChildren;\n  const isClickable = headersClickable || !hasChildren;\n  const textClassName = isClickable\n    ? `${isSelected ? \"text-blue-500\" : \"\"} hover:text-blue-800 `\n    : undefined;\n  return (\n    <Div className=\"w-full\">\n      <Div\n        className={`w-full ${\n          isClickable\n            ? `hover:bg-gray-200 ${isSelected ? \"bg-gray-200 \" : \"\"}`\n            : \"\"\n        }`}\n      >\n        <ALink\n          style={{\n            paddingLeft: realLevel * 10 + 5,\n            paddingBottom: 10,\n            paddingTop: 10,\n          }}\n          textClassName=\"flex flex-1 text-xs\"\n          href={isClickable ? href : undefined}\n          target={target}\n          onDoubleClick={onDoubleClick}\n          onContextMenu={onContextMenu}\n          onClick={onClick}\n        >\n          <Span\n            //line-clamp-1 truncate text-ellipsis\n            textClassName={textClassName}\n          >\n            {icon || \"\"}\n            {title}\n          </Span>\n          {rightIcon ? <Span>{rightIcon}</Span> : null}\n        </ALink>\n      </Div>\n      {hasChildren ? (\n        <Div className=\"w-full\">\n          {children.map((child, i) => {\n            return (\n              <NestedMenuItem\n                key={`menu-${href}-${i}`}\n                {...child}\n                level={realLevel + 1}\n              />\n            );\n          })}\n        </Div>\n      ) : null}\n    </Div>\n  );\n};","parameters":{},"types":["todo"],"firstLine":6,"lastLine":10}]