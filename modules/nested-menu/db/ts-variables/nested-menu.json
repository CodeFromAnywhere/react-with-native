{
  "createdAt": 1667634998838,
  "updatedAt": 1667634998838,
  "deletedAt": 0,
  "createdFirstAt": 1667634998838,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "NestedMenu",
  "slug": "nested-menu",
  "operationRelativeTypescriptFilePath": "src/NestedMenu.tsx",
  "type": {
    "rawType": "(props: { menu: import(\"/Users/king/King/operations/tools/interfaces/vui/vui-elements/nested-menu/src/types\").MenuType; headersClickable?: boolean | undefined; }) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(props: {\n  menu: MenuType;\n  headersClickable?: boolean;\n}) => {\n  const router = useRouter();\n  const [expanded, setExpanded, { hydrated }] = useStore(\"menu.expanded\");\n\n  const expandCompleteUrlInMenu = () => {\n    const parts = trimSlashes(router.asPath).split(\"/\");\n    const cummulativeParts = parts\n      .map((part, index, array) => {\n        if (part === \"\") return;\n        return array.slice(0, index + 1).join(\"/\");\n      })\n      .filter(notEmpty);\n    const cumulativePartsExpandedObject = mergeObjectsArray(\n      cummulativeParts.map((url) => ({ [url]: true }))\n    );\n    setExpanded({ ...expanded, ...cumulativePartsExpandedObject });\n  };\n  useEffect(() => {\n    expandCompleteUrlInMenu();\n  }, [router.asPath]);\n\n  const { menu, headersClickable } = props;\n  const menuItems = menu?.map((menuItem, index) => {\n    return (\n      <NestedMenuItem\n        {...menuItem}\n        headersClickable={headersClickable}\n        key={`menu${index}`}\n      />\n    );\n  });\n  return <Div className=\"w-full\">{menuItems}</Div>;\n}",
  "description": "General purpose nested menu component\n\nPlease make sure that you also wrap your app with `MenuStoreProvider`, or this will crash...!",
  "id": "lziitmtdmucikttgkyvbgtxt"
}