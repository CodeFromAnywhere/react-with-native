{
  "createdAt": 1668448345996,
  "updatedAt": 1668448345996,
  "deletedAt": 0,
  "createdFirstAt": 1668448345996,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "getDbModelsForBundle",
  "slug": "get-db-models-for-bundle",
  "operationRelativeTypescriptFilePath": "src/getDbModelsForBundle.ts",
  "type": {
    "rawType": "(bundleConfig: import(\"/Users/king/King/operations/tools/types/bundle-types/build/BundleConfig\").BundleConfig) => Promise<import(\"/Users/king/King/operations/tools/types/code-types/build/TsInterface\").TsInterface[]>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  bundleConfig: BundleConfig\n): Promise<TsInterface[]> => {\n  const bundleSummary = getBundleSummary(bundleConfig);\n\n  const dbModels = getDbModelsFromOperations(\n    bundleSummary.packageNames\n      .concat(bundleSummary.moduleNames)\n      .concat(bundleSummary.appNames)\n  );\n  return dbModels;\n}",
  "description": "Gets all TsInterface's that are used in a bundle according to a BundleConfig",
  "id": "dusjbfulyevqhzesnvfqdiki"
}