[{"id":"ZDBYtNihFVdgkcnI","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/deployment/bundling/bundle-util/src/getBundleSummary.ts","srcFileId":"/getBundleSummary","operationFolderName":"bundle-util","relativeFilePathFromSrc":"/getBundleSummary.ts","relativeOperationBasePathFromProjectRoot":"/tools/deployment/bundling/bundle-util","operationName":"bundle-util","comment":"Summarizes a bundle config so it can be used easily in things like explore project","rawStatement":"export const getBundleSummary = (bundleConfig: BundleConfig): BundleSummary => {\n  const bundlesPath = getRootPath(\"bundles\");\n  const foldersFromRepo = bundlesPath\n    ? bundleConfig.foldersFromRepo?.map((x) =>\n        path.join(bundlesPath, kebabCase(bundleConfig.name), x)\n      )\n    : undefined;\n\n  // const filesAndFoldersToInclude = [\n  //   // ...(foldersFromRepo || []),\n  //   bundleConfig.readmeRelativeFilePath,\n  //   bundleConfig.docsRelativeFolderPath,\n  // ].filter(notEmpty);\n\n  const appNames = bundleConfig.bundles\n    .map((x) => {\n      const frontendOperationNames = makeArray(\n        x.appShellOperationNames,\n        x.serverOperationName\n      );\n\n      return frontendOperationNames;\n    })\n    .flat()\n    .filter(onlyUnique2());\n\n  const uiOperationNames = makeArray(\n    bundleConfig.bundles.map((x) => x.uiOperationName).filter(notEmpty)\n  );\n\n  const bundlePublicOperationNames = bundleConfig.bundles\n    .map(\n      (x) =>\n        x.operations\n          ?.filter((x) => x.privacy === \"public\")\n          .map((x) => x.operationName) || []\n    )\n    .flat();\n  const bundlePrivateOperationNames = bundleConfig.bundles\n    .map(\n      (x) =>\n        x.operations\n          ?.filter((x) => x.privacy === \"private\")\n          .map((x) => x.operationName) || []\n    )\n    .flat();\n\n  const packageNames = bundleConfig.dependencies\n    .filter((x) => x.privacy === \"public\")\n    .map((x) => x.operationName)\n    .concat(uiOperationNames)\n    .concat(bundlePublicOperationNames)\n    .filter(onlyUnique2());\n\n  const moduleNames = bundleConfig.dependencies\n    .filter((x) => x.privacy === \"private\")\n    .map((x) => x.operationName)\n    .concat(bundlePrivateOperationNames)\n    .filter(onlyUnique2());\n\n  const summary: BundleSummary = {\n    // filesAndFoldersToInclude,\n    packageNames,\n    moduleNames,\n    appNames,\n  };\n\n  return summary;\n};","parameters":{},"types":[],"firstLine":17,"lastLine":19}]