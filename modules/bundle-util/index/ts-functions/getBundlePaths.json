[{"id":"vablKFiKSpbrmyeE","commentsInside":[],"rawText":" async (\n  queryPath: string,\n  config?: { manualProjectRoot?: string }\n): Promise<string | undefined> => {\n  const projectRoot = config?.manualProjectRoot || getProjectRoot();\n  if (!projectRoot) return;\n\n  if (queryPath === \"\") {\n    const realPath = await findFileNameCaseInsensitive(\n      projectRoot,\n      \"README.md\"\n    );\n\n    return realPath;\n  }\n\n  if (queryPath.startsWith(\"docs/\")) {\n    const realPath = path.join(projectRoot, `${queryPath}.md`);\n    if (fs.existsSync(realPath)) return realPath;\n    return;\n  } else {\n    // must be operation, use that convention\n\n    const realPath = await findFileNameCaseInsensitive(\n      path.join(projectRoot, queryPath),\n      \"README.md\"\n    );\n    return realPath;\n  }\n}","name":"getRealPathFromQueryPath","slug":"get-real-path-from-query-path","parameters":[{"name":"queryPath","schema":{"type":"string"},"simplifiedSchema":{"type":"string"},"required":true},{"name":"config","schema":{"type":"object","properties":{"manualProjectRoot":{"type":"string"}},"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"manualProjectRoot","required":false,"schema":{"type":"string"}}],"type":"object"},"required":false}],"description":"","returnType":{"rawType":"Promise<string | undefined>","typeCoverage":0,"isArray":false,"isEnum":false,"isObject":false,"isPrimitive":false,"isEnumLiteral":false},"maxIndentationDepth":3,"relativePathFromProjectRoot":"/tools/deployment/bundling/bundle-util/src/getBundlePaths.ts","srcFileId":"/getBundlePaths","operationFolderName":"bundle-util","relativeFilePathFromSrc":"/getBundlePaths.ts","relativeOperationBasePathFromProjectRoot":"/tools/deployment/bundling/bundle-util","operationName":"bundle-util","size":{"characters":730,"lines":30,"bytes":730,"bytesPerCharacter":1,"charactersPerfLine":24.333333333333332,"linesPerFile":30,"numberOfFiles":1}},{"id":"KHqcItnxoAAIJkYc","commentsInside":[],"rawText":" async (config?: {\n  manualProjectRoot?: string;\n}) => {\n  const projectRoot = config?.manualProjectRoot || getProjectRoot();\n  if (!projectRoot) return;\n\n  // the docs folder with all its files\n  const docsPath = path.join(projectRoot, \"docs\");\n  const relativeDocsPaths = (\n    await explore({ basePath: docsPath, extension: \"md\" })\n  ).map((x) => {\n    const pathParse = path.parse(x.path);\n    const mdPath = path.join(pathParse.dir, pathParse.name);\n    const relativeMdPath = mdPath.substring(projectRoot.length + 1);\n\n    return relativeMdPath;\n  });\n\n  // and all operations (readmes)\n\n  const relativeOperationPaths = (\n    await exploreOperationFolders({\n      basePath: getPathsWithOperations({ manualProjectRoot: projectRoot }),\n    })\n  ).map((x) => x.substring(projectRoot.length + 1));\n\n  return [\"\", ...relativeDocsPaths, ...relativeOperationPaths];\n}","name":"getBundleQueryPaths","slug":"get-bundle-query-paths","parameters":[{"name":"config","schema":{"type":"object","properties":{"manualProjectRoot":{"type":"string"}},"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"manualProjectRoot","required":false,"schema":{"type":"string"}}],"type":"object"},"required":false}],"description":"","returnType":{"rawType":"unknown","typeCoverage":0,"isArray":false,"isEnum":false,"isObject":false,"isPrimitive":false,"isEnumLiteral":false},"maxIndentationDepth":3,"relativePathFromProjectRoot":"/tools/deployment/bundling/bundle-util/src/getBundlePaths.ts","srcFileId":"/getBundlePaths","operationFolderName":"bundle-util","relativeFilePathFromSrc":"/getBundlePaths.ts","relativeOperationBasePathFromProjectRoot":"/tools/deployment/bundling/bundle-util","operationName":"bundle-util","size":{"characters":867,"lines":28,"bytes":867,"bytesPerCharacter":1,"charactersPerfLine":30.964285714285715,"linesPerFile":28,"numberOfFiles":1}}]