{
  "createdAt": 1666261772953,
  "updatedAt": 1666261772953,
  "deletedAt": 0,
  "createdFirstAt": 1666261772953,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "ClickableIcon",
  "slug": "clickable-icon",
  "operationRelativeTypescriptFilePath": "src/ClickableIcon.tsx",
  "type": {
    "rawType": "(button: import(\"/Users/king/King/operations/tools/interfaces/vui/vui-elements/clickable-icon/src/ClickableIcon\").ClickableIconType) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(button: ClickableIconType) => {\n  return (\n    <Button\n      className=\"flex flex-col items-center\"\n      onClick={button.disabled ? undefined : button.onClick}\n    >\n      {button.icon ? (\n        <Svg\n          src={button.icon}\n          width={24}\n          height={24}\n          className={button.disabled ? \"text-gray-500\" : \"text-black\"}\n        />\n      ) : button.emoji ? (\n        <P\n          className={`text-xl ${\n            button.disabled ? \"opacity-50\" : \"hover:scale-110\"\n          }`}\n        >\n          {button.emoji}\n        </P>\n      ) : null}\n    </Button>\n  );\n}",
  "description": "Renders a simple clickable icon with some styling\n\nIcon can be either an icon (Svg src) or emoji (string)",
  "id": "siivhwaxiicpbsvlbzjrkuvs"
}