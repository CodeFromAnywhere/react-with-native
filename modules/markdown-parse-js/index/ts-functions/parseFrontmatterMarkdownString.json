[{"id":"mBSHVIQDSzGbAFcv","commentsInside":[],"rawText":" (\n  markdownWithFrontmatter: string\n): MarkdownParse => {\n  const lines = markdownWithFrontmatter.split(\"\\n\");\n\n  const frontmatterStartIndex = lines.findIndex((x) => x === \"---\");\n\n  //console.log({ frontmatterStartIndex });\n  if (frontmatterStartIndex === -1) {\n    return { raw: markdownWithFrontmatter, parameters: {}, content: [] };\n  }\n\n  const linesAfterStart = lines.slice(frontmatterStartIndex + 1);\n  const frontmatterEndIndex =\n    linesAfterStart.findIndex((x) => x === \"---\") + frontmatterStartIndex + 1;\n\n  //console.log({ frontmatterEndIndex });\n  const frontmatterLines = lines.slice(\n    frontmatterStartIndex + 1,\n    frontmatterEndIndex\n  );\n\n  //   console.log({ frontmatterLines });\n  const parameters: FrontMatter = mergeObjectsArray(\n    frontmatterLines.map((line) => {\n      const [key, value] = line.split(\":\").map((x) => x.trim());\n      return { [key]: parsePrimitive(value) };\n    })\n  );\n\n  const raw = lines.slice(frontmatterEndIndex + 1).join(\"\\n\");\n\n  return { parameters, raw, content: [] };\n}","name":"parseFrontmatterMarkdownString","slug":"parse-frontmatter-markdown-string","parameters":[{"name":"markdownWithFrontmatter","schema":{"type":"string"},"simplifiedSchema":{"type":"string"},"required":true}],"description":"splits a markdown string into its frontmatter object and the raw content (without frontmatter)","returnType":{"rawType":"import(\"/Users/king/King/tools/types/code-types/build/MarkdownParse\").MarkdownParse","typeCoverage":0,"isArray":false,"isEnum":false,"isObject":true,"isPrimitive":false,"isEnumLiteral":false},"maxIndentationDepth":3,"relativePathFromProjectRoot":"/tools/parsing/file-conversion/md/markdown-parse-js/src/parseFrontmatterMarkdownString.ts","srcFileId":"/parseFrontmatterMarkdownString","operationFolderName":"markdown-parse-js","relativeFilePathFromSrc":"/parseFrontmatterMarkdownString.ts","relativeOperationBasePathFromProjectRoot":"/tools/parsing/file-conversion/md/markdown-parse-js","operationName":"markdown-parse-js","size":{"characters":1122,"lines":34,"bytes":1122,"bytesPerCharacter":1,"charactersPerfLine":33,"linesPerFile":34,"numberOfFiles":1}}]