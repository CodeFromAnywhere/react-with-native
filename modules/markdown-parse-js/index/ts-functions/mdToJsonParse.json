[{"id":"beFLpXFZEtQLMhQE","commentsInside":[],"rawText":" (\n  markdownString: string,\n  fileName?: string\n): MarkdownParse => {\n  const { parameters, raw } = parseFrontmatterMarkdownString(markdownString);\n  return {\n    fileName,\n    raw: markdownString,\n    parameters,\n    content: mdContentParseRecursively(raw, 1),\n  };\n}","name":"mdToJsonParse","slug":"md-to-json-parse","parameters":[{"name":"markdownString","schema":{"type":"string"},"simplifiedSchema":{"type":"string"},"required":true},{"name":"fileName","schema":{"type":"string"},"simplifiedSchema":{"type":"string"},"required":false}],"description":"makes a markdown parse from a markdown string\n\nTODO: `markdownStringToMarkdownParse` is a better name","returnType":{"rawType":"import(\"/Users/king/King/tools/types/code-types/build/MarkdownParse\").MarkdownParse","typeCoverage":0,"isArray":false,"isEnum":false,"isObject":true,"isPrimitive":false,"isEnumLiteral":false},"maxIndentationDepth":2,"relativePathFromProjectRoot":"/tools/parsing/file-conversion/md/markdown-parse-js/src/mdToJsonParse.ts","srcFileId":"/mdToJsonParse","operationFolderName":"markdown-parse-js","relativeFilePathFromSrc":"/mdToJsonParse.ts","relativeOperationBasePathFromProjectRoot":"/tools/parsing/file-conversion/md/markdown-parse-js","operationName":"markdown-parse-js","size":{"characters":370,"lines":14,"bytes":370,"bytesPerCharacter":1,"charactersPerfLine":26.428571428571427,"linesPerFile":14,"numberOfFiles":1}}]