[{"id":"HaRszeTYtHMGerun","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/parsing/file-conversion/md/key-value-markdown-js/src/kvmdParseToMarkdownString.ts","srcFileId":"/kvmdParseToMarkdownString","operationFolderName":"key-value-markdown-js","relativeFilePathFromSrc":"/kvmdParseToMarkdownString.ts","relativeOperationBasePathFromProjectRoot":"/tools/parsing/file-conversion/md/key-value-markdown-js","operationName":"key-value-markdown-js","comment":"parses KeyValueMarkdownParse into a markdown string so it can be saved as a markdown file","rawStatement":"export const kvmdParseToMarkdownString = (\n  keyValueMarkdownParse: KeyValueMarkdownParse\n) => {\n  const frontmatterString = frontmatterParseToString(\n    keyValueMarkdownParse.parameters\n  );\n\n  // console.log({ data: keyValueMarkdownParse.data });\n  // NB: TODO: I don't know if we need to sort stuff at all, it should stay in the right order!\n  //const sortedData = keyValueMarkdownParse.data\n  //.sort((a, b) =>\n  //  JSON.stringify(a.categoryStack) < JSON.stringify(b.categoryStack) ? -1 : 1\n  //);\n  //console.log({ sortedData });\n\n  //2 go over every row, and parse it back into the line. if the row holds a new categorystack, make sure to parse that header as well\n  const result = keyValueMarkdownParse.data\n    .map((kvmdData, index) => {\n      const previous: KeyValueMarkdownModelType | undefined =\n        keyValueMarkdownParse.data[index - 1];\n\n      const string = kvmdDataToString(kvmdData, previous);\n\n      return string;\n    })\n    .join(\"\");\n\n  // console.log({ frontmatterString, result });\n\n  return `${frontmatterString}${result}`;\n};","parameters":{},"types":[],"firstLine":6,"lastLine":8},{"id":"HaRszeTYtHMGerun","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/parsing/file-conversion/md/key-value-markdown-js/src/kvmdParseToMarkdownString.ts","srcFileId":"/kvmdParseToMarkdownString","operationFolderName":"key-value-markdown-js","relativeFilePathFromSrc":"/kvmdParseToMarkdownString.ts","relativeOperationBasePathFromProjectRoot":"/tools/parsing/file-conversion/md/key-value-markdown-js","operationName":"key-value-markdown-js","comment":"console.log(\"RESULT\", result, \"EXAMPLE\", exampleKvMdString);","rawStatement":"return result === exampleKvMdString;","parameters":{},"types":[],"firstLine":46,"lastLine":46}]