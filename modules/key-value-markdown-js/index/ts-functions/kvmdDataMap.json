[{"id":"WrcCdrTKmGllNnmR","commentsInside":[],"rawText":" <\n  T extends { [key: string]: string | string[] | undefined }\n>(\n  data: KeyValueMarkdownModelType[],\n  {\n    keyName,\n    valueName,\n    categoryStackName,\n    commentName,\n  }: {\n    /**\n     * key by default\n     */\n    keyName?: string;\n    /**\n     * value by default\n     */\n    valueName?: string;\n    /**\n     * comment by default\n     */\n    commentName?: string;\n    /**\n     * categoryStack by default\n     */\n    categoryStackName?: string;\n  }\n): T[] => {\n  const newDataObject = data.map((item) => {\n    const newData = {\n      [keyName || \"name\"]: item.name,\n      [valueName || \"value\"]: item.value,\n      [commentName || \"comment\"]: item.comment,\n      [categoryStackName || \"categoryStack\"]: item.categoryStack,\n    } as T;\n\n    return newData;\n  });\n\n  return newDataObject;\n}","name":"kvmdDataMap","slug":"kvmd-data-map","parameters":[{"name":"data","schema":{"type":"array","items":{"$ref":"#/definitions/KeyValueMarkdownModelType"}},"simplifiedSchema":{"items":[{"schema":{"description":"handy model type for storing stuff in a KeyValue Markdown file. empty lines are omitted\n\nall you need to specify in the kvmd is the key and the value, separated by \":\"","properties":[{"name":"id","required":true,"schema":{"description":"Calculated:\n\nby taking the relative file path + a stringified version of the index.\n\nused for compatibility with some general purpose functions","type":"string"}},{"name":"index","required":true,"schema":{"description":"line where the kv was found (at any given moment this is an unqiue identifier, but it may change without notice, so it's not a good idea to store stuff in kvmd if it has references to the id)","type":"number"}},{"name":"relativeIndex","required":true,"schema":{"description":"relative index from the category header, starting count with 1. if there is no header, also counts starting with 1","type":"number"}},{"name":"name","required":true,"schema":{"description":"key\n\nshould be english because it's kind of part of the codebase!","type":"string"}},{"name":"slug","required":true,"schema":{"description":"calculated: slug for this key (kebab case form of the name)","type":"string"}},{"name":"value","required":false,"schema":{"description":"value behind the semicolom (:). If not given, will be undefined.\n\nIf possible, will be parsed to a number, boolean, null or undefined... otherwise it's a string\n\ncan be any language that we can detect","type":"string"}},{"name":"comment","required":true,"schema":{"description":"comment in html syntax. if not given, will be null","type":"string"}},{"name":"categoryStack","required":true,"schema":{"items":[{"schema":{"type":"string"},"name":null}],"type":"array"}}],"type":"object"},"name":"KeyValueMarkdownModelType"}],"type":"array"},"required":true},{"name":"{\n    keyName,\n    valueName,\n    categoryStackName,\n    commentName,\n  }","schema":{"type":"object","properties":{"keyName":{"type":"string","description":"key by default"},"valueName":{"type":"string","description":"value by default"},"commentName":{"type":"string","description":"comment by default"},"categoryStackName":{"type":"string","description":"categoryStack by default"}},"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"keyName","required":false,"schema":{"description":"key by default","type":"string"}},{"name":"valueName","required":false,"schema":{"description":"value by default","type":"string"}},{"name":"commentName","required":false,"schema":{"description":"comment by default","type":"string"}},{"name":"categoryStackName","required":false,"schema":{"description":"categoryStack by default","type":"string"}}],"type":"object"},"required":true}],"description":"DEPRECATED: probably never needed, unless I make it useful\n\nmapper function to give a kvmd data object other parameters.\n\nNB: not sure if this is useful. it would be useful if we could auto-generate the application of this function for multiple db models.","returnType":{"rawType":"T[]","typeDefinition":{"optional":false,"type":"array","items":{}},"typeCoverage":0,"isArray":true,"isEnum":false,"isObject":true,"isPrimitive":false,"isEnumLiteral":false,"simplifiedSchema":{"items":[{"schema":{"properties":[],"type":"object"},"name":null}],"type":"array"}},"maxIndentationDepth":3,"relativePathFromProjectRoot":"/tools/parsing/file-conversion/md/key-value-markdown-js/src/kvmdDataMap.ts","srcFileId":"/kvmdDataMap","operationFolderName":"key-value-markdown-js","relativeFilePathFromSrc":"/kvmdDataMap.ts","relativeOperationBasePathFromProjectRoot":"/tools/parsing/file-conversion/md/key-value-markdown-js","operationName":"key-value-markdown-js","size":{"characters":1052,"lines":45,"bytes":1052,"bytesPerCharacter":1,"charactersPerfLine":23.377777777777776,"linesPerFile":45,"numberOfFiles":1}}]