{
  "createdAt": 1666262780637,
  "updatedAt": 1666262780637,
  "deletedAt": 0,
  "createdFirstAt": 1666262780637,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "kvmdParseToMarkdownString",
  "slug": "kvmd-parse-to-markdown-string",
  "operationRelativeTypescriptFilePath": "src/kvmdParseToMarkdownString.ts",
  "type": {
    "rawType": "(keyValueMarkdownParse: import(\"/Users/king/King/operations/tools/types/model-types/build/keyValueMarkdown\").KeyValueMarkdownParse) => string",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(\n  keyValueMarkdownParse: KeyValueMarkdownParse\n) => {\n  const frontmatterString = frontmatterParseToString(\n    keyValueMarkdownParse.parameters\n  );\n\n  //2 go over every row, and parse it back into the line\n  const result = keyValueMarkdownParse.data\n    .map((kvmdData, index) => {\n      const previous: KeyValueMarkdownModelType | undefined =\n        keyValueMarkdownParse.data[index - 1];\n      const string = kvmdDataToString(kvmdData, previous);\n      return string;\n    })\n    .join(\"\");\n\n  return `${frontmatterString}${result}`;\n}",
  "description": "parses KeyValueMarkdownParse into a markdown string so it can be saved as a markdown file",
  "id": "gnggrhayqgytthqaahtganzg"
}