{
  "createdAt": 1668836109991,
  "updatedAt": 1668836109991,
  "deletedAt": 0,
  "createdFirstAt": 1668836109991,
  "id": "standardizedapireturntype",
  "name": "StandardizedApiReturnType",
  "slug": "standardizedapireturntype",
  "operationRelativeTypescriptFilePath": "src/cool-toast.ts",
  "hasGeneric": false,
  "isExported": false,
  "isOperationIndex": false,
  "description": "Handy type interface for rendering response",
  "isDbModel": false,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "object",
      "properties": {
        "isSuccessful": {
          "type": "boolean",
          "description": "A boolean indicating whether or not the backend function was executed succesfully"
        },
        "isNotConnected": {
          "type": "boolean",
          "description": "If true, this indicates that the backend could not be reached for one reason or another. The reason can be found in `message`"
        },
        "isCached": {
          "type": "boolean",
          "description": "If true, this means that the result is coming from a cache"
        },
        "isUnauthorized": {
          "type": "boolean",
          "description": "If true, the function was not executed because you were not authorized"
        },
        "message": {
          "type": "string",
          "description": "Optionally there could be a message here with more information about the failure"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "fieldStack": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "error": {
                "type": "string"
              }
            },
            "required": [
              "fieldStack",
              "error"
            ],
            "additionalProperties": false
          },
          "description": "If the input of the api was invalid, the invalidation will return the errors here."
        },
        "result": {
          "type": "object",
          "properties": {
            "isSuccessful": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false,
      "required": [
        "isSuccessful"
      ],
      "description": "Handy type interface for rendering response"
    },
    "simplifiedSchema": {
      "fullComment": "Handy type interface for rendering response",
      "properties": [
        {
          "name": "isSuccessful",
          "required": true,
          "schema": {
            "fullComment": "A boolean indicating whether or not the backend function was executed succesfully",
            "type": "boolean"
          }
        },
        {
          "name": "isNotConnected",
          "required": false,
          "schema": {
            "fullComment": "If true, this indicates that the backend could not be reached for one reason or another. The reason can be found in `message`",
            "type": "boolean"
          }
        },
        {
          "name": "isCached",
          "required": false,
          "schema": {
            "fullComment": "If true, this means that the result is coming from a cache",
            "type": "boolean"
          }
        },
        {
          "name": "isUnauthorized",
          "required": false,
          "schema": {
            "fullComment": "If true, the function was not executed because you were not authorized",
            "type": "boolean"
          }
        },
        {
          "name": "message",
          "required": false,
          "schema": {
            "fullComment": "Optionally there could be a message here with more information about the failure",
            "type": "string"
          }
        },
        {
          "name": "errors",
          "required": false,
          "schema": {
            "fullComment": "If the input of the api was invalid, the invalidation will return the errors here.",
            "items": [
              {
                "schema": {
                  "properties": [
                    {
                      "name": "fieldStack",
                      "required": true,
                      "schema": {
                        "items": [
                          {
                            "schema": {
                              "type": "string"
                            },
                            "name": null
                          }
                        ],
                        "type": "array"
                      }
                    },
                    {
                      "name": "error",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "type": "object"
                },
                "name": null
              }
            ],
            "type": "array"
          }
        },
        {
          "name": "result",
          "required": false,
          "schema": {
            "properties": [
              {
                "name": "isSuccessful",
                "required": false,
                "schema": {
                  "type": "boolean"
                }
              },
              {
                "name": "message",
                "required": false,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "type": "object"
          }
        }
      ],
      "type": "object"
    },
    "typeCoverage": 0,
    "rawType": "StandardizedApiReturnType",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}