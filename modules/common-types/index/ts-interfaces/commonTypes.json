[{"id":"nlyXfWxetTezykDS","name":"Email","slug":"email","relativePathFromProjectRoot":"/tools/types/common-types/src/commonTypes.ts","srcFileId":"/commonTypes","operationFolderName":"common-types","relativeFilePathFromSrc":"/commonTypes.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/common-types","operationName":"common-types","rawText":"export type Email = string;","extensions":[],"description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"string"},"simplifiedSchema":{"type":"string"},"typeCoverage":0,"rawType":"Email","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"XRWZYDvFtNmyEzmJ","name":"NamedParameters<typeof isEmail>","slug":"named-parameters-<typeof-is-email->","relativePathFromProjectRoot":"/tools/types/common-types/src/commonTypes.ts","srcFileId":"/commonTypes","operationFolderName":"common-types","relativeFilePathFromSrc":"/commonTypes.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/common-types","operationName":"common-types","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"email":{"type":"string"}},"required":["email"],"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"email","required":true,"schema":{"type":"string"}}],"type":"object"},"typeCoverage":0,"rawType":"NamedParameters<typeof isEmail>","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"XhFJXiYLCCRoirOk","name":"Slug","slug":"slug","relativePathFromProjectRoot":"/tools/types/common-types/src/commonTypes.ts","srcFileId":"/commonTypes","operationFolderName":"common-types","relativeFilePathFromSrc":"/commonTypes.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/common-types","operationName":"common-types","rawText":"\n\n/**\n * use this for any identifier that's not an Id-type. Usually this is a kebab-case version of a written text, but it can also be a file path, for example.\n */\nexport type Slug = string;","extensions":[],"description":"use this for any identifier that's not an Id-type. Usually this is a kebab-case version of a written text, but it can also be a file path, for example.","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"string","description":"use this for any identifier that's not an Id-type. Usually this is a kebab-case version of a written text, but it can also be a file path, for example."},"simplifiedSchema":{"description":"use this for any identifier that's not an Id-type. Usually this is a kebab-case version of a written text, but it can also be a file path, for example.","type":"string"},"typeCoverage":0,"rawType":"Slug","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"pWdkSiDXIvdvdOtC","name":"Index","slug":"index","relativePathFromProjectRoot":"/tools/types/common-types/src/commonTypes.ts","srcFileId":"/commonTypes","operationFolderName":"common-types","relativeFilePathFromSrc":"/commonTypes.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/common-types","operationName":"common-types","rawText":"\n\n/**\n * used for md files. index is the line\n */\nexport type Index = number;","extensions":[],"description":"used for md files. index is the line","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"number","description":"used for md files. index is the line"},"simplifiedSchema":{"description":"used for md files. index is the line","type":"number"},"typeCoverage":0,"rawType":"Index","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"prSkqWChJJIBkeIF","name":"Text","slug":"text","relativePathFromProjectRoot":"/tools/types/common-types/src/commonTypes.ts","srcFileId":"/commonTypes","operationFolderName":"common-types","relativeFilePathFromSrc":"/commonTypes.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/common-types","operationName":"common-types","rawText":"\n/**\n * text can be in multiple formats.\n * most texts in data are probably just text\n * but they can also contain markdown\n * ----\n * if there is a data model with just a single text and it is clear from the name of the model what it should be, better call it either text or markdown.\n */\nexport type Text = string;","extensions":[],"description":"text can be in multiple formats.\nmost texts in data are probably just text\nbut they can also contain markdown\n----\nif there is a data model with just a single text and it is clear from the name of the model what it should be, better call it either text or markdown.","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"string","description":"text can be in multiple formats. most texts in data are probably just text but they can also contain markdown\n---- if there is a data model with just a single text and it is clear from the name of the model what it should be, better call it either text or markdown."},"simplifiedSchema":{"description":"text can be in multiple formats. most texts in data are probably just text but they can also contain markdown\n---- if there is a data model with just a single text and it is clear from the name of the model what it should be, better call it either text or markdown.","type":"string"},"typeCoverage":0,"rawType":"Text","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"pvNkDTAfMpUDLVdU","name":"Markdown","slug":"markdown","relativePathFromProjectRoot":"/tools/types/common-types/src/commonTypes.ts","srcFileId":"/commonTypes","operationFolderName":"common-types","relativeFilePathFromSrc":"/commonTypes.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/common-types","operationName":"common-types","rawText":"\n\n/**\n * a string that is known to contain markdown.\n */\nexport type Markdown = string;","extensions":[],"description":"a string that is known to contain markdown.","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"string","description":"a string that is known to contain markdown."},"simplifiedSchema":{"description":"a string that is known to contain markdown.","type":"string"},"typeCoverage":0,"rawType":"Markdown","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"sAgXGRrrOECOuxax","name":"Url","slug":"url","relativePathFromProjectRoot":"/tools/types/common-types/src/commonTypes.ts","srcFileId":"/commonTypes","operationFolderName":"common-types","relativeFilePathFromSrc":"/commonTypes.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/common-types","operationName":"common-types","rawText":"\n\n/**\n * valid url, can be validated\n */\nexport type Url = string;","extensions":[],"description":"valid url, can be validated","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"string","description":"valid url, can be validated"},"simplifiedSchema":{"description":"valid url, can be validated","type":"string"},"typeCoverage":0,"rawType":"Url","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"IxCLGxAvQcsdefAw","name":"PhoneNumber","slug":"phone-number","relativePathFromProjectRoot":"/tools/types/common-types/src/commonTypes.ts","srcFileId":"/commonTypes","operationFolderName":"common-types","relativeFilePathFromSrc":"/commonTypes.ts","relativeOperationBasePathFromProjectRoot":"/tools/types/common-types","operationName":"common-types","rawText":"\n\n/**\n * country code without +\n */\nexport type PhoneNumber = number;","extensions":[],"description":"country code without +","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"number","description":"country code without +"},"simplifiedSchema":{"description":"country code without +","type":"number"},"typeCoverage":0,"rawType":"PhoneNumber","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}}]