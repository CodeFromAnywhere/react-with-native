{
  "createdAt": 1666264456114,
  "updatedAt": 1666264456114,
  "deletedAt": 0,
  "createdFirstAt": 1666264456114,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getTsMorphProject.ts",
  "commentsInside": [],
  "rawText": " (operationFolderPath: string) => {\n  const tsConfigFilePath = path.join(operationFolderPath, \"tsconfig.json\");\n\n  const tsConfigExists = fs.existsSync(tsConfigFilePath);\n  const srcExists = existsSync(path.join(operationFolderPath, \"src\"));\n  if (!tsConfigExists || !srcExists) {\n    log(\n      `This is not an operation: ${operationFolderPath}. (src folder or tsconfig.json are not present)`,\n      { type: \"error\" }\n    );\n    return;\n  }\n\n  const project = new Project({ tsConfigFilePath, libFolderPath: \"src\" });\n\n  return project;\n}",
  "name": "getTsMorphProject",
  "slug": "get-ts-morph-project",
  "parameters": [
    {
      "name": "operationFolderPath",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    }
  ],
  "description": "returns a ts-morph Project given a operationFolderPath, if a tsconfig.json can be found",
  "returnType": {
    "rawType": "import(\"/Users/king/King/operations/node_modules/ts-morph/lib/ts-morph\").Project | undefined",
    "typeDefinition": {
      "optional": true
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 625,
    "lines": 17,
    "bytes": 625,
    "bytesPerCharacter": 1,
    "charactersPerLine": 37,
    "linesPerFile": 17,
    "numberOfFiles": 1
  },
  "id": "sbaxrqyfpubxuaptsimtdben"
}