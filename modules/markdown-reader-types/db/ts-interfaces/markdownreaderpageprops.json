{
  "createdAt": 1667635203932,
  "updatedAt": 1667635203932,
  "deletedAt": 0,
  "createdFirstAt": 1667635203932,
  "id": "markdownreaderpageprops",
  "name": "MarkdownReaderPageProps",
  "slug": "markdownreaderpageprops",
  "operationRelativeTypescriptFilePath": "src/MarkdownReaderPageProps.ts",
  "hasGeneric": false,
  "isExported": true,
  "rawText": "\nexport type MarkdownReaderPageProps = {\n  /**\n   *\n   */\n  publicBundleConfig?: Omit<\n    BundleConfig,\n    \"customisableBundleConfig\" | \"createBundleConfig\"\n  > | null;\n\n  projectRelativeMarkdownPath?: string | null;\n  augmentedWordObject?: MappedObject<AugmentedWord>;\n  /**\n   * If markdownfile is null, the page should exist, but the reading of the file failed\n   */\n  markdownFile?: WebMarkdownFile | null;\n  pages: MarkdownReaderPage[];\n  /**\n   * Title of the page\n   */\n  title?: string | null;\n  /**\n   * If path is not a markdownfile, will return all children here\n   */\n  children?: {\n    title: string;\n    firstParagraph: string | null;\n    folderName: string;\n    projectRelativeMarkdownPath: string | null;\n  }[];\n  previousQueryPath?: string | null;\n  nextQueryPath?: string | null;\n  description?: string | null;\n};",
  "extensions": [],
  "isOperationIndex": false,
  "description": "",
  "isDbModel": false,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "object",
      "properties": {
        "publicBundleConfig": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "categoryStackCalculated": {
                  "$ref": "#/definitions/CategoryStack",
                  "description": "In case of jsonSingle storageMethod, the categoryStack is generated by the location of the file in the db model folder in the db folder.\n\nNB: Changing this value when updating/upserting, changes where the item is located!"
                },
                "id": {
                  "$ref": "#/definitions/Id"
                },
                "operationName": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "description": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you"
                },
                "projectRelativePath": {
                  "type": "string",
                  "description": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you"
                },
                "operationRelativePath": {
                  "type": "string",
                  "description": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you"
                },
                "createdAt": {
                  "$ref": "#/definitions/CreatedAt"
                },
                "updatedAt": {
                  "$ref": "#/definitions/UpdatedAt"
                },
                "deletedAt": {
                  "$ref": "#/definitions/DeletedAt"
                },
                "createdFirstAt": {
                  "$ref": "#/definitions/CreatedFirstAt"
                },
                "slug": {
                  "$ref": "#/definitions/Id"
                },
                "name": {
                  "$ref": "#/definitions/Id"
                },
                "language": {
                  "$ref": "#/definitions/Id"
                },
                "description": {
                  "$ref": "#/definitions/Id"
                },
                "emoji": {
                  "$ref": "#/definitions/Id"
                },
                "primaryColor": {
                  "$ref": "#/definitions/Id"
                },
                "gitRepoUrl": {
                  "$ref": "#/definitions/Id"
                },
                "isGitRepoPublic": {
                  "$ref": "#/definitions/Id"
                },
                "bundleMarkdownReaderConfig": {
                  "$ref": "#/definitions/Id"
                }
              },
              "required": [
                "id",
                "operationName",
                "projectRelativePath",
                "createdAt",
                "updatedAt",
                "deletedAt",
                "createdFirstAt"
              ],
              "additionalProperties": false
            },
            {
              "type": "null"
            }
          ]
        },
        "projectRelativeMarkdownPath": {
          "type": [
            "string",
            "null"
          ]
        },
        "augmentedWordObject": {
          "$ref": "#/definitions/MappedObject%3CAugmentedWord%3E"
        },
        "markdownFile": {
          "anyOf": [
            {
              "$ref": "#/definitions/WebMarkdownFile"
            },
            {
              "type": "null"
            }
          ],
          "description": "If markdownfile is null, the page should exist, but the reading of the file failed"
        },
        "pages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarkdownReaderPage"
          }
        },
        "title": {
          "type": [
            "string",
            "null"
          ],
          "description": "Title of the page"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "firstParagraph": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "folderName": {
                "type": "string"
              },
              "projectRelativeMarkdownPath": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "title",
              "firstParagraph",
              "folderName",
              "projectRelativeMarkdownPath"
            ],
            "additionalProperties": false
          },
          "description": "If path is not a markdownfile, will return all children here"
        },
        "previousQueryPath": {
          "type": [
            "string",
            "null"
          ]
        },
        "nextQueryPath": {
          "type": [
            "string",
            "null"
          ]
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "pages"
      ],
      "additionalProperties": false
    },
    "simplifiedSchema": {
      "properties": [
        {
          "name": "publicBundleConfig",
          "required": false,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "projectRelativeMarkdownPath",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "markdownFile",
          "required": false,
          "schema": {
            "fullComment": "If markdownfile is null, the page should exist, but the reading of the file failed",
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "pages",
          "required": true,
          "schema": {
            "items": [
              {
                "schema": {
                  "fullComment": "for markdown-reader-ui, the pages can be markdown files, but they can also be connected to models",
                  "properties": [
                    {
                      "name": "queryPath",
                      "required": true,
                      "schema": {
                        "fullComment": "path to be used as the url. no preceding slash",
                        "type": "string"
                      }
                    },
                    {
                      "name": "filePath",
                      "required": false,
                      "schema": {
                        "fullComment": "if given, the md-file will be provided to the frontend\n\nproject relative path",
                        "type": "string"
                      }
                    },
                    {
                      "name": "isMenuItem",
                      "required": false,
                      "schema": {
                        "fullComment": "if true, this item will be shown in the menu",
                        "type": "boolean"
                      }
                    }
                  ],
                  "type": "object"
                },
                "name": "MarkdownReaderPage"
              }
            ],
            "type": "array"
          }
        },
        {
          "name": "title",
          "required": false,
          "schema": {
            "fullComment": "Title of the page",
            "type": "string"
          }
        },
        {
          "name": "children",
          "required": false,
          "schema": {
            "fullComment": "If path is not a markdownfile, will return all children here",
            "items": [
              {
                "schema": {
                  "properties": [
                    {
                      "name": "title",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "firstParagraph",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "folderName",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "projectRelativeMarkdownPath",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "type": "object"
                },
                "name": null
              }
            ],
            "type": "array"
          }
        },
        {
          "name": "previousQueryPath",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "nextQueryPath",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "description",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      ],
      "type": "object"
    },
    "typeCoverage": 0,
    "rawType": "MarkdownReaderPageProps",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}