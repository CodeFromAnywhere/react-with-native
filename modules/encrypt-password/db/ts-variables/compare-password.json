{
  "createdAt": 1668545169185,
  "updatedAt": 1668545169185,
  "deletedAt": 0,
  "createdFirstAt": 1668545169185,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "comparePassword",
  "slug": "compare-password",
  "operationRelativeTypescriptFilePath": "src/comparePassword.ts",
  "type": {
    "rawType": "(rawPassword: string, encryptedPassword: string) => Promise<boolean>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  rawPassword: string,\n  encryptedPassword: string\n): Promise<boolean> => {\n  return compare(rawPassword, encryptedPassword);\n}",
  "description": "Method to check if a raw password should be the same as the encrypted variant. Uses `bcrypt`",
  "id": "mscbxyfgmivavhuqdyjtxgav"
}