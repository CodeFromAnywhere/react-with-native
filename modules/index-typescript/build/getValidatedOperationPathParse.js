"use strict";var __assign=this&&this.__assign||function(){return __assign=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var i in t=arguments[a])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},__assign.apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getValidatedOperationPathParse=void 0;var fs_util_1=require("fs-util"),get_path_1=require("get-path"),log_1=require("log"),getValidatedOperationPathParse=function(e){var t=fs_util_1.path.parse(e);if([".ts",".tsx"].includes(t.ext))
// NB: filename is not only a name here but a relative path
if(fs_util_1.fs.existsSync(e)){var a=(0,get_path_1.getOperationPathParse)(e);if(a)return __assign(__assign({},a),{filePath:e});(0,log_1.log)("Operation must have a pathparse to be indexed",{type:"error"})}else(0,log_1.log)("couldn't retreive filepath ".concat(e),{type:"error"});else(0,log_1.log)("Incorrect extension ".concat(t.ext),{type:"warning"})};exports.getValidatedOperationPathParse=getValidatedOperationPathParse;
//# sourceMappingURL=getValidatedOperationPathParse.js.map