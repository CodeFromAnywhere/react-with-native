{
  "createdAt": 1669055627251,
  "updatedAt": 1669055627251,
  "deletedAt": 0,
  "createdFirstAt": 1669055627251,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/typeToSchema.ts",
  "commentsInside": [],
  "rawText": " (type: Type) => getParamSchema(type)",
  "name": "typeToSchema",
  "slug": "type-to-schema",
  "parameters": [],
  "description": "calculates the schema of a type\n\nthis is great for types inside of parameters of variables that are not declared separately, however, it's probably not as good as vega's json schema generator... therefore, it would be great to always prefer vega's way above this.\n\nNB: this method throws sometimes if it can't find some stuff, so make sure to try/catch it.\n\nTODO: Test and improve this one",
  "returnType": {
    "rawType": "import(\"/Users/king/King/operations/tools/typescript/index-typescript/src/typeToSchema\").SimpleJsonSchema | undefined",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 0,
  "size": {
    "characters": 426,
    "lines": 7,
    "bytes": 426,
    "bytesPerCharacter": 1,
    "charactersPerLine": 61,
    "linesPerFile": 7,
    "numberOfFiles": 1
  },
  "id": "wcchektrsyjwwacytttvgmhw"
}