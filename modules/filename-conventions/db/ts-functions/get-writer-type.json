{
  "createdAt": 1666259755895,
  "updatedAt": 1666259755895,
  "deletedAt": 0,
  "createdFirstAt": 1666259755895,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/extensions.ts",
  "commentsInside": [],
  "rawText": " (extension: string | undefined): WriterType => {\n  if (!extension) return \"other\";\n  if (typescriptExtensions.includes(extension)) return \"typescript\";\n  if (markdownExtensions.includes(extension)) return \"markdown\";\n  return \"other\";\n}",
  "name": "getWriterType",
  "slug": "get-writer-type",
  "parameters": [
    {
      "name": "extension",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": false
    }
  ],
  "description": "Gets the writer type based on the extension",
  "returnType": {
    "rawType": "import(\"/Users/king/King/operations/tools/conventions/filename-conventions/src/extensions\").WriterType",
    "typeDefinition": {
      "optional": false,
      "enum": [
        "typescript",
        "markdown",
        "other"
      ],
      "x-enumNames": [
        "typescript",
        "markdown",
        "other"
      ],
      "type": "string"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "enum": [
        "typescript",
        "markdown",
        "other"
      ],
      "type": "string"
    }
  },
  "maxIndentationDepth": 1,
  "size": {
    "characters": 280,
    "lines": 6,
    "bytes": 280,
    "bytesPerCharacter": 1,
    "charactersPerLine": 47,
    "linesPerFile": 6,
    "numberOfFiles": 1
  },
  "id": "yeejvjotqosjnemrzwuvgqld"
}