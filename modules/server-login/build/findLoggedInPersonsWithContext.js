"use strict";var __awaiter=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{s(r.next(e))}catch(e){o(e)}}function u(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}s((r=r.apply(e,t||[])).next())}))},__generator=this&&this.__generator||function(e,t){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(i=a.trys,(i=i.length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.findLoggedinPersonsWithContext=void 0;var database_1=require("database"),findLoggedinPersonsWithContext=function(e){return __awaiter(void 0,void 0,void 0,(function(){var t,n;return __generator(this,(function(r){switch(r.label){case 0:return(t=e.device)?[4/*yield*/,database_1.db.get("Person")]:[2/*return*/,{isSuccessful:!1,message:"Couldn't find that device"}];case 1:return n=r.sent().filter((function(e){var n,r=e.authenticationMethods.filter((function(e){return!!t.authenticationMethods.find((function(t){return t.method===e.method&&t.handle===e.handle&&t.encryptedCredential===e.encryptedCredential}))})),i=(e.amountAuthenticationMethodsRequired||1)<=r.length,o=!!(null===(n=e.requiredAuthenticationMethods)||void 0===n?void 0:n.find((function(e){return!t.authenticationMethods.find((function(t){return t.method===e}))})));return!(!i||o)})),n?[2/*return*/,{isSuccessful:!0,persons:n}]:[2/*return*/,{isSuccessful:!1,message:"Couldn't login"}]}}))}))};
/**
 * This finds all persons you should be logged in as according to all your device's Authentication Methods.
 *
 * Does not update your device to add the found persons.
 */exports.findLoggedinPersonsWithContext=findLoggedinPersonsWithContext;
//# sourceMappingURL=findLoggedInPersonsWithContext.js.map