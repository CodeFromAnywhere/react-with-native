{
  "createdAt": 1670528496676,
  "updatedAt": 1670528496676,
  "deletedAt": 0,
  "createdFirstAt": 1670528496676,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "loginWithPasswordWithContext",
  "slug": "login-with-password-with-context",
  "operationRelativeTypescriptFilePath": "src/loginWithPasswordWithContext.ts",
  "type": {
    "rawType": "import(\"/Users/king/King/operations/tools/user-interfaces/api/function-server-types/build/ApiFunction\").ApiFunction",
    "typeDefinition": {
      "type": "object",
      "properties": {
        "isPublic": {
          "type": "boolean"
        },
        "allowedRoles": {
          "type": "array",
          "items": {
            "type": "string",
            "allOf": [
              {
                "transform": [
                  "trim"
                ]
              },
              {
                "minLength": 1
              }
            ]
          }
        }
      },
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [
        {
          "name": "isPublic",
          "required": false,
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "allowedRoles",
          "required": false,
          "schema": {
            "items": [
              {
                "schema": {
                  "type": "string"
                },
                "name": null
              }
            ],
            "type": "array"
          }
        }
      ],
      "type": "object"
    }
  },
  "value": "async (\n  functionContext: FunctionContext,\n  username: string,\n  password: string\n): Promise<{ isSuccessful: boolean; message?: string }> => {\n  // first we have to add the authenticationMethod to the device\n  const addAuthResult = await addDeviceAuthenticationMethodWithContext(\n    functionContext,\n    \"usernamePassword\",\n    username,\n    password\n  );\n\n  if (!addAuthResult.isSuccessful || !addAuthResult.authenticationMethod) {\n    return {\n      isSuccessful: addAuthResult.isSuccessful || false,\n      message: addAuthResult.message,\n    };\n  }\n\n  // now it should be possible to connect the auth method to the device\n  const loginResult = await loginWithContext(functionContext);\n  const { isSuccessful, message } = loginResult;\n  return {\n    isSuccessful,\n    message,\n  };\n}",
  "description": "Login with username and password\n\n1. Adds an username/password combo as auth-method to the device,\n2. Checks the persons to match the auth\n3. In case of match, moves the method to the person and connects the device",
  "id": "sklohzmivlhzlstnbcnbhoua"
}