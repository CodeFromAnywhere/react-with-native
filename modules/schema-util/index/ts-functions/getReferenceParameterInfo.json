[{"id":"fzRgLIHaXwExvStc","commentsInside":[],"rawText":" (\n  parameterName: string\n): ReferenceParameterInfo => {\n  const descriptorModelSplit = parameterName.split(\"_\");\n  const descriptor = parameterName.includes(\"_\")\n    ? descriptorModelSplit[0]\n    : undefined;\n  const rest = parameterName.includes(\"_\")\n    ? descriptorModelSplit[1]\n    : parameterName;\n\n  const wordArray = lowerCaseArray(rest);\n\n  const singleWord = wordArray.length === 1;\n\n  const parameterLastWord = wordArray.pop()!;\n\n  const isReferenceSingleParameter =\n    !singleWord && referenceParameterNames.includes(parameterLastWord);\n  const isReferenceMultipleParameter =\n    !singleWord && referencePluralParameterNames.includes(parameterLastWord);\n\n  const isReferenceParameter =\n    isReferenceSingleParameter || isReferenceMultipleParameter;\n\n  // NB: the last item has been removed now\n  const interfaceName = isReferenceParameter\n    ? pascalCase(wordArray.join(\"-\"))\n    : undefined;\n\n  const keyInModel = isReferenceParameter\n    ? makeSingular(parameterLastWord)\n    : undefined;\n\n  const referenceParameterInfo: ReferenceParameterInfo = {\n    descriptor,\n    keyInModel,\n    interfaceName,\n    isReferenceMultipleParameter,\n    isReferenceSingleParameter,\n    isReferenceParameter,\n  };\n\n  return referenceParameterInfo;\n}","name":"getReferenceParameterInfo","slug":"get-reference-parameter-info","parameters":[{"name":"parameterName","schema":{"type":"string"},"simplifiedSchema":{"type":"string"},"required":true}],"description":"Takes a parameterName and returns information about it according to the convention `{descriptorName}_{modelName}{referenceKey}` where:\n\n- descriptorName with the suffixing underscore is optional\n- referenceKey can be slug, index, or id (or there plural variants)\n- modelName should refer to a database model","returnType":{"rawType":"import(\"/Users/king/King/tools/typescript/schema-util/src/getReferenceParameterInfo\").ReferenceParameterInfo","typeDefinition":{"type":"object","properties":{"descriptor":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"keyInModel":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"interfaceName":{"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"isReferenceMultipleParameter":{"type":"boolean"},"isReferenceSingleParameter":{"type":"boolean"},"isReferenceParameter":{"type":"boolean"}},"required":["isReferenceMultipleParameter","isReferenceSingleParameter","isReferenceParameter"],"optional":false},"typeCoverage":0,"isArray":false,"isEnum":false,"isObject":true,"isPrimitive":false,"isEnumLiteral":false,"simplifiedSchema":{"properties":[{"name":"descriptor","required":false,"schema":{"type":"string"}},{"name":"keyInModel","required":false,"schema":{"type":"string"}},{"name":"interfaceName","required":false,"schema":{"type":"string"}},{"name":"isReferenceMultipleParameter","required":true,"schema":{"type":"boolean"}},{"name":"isReferenceSingleParameter","required":true,"schema":{"type":"boolean"}},{"name":"isReferenceParameter","required":true,"schema":{"type":"boolean"}}],"type":"object"}},"maxIndentationDepth":2,"relativePathFromProjectRoot":"/tools/typescript/schema-util/src/getReferenceParameterInfo.ts","srcFileId":"/getReferenceParameterInfo","operationFolderName":"schema-util","relativeFilePathFromSrc":"/getReferenceParameterInfo.ts","relativeOperationBasePathFromProjectRoot":"/tools/typescript/schema-util","operationName":"schema-util","size":{"characters":1557,"lines":49,"bytes":1557,"bytesPerCharacter":1,"charactersPerfLine":31.775510204081634,"linesPerFile":49,"numberOfFiles":1}}]