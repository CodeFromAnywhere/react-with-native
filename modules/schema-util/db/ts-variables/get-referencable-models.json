{
  "createdAt": 1667852854020,
  "updatedAt": 1667852854020,
  "deletedAt": 0,
  "createdFirstAt": 1667852854020,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "getReferencableModels",
  "slug": "get-referencable-models",
  "operationRelativeTypescriptFilePath": "src/getRecerencableModels.ts",
  "type": {
    "rawType": "(simplifiedSchema?: import(\"/Users/king/King/operations/tools/types/code-types/build/SimplifiedSchema\").SimplifiedSchema | undefined) => import(\"/Users/king/King/operations/tools/typescript/schema-util/src/getReferenceParameterInfo\").ReferenceParameterInfo[] | undefined",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(\n  simplifiedSchema?: SimplifiedSchema\n): ReferenceParameterInfo[] | undefined => {\n  if (simplifiedSchema?.type !== \"object\") return undefined;\n  const parameterNames = simplifiedSchema.properties?.map((x) => x.name);\n\n  const referenceParameterInfo = parameterNames\n    ?.map((parameterName) => {\n      const referenceParameterInfo = getReferenceParameterInfo(parameterName);\n\n      return referenceParameterInfo;\n    })\n    .filter((x) => x.isReferenceParameter);\n\n  return referenceParameterInfo;\n}",
  "description": "based on the object properties in SimplifiedSchema, returns the model names that can be referenced",
  "id": "crxmyjrjmrtxhhkmliaecjdp"
}