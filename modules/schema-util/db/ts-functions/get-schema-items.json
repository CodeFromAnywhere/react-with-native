{
  "createdAt": 1667852859272,
  "updatedAt": 1667852859272,
  "deletedAt": 0,
  "createdFirstAt": 1667852859272,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/schema-util.ts",
  "commentsInside": [],
  "rawText": " (schema: Schema | undefined) => {\n  const schemas = makeArray(schema?.items).map(getSchema).filter(notEmpty);\n  return schemas;\n}",
  "name": "getSchemaItems",
  "slug": "get-schema-items",
  "parameters": [
    {
      "name": "schema",
      "schema": {
        "$ref": "#/definitions/Schema",
        "description": "schema type interface we use in TsInterface\n\nNB: don't export because this would make this type exist twice."
      },
      "simplifiedSchema": {
        "fullComment": "schema type interface we use in TsInterface\n\nNB: don't export because this would make this type exist twice.\n\n\n\n",
        "nb": "don't export because this would make this type exist twice.",
        "properties": [
          {
            "name": "$id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$ref",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$comment",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$defs",
            "required": false,
            "schema": {
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "type",
            "required": false,
            "schema": {
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "enum",
            "required": false,
            "schema": {
              "items": [],
              "type": "array"
            }
          },
          {
            "name": "multipleOf",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maximum",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "exclusiveMaximum",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "minimum",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "exclusiveMinimum",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxLength",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "minLength",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pattern",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "items",
            "required": false,
            "schema": {
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "additionalItems",
            "required": false,
            "schema": {
              "fullComment": "JSON Schema v7",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "maxItems",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "minItems",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "uniqueItems",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contains",
            "required": false,
            "schema": {
              "circularRefName": "JSONSchema7",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "maxProperties",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "minProperties",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "required",
            "required": false,
            "schema": {
              "items": [
                {
                  "schema": {
                    "type": "string"
                  },
                  "name": null
                }
              ],
              "type": "array"
            }
          },
          {
            "name": "properties",
            "required": false,
            "schema": {
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "patternProperties",
            "required": false,
            "schema": {
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "additionalProperties",
            "required": false,
            "schema": {
              "fullComment": "JSON Schema v7",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "dependencies",
            "required": false,
            "schema": {
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "propertyNames",
            "required": false,
            "schema": {
              "fullComment": "JSON Schema v7",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "if",
            "required": false,
            "schema": {
              "fullComment": "JSON Schema v7",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "then",
            "required": false,
            "schema": {
              "fullComment": "JSON Schema v7",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "else",
            "required": false,
            "schema": {
              "fullComment": "JSON Schema v7",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "allOf",
            "required": false,
            "schema": {
              "items": [
                {
                  "schema": {
                    "fullComment": "JSON Schema v7",
                    "properties": [],
                    "type": "object"
                  },
                  "name": "JSONSchema7Definition"
                }
              ],
              "type": "array"
            }
          },
          {
            "name": "anyOf",
            "required": false,
            "schema": {
              "items": [
                {
                  "schema": {
                    "fullComment": "JSON Schema v7",
                    "properties": [],
                    "type": "object"
                  },
                  "name": "JSONSchema7Definition"
                }
              ],
              "type": "array"
            }
          },
          {
            "name": "oneOf",
            "required": false,
            "schema": {
              "items": [
                {
                  "schema": {
                    "fullComment": "JSON Schema v7",
                    "properties": [],
                    "type": "object"
                  },
                  "name": "JSONSchema7Definition"
                }
              ],
              "type": "array"
            }
          },
          {
            "name": "not",
            "required": false,
            "schema": {
              "fullComment": "JSON Schema v7",
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentMediaType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentEncoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "definitions",
            "required": false,
            "schema": {
              "properties": [],
              "type": "object"
            }
          },
          {
            "name": "title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "readOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "writeOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "type": "object"
      },
      "required": false
    }
  ],
  "description": "==========\n\nSince `JSONSchema7`'s property `items` is fairly hard to use, this function gets that property in an easier to use way.",
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 1,
  "size": {
    "characters": 261,
    "lines": 6,
    "bytes": 261,
    "bytesPerCharacter": 1,
    "charactersPerLine": 44,
    "linesPerFile": 6,
    "numberOfFiles": 1
  },
  "id": "fnddmukxbnevbmqluuchxkoy"
}