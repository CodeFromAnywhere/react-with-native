{
  "createdAt": 1669312129718,
  "updatedAt": 1669312129718,
  "deletedAt": 0,
  "createdFirstAt": 1669312129718,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/convention/mergeConfigs.ts",
  "commentsInside": [],
  "rawText": " <TModels extends AnyModelObject>(\n  modelName: Keys<TModels>,\n  dbConfig?: DbConfig<TModels>,\n  config?: CustomQueryConfig | GetQueryConfig<TModels[keyof TModels]>\n) => {\n  const hardcodedDefaultQueryConfig: QueryConfig = {\n    dbStorageMethod: \"jsonMultiple\",\n    // NB: this was hardcoded, but this is reducing performance a lot! Not sure why this was needed...\n    // manualProjectRoot: getProjectRoot(),\n  };\n\n  const modelConfig = dbConfig?.modelQueryConfig?.[modelName];\n\n  const mergedQueryConfig = mergeObjects<QueryConfig>(\n    hardcodedDefaultQueryConfig,\n    dbConfig?.defaultQueryConfig,\n    modelConfig,\n    config\n  )!;\n\n  // NB: dbStorageMethod is now always set\n  const merged = {\n    projectRoot: getProjectRoot(),\n    ...mergedQueryConfig,\n  } as MergedQueryConfig;\n  return merged;\n}",
  "name": "mergeConfigs",
  "slug": "merge-configs",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "import(\"/Users/king/King/operations/tools/purpose/codebase-introspection/database/fs-orm/src/types\").QueryConfig & { dbStorageMethod: any; manualProjectRoot: string; projectRoot: string; }",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 803,
    "lines": 27,
    "bytes": 803,
    "bytesPerCharacter": 1,
    "charactersPerLine": 30,
    "linesPerFile": 27,
    "numberOfFiles": 1
  },
  "id": "siuagbcramykmtmndwulmxyt"
}