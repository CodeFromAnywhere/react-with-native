{
  "createdAt": 1667634661583,
  "updatedAt": 1667634661583,
  "deletedAt": 0,
  "createdFirstAt": 1667634661583,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": false,
  "operationRelativeTypescriptFilePath": "src/tests/upsertKeyValueMarkdown.test.ts",
  "commentsInside": [],
  "rawText": " () => {\n  const absolutePath = path.join(__dirname, \"../..\", \"assets\", \"test.md\");\n  const dbFileLocation: DbFileLocation = {\n    absolutePath,\n    modelName: \"Test\",\n    operationName: \"fs-orm\",\n    projectRelativePath: absolutePath,\n    operationRelativePath: absolutePath,\n  };\n\n  alterKeyValueMarkdown(dbFileLocation, (storedData) => {\n    const realStoredData = storedData as Storing<KeyValueMarkdownModelType>[];\n\n    const slug = \"upserted-item\";\n\n    const ids = {\n      id: slug,\n      name: humanCase(slug),\n      slug,\n    };\n\n    const storingItem: Storing<KeyValueMarkdownModelType> = {\n      ...ids,\n      comment: \"yoyoyo\",\n      isHeaderCalculated: false,\n      value: \"you are amazing\",\n      categoryStackCalculated,\n    };\n\n    const result = upsertKeyValueMarkdown(realStoredData, storingItem);\n    const { newStoredData, ...rest } = result;\n    console.log({ rest });\n    return result;\n  });\n}",
  "name": "test",
  "slug": "test",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "void",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 916,
    "lines": 35,
    "bytes": 916,
    "bytesPerCharacter": 1,
    "charactersPerLine": 26,
    "linesPerFile": 35,
    "numberOfFiles": 1
  },
  "id": "otprtuhvqatfrivgdcfeiwfb"
}