{
  "createdAt": 1667634652946,
  "updatedAt": 1667634652946,
  "deletedAt": 0,
  "createdFirstAt": 1667634652946,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/convention/getLocationPattern.ts",
  "commentsInside": [],
  "rawText": " (\n  dbStorageMethod: DbStorageMethod,\n  modelName: string,\n  mergedConfig: MergedQueryConfig\n): string | undefined => {\n  const { operationRelativePath, projectRelativePath } = mergedConfig;\n\n  if (operationRelativePath) return operationRelativePath;\n  if (projectRelativePath) return projectRelativePath;\n\n  return getDefaultLocationPattern(dbStorageMethod, modelName);\n}",
  "name": "getLocationPattern",
  "slug": "get-location-pattern",
  "parameters": [
    {
      "name": "dbStorageMethod",
      "schema": {
        "$ref": "#/definitions/DbStorageMethod"
      },
      "simplifiedSchema": {
        "enum": [
          "jsonMultiple",
          "jsonSingle",
          "markdown",
          "keyValueMarkdown",
          "csv"
        ],
        "fullComment": "The following strategies are available to store the data.\n\n- **jsonMultiple *(default)***: stores the data in a json file which is an array of this data structure. This file will be located in `db/[pluralized-kebab-case-model-name].json`\n\n- **jsonSingle**: stores the data in a json file which is of this data structure (single object) These files will be located in `db/[pluralized-kebab-case-model-name]/[instance-slug-or-id].json`\n\n- **markdown**: stores the data in a markdown file. Takes \"markdown\" parameter as the main markdown. The other parameters are stored as front-matter. This these files will be located in `db/[pluralized-kebab-case-model-name]/[instance-slug-or-id].md`\n\n- **keyValueMarkdown**: stores the data in key value markdown format. This file will be located in `db/[pluralized-kebab-case-model-name].md`\n\n- **csv**: stores the data in a csv file (only possible for flat object datastructures). This file will be located in `db/[pluralized-kebab-case-model-name].csv`\n\n## Definitions:\n\n- [pluralized-kebab-case-model-name]: e.g. `StudentUser` becomes `student-users`\n- [instance-slug-or-id]: For all models with a slug parameter, the filename will be that slug of that instance. Otherwise, `id` will be used",
        "type": "string"
      },
      "required": true
    },
    {
      "name": "modelName",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "mergedConfig",
      "schema": {
        "$ref": "#/definitions/MergedQueryConfig"
      },
      "required": true
    }
  ],
  "description": "Returns the pattern or an exact relative path that the file(s) should be stored at.\n\nIf a pattern contains a star at the place of the filename, it will search the folder recursively for all files with the extension in the pattern.\n\nReturning relative path has no preceding slash",
  "returnType": {
    "rawType": "string | undefined",
    "typeDefinition": {
      "optional": true,
      "type": "string",
      "allOf": [
        {
          "transform": [
            "trim"
          ]
        },
        {
          "minLength": 1
        }
      ]
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "type": "string"
    }
  },
  "maxIndentationDepth": 1,
  "size": {
    "characters": 651,
    "lines": 16,
    "bytes": 651,
    "bytesPerCharacter": 1,
    "charactersPerLine": 41,
    "linesPerFile": 16,
    "numberOfFiles": 1
  },
  "id": "femqqizzbxzxoqtegbegoqlr"
}