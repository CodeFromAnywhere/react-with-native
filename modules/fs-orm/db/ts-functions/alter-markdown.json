{
  "createdAt": 1667634640236,
  "updatedAt": 1667634640236,
  "deletedAt": 0,
  "createdFirstAt": 1667634640236,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/alter/alter-functions.ts",
  "commentsInside": [],
  "rawText": " async (dbFileLocation, alterFn) => {\n  const { absolutePath } = dbFileLocation;\n  const markdownParse = await readMarkdownFile(absolutePath);\n  const isNewFile = !markdownParse;\n  const markdownModelItem = markdownParseToMarkdownModelType(markdownParse);\n\n  const storedData = markdownModelItem ? [markdownModelItem] : [];\n  const { newStoredData, ...queryResult } = alterFn(storedData);\n  const finalItem: Storing<MarkdownModelType> = newStoredData[0];\n  const markdownString = markdownModelTypeToMarkdownString(finalItem);\n  const isSuccesful = await writeStringToFile(absolutePath, markdownString);\n\n  if (!isSuccesful) return { isSuccesful, message: \"Could not write to file\" };\n  return {\n    isNewFile,\n    isSuccesful,\n    ...queryResult,\n  };\n}",
  "name": "alterMarkdown",
  "slug": "alter-markdown",
  "parameters": [],
  "description": "Alters a markdown file",
  "returnType": {
    "rawType": "unknown",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 775,
    "lines": 19,
    "bytes": 775,
    "bytesPerCharacter": 1,
    "charactersPerLine": 41,
    "linesPerFile": 19,
    "numberOfFiles": 1
  },
  "id": "gucaovrbeimhywlbcbvxkqds"
}