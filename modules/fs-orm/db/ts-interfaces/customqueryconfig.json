{
  "createdAt": 1669312137701,
  "updatedAt": 1669312137701,
  "deletedAt": 0,
  "createdFirstAt": 1669312137701,
  "id": "customqueryconfig",
  "name": "CustomQueryConfig",
  "slug": "customqueryconfig",
  "operationRelativeTypescriptFilePath": "src/types.ts",
  "hasGeneric": false,
  "isExported": true,
  "rawText": "\n\n/**\n * NB: the dbStorageMethod cannot be specified here because this is a static configuration per db-model and cannot be specified on a per-query basis.\n *\n * Also you can't specify projectRelativePath and operationRelativePath. It should not be needed, you should specify the db storage locations in the createDb config.\n */\nexport type CustomQueryConfig = {\n  /**\n   * if specified, this will be used as the root path to find your data in\n   *\n   * if not specified, uses the db folder in your project root and in any operation\n   *\n   * NB: If you set this, the model interfaces of your current project are applied on another project! Make sure they are the same there before you run such queries.\n   */\n  manualProjectRoot?: string;\n\n  /*\n   - if not specified or specified as `undefined` or `null`, only the root db folder will be searched\n   - if an operation is specified, only that operation will be searched\n   - if `*` is specified, all operations will be searched as well as the root db. This is discouraged, as it's quite slow\n   */\n  operationName?: string | null;\n};",
  "extensions": [],
  "isOperationIndex": false,
  "description": "NB: the dbStorageMethod cannot be specified here because this is a static configuration per db-model and cannot be specified on a per-query basis.\n\nAlso you can't specify projectRelativePath and operationRelativePath. It should not be needed, you should specify the db storage locations in the createDb config.",
  "isDbModel": false,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "object",
      "properties": {
        "manualProjectRoot": {
          "type": "string",
          "description": "if specified, this will be used as the root path to find your data in\n\nif not specified, uses the db folder in your project root and in any operation\n\nNB: If you set this, the model interfaces of your current project are applied on another project! Make sure they are the same there before you run such queries."
        },
        "operationName": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false,
      "description": "NB: the dbStorageMethod cannot be specified here because this is a static configuration per db-model and cannot be specified on a per-query basis.\n\nAlso you can't specify projectRelativePath and operationRelativePath. It should not be needed, you should specify the db storage locations in the createDb config."
    },
    "simplifiedSchema": {
      "fullComment": "NB: the dbStorageMethod cannot be specified here because this is a static configuration per db-model and cannot be specified on a per-query basis.\n\nAlso you can't specify projectRelativePath and operationRelativePath. It should not be needed, you should specify the db storage locations in the createDb config.",
      "nb": "the dbStorageMethod cannot be specified here because this is a static configuration per db-model and cannot be specified on a per-query basis.",
      "properties": [
        {
          "name": "manualProjectRoot",
          "required": false,
          "schema": {
            "fullComment": "if specified, this will be used as the root path to find your data in\n\nif not specified, uses the db folder in your project root and in any operation\n\nNB: If you set this, the model interfaces of your current project are applied on another project! Make sure they are the same there before you run such queries.",
            "nb": "If you set this, the model interfaces of your current project are applied on another project! Make sure they are the same there before you run such queries.",
            "type": "string"
          }
        },
        {
          "name": "operationName",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      ],
      "type": "object"
    },
    "typeCoverage": 0,
    "rawType": "CustomQueryConfig",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}