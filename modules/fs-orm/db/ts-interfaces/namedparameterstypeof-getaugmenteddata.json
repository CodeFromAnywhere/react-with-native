{
  "createdAt": 1667634665871,
  "updatedAt": 1667634665871,
  "deletedAt": 0,
  "createdFirstAt": 1667634665871,
  "id": "namedparameterstypeof-getaugmenteddata",
  "name": "NamedParameters<typeof getAugmentedData>",
  "slug": "namedparameterstypeof-getaugmenteddata",
  "operationRelativeTypescriptFilePath": "src/util/getAugmentedData.ts",
  "hasGeneric": false,
  "isExported": false,
  "isOperationIndex": false,
  "description": "",
  "isDbModel": false,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "object",
      "properties": {
        "dbFileLocation": {
          "$ref": "#/definitions/DbFileLocation"
        },
        "dbStorageMethod": {
          "$ref": "#/definitions/DbStorageMethod"
        }
      },
      "required": [
        "dbFileLocation",
        "dbStorageMethod"
      ],
      "additionalProperties": false
    },
    "simplifiedSchema": {
      "properties": [
        {
          "name": "dbFileLocation",
          "required": true,
          "schema": {
            "fullComment": "Object used to hand over all information about the location of a db-file in a structured way",
            "properties": [
              {
                "name": "absolutePath",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "modelName",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "operationName",
                "required": true,
                "schema": {
                  "fullComment": "name of operation the model belongs to\n\n- calculated value (not stored in database)\n- can be `null` or an actual operationName that it was saved at\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "null"
                }
              },
              {
                "name": "projectRelativePath",
                "required": true,
                "schema": {
                  "fullComment": "path to dbfile\n\n- calculated value (not stored in database)\n- relatively from the project (without slash at start)\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              },
              {
                "name": "operationRelativePath",
                "required": false,
                "schema": {
                  "fullComment": "path to db file\n\n- relatively from the operation root folder (without slash at start)\n- calculated value (not stored in database)\n- can be `undefined` if the db file does not belong to an operation\n- can be `undefined` when you are creating an item, because then it can be set for you",
                  "type": "string"
                }
              }
            ],
            "type": "object"
          }
        },
        {
          "name": "dbStorageMethod",
          "required": true,
          "schema": {
            "enum": [
              "jsonMultiple",
              "jsonSingle",
              "markdown",
              "keyValueMarkdown",
              "csv"
            ],
            "fullComment": "The following strategies are available to store the data.\n\n- **jsonMultiple *(default)***: stores the data in a json file which is an array of this data structure. This file will be located in `db/[pluralized-kebab-case-model-name].json`\n\n- **jsonSingle**: stores the data in a json file which is of this data structure (single object) These files will be located in `db/[pluralized-kebab-case-model-name]/[instance-slug-or-id].json`\n\n- **markdown**: stores the data in a markdown file. Takes \"markdown\" parameter as the main markdown. The other parameters are stored as front-matter. This these files will be located in `db/[pluralized-kebab-case-model-name]/[instance-slug-or-id].md`\n\n- **keyValueMarkdown**: stores the data in key value markdown format. This file will be located in `db/[pluralized-kebab-case-model-name].md`\n\n- **csv**: stores the data in a csv file (only possible for flat object datastructures). This file will be located in `db/[pluralized-kebab-case-model-name].csv`\n\n## Definitions:\n\n- [pluralized-kebab-case-model-name]: e.g. `StudentUser` becomes `student-users`\n- [instance-slug-or-id]: For all models with a slug parameter, the filename will be that slug of that instance. Otherwise, `id` will be used",
            "type": "string"
          }
        }
      ],
      "type": "object"
    },
    "typeCoverage": 0,
    "rawType": "NamedParameters<typeof getAugmentedData>",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}