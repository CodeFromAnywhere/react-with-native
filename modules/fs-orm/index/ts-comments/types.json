[{"id":"ehthCkaMsjZLjFOC","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/control-fs/fs-orm/src/types.ts","srcFileId":"/types","operationFolderName":"fs-orm","relativeFilePathFromSrc":"/types.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/fs-orm","operationName":"fs-orm","comment":"Remove combines get and set: after getting it filters the results with a where, and then sets the filtered results as the new data","rawStatement":"export type DbRemove<TModels> = <TModelName extends Keys<TModels>>(\n  model: TModelName,\n  where: (content: TModels[TModelName]) => boolean,\n  config?: GetConfig\n) => Promise<{ success: boolean; amountRemoved?: number; message?: string }>;","parameters":{},"types":[],"firstLine":5,"lastLine":7},{"id":"ehthCkaMsjZLjFOC","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/control-fs/fs-orm/src/types.ts","srcFileId":"/types","operationFolderName":"fs-orm","relativeFilePathFromSrc":"/types.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/fs-orm","operationName":"fs-orm","comment":"Finds all files that adhere to the convention and combines them into an array of items of this model","rawStatement":"export type DbGet<TModels> = <TModelName extends Keys<TModels>>(\n  model: TModelName,\n  config?: GetConfig\n) => Promise<TModels[TModelName][]>;","parameters":{},"types":[],"firstLine":54,"lastLine":56},{"id":"ehthCkaMsjZLjFOC","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/control-fs/fs-orm/src/types.ts","srcFileId":"/types","operationFolderName":"fs-orm","relativeFilePathFromSrc":"/types.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/fs-orm","operationName":"fs-orm","comment":"","rawStatement":"export type DbSet<TModels> = <TModelName extends Keys<TModels>>(\n  model: TModelName,\n  data: TModels[TModelName][]\n) => Promise<{ success: boolean; message?: string }>;","parameters":{},"types":[],"firstLine":62,"lastLine":64},{"id":"ehthCkaMsjZLjFOC","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/control-fs/fs-orm/src/types.ts","srcFileId":"/types","operationFolderName":"fs-orm","relativeFilePathFromSrc":"/types.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/fs-orm","operationName":"fs-orm","comment":"gets the models from anywhere, then pushes, then sets","rawStatement":"export type DbPush<TModels> = <TModelName extends Keys<TModels>>(\n  model: TModelName,\n  data: TModels[TModelName]\n) => Promise<{ success: boolean; overwrite?: boolean; message?: string }>;","parameters":{},"types":[],"firstLine":70,"lastLine":72}]