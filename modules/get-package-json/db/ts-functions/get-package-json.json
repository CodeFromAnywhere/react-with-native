{
  "createdAt": 1668331889920,
  "updatedAt": 1668331889920,
  "deletedAt": 0,
  "createdFirstAt": 1668331889920,
  "publicAuthorization": [
    "read",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getPackageJson.ts",
  "commentsInside": [],
  "rawText": " async (config: {\n  operationFolderPath: string;\n}): Promise<Operation | null> => {\n  const { operationFolderPath } = config;\n  const packageJsonPath = path.join(operationFolderPath, \"package.json\");\n  const packageJson = readJsonFile<Operation>(packageJsonPath);\n  return packageJson;\n}",
  "name": "getPackageJson",
  "slug": "get-package-json",
  "parameters": [
    {
      "name": "config",
      "schema": {
        "type": "object",
        "properties": {
          "operationFolderPath": {
            "type": "string"
          }
        },
        "required": [
          "operationFolderPath"
        ],
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [
          {
            "name": "operationFolderPath",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "",
  "returnType": {
    "rawType": "Promise<import(\"/Users/king/King/operations/tools/types/code-types/build/Operation\").Operation | null>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 1,
  "size": {
    "characters": 287,
    "lines": 8,
    "bytes": 287,
    "bytesPerCharacter": 1,
    "charactersPerLine": 36,
    "linesPerFile": 8,
    "numberOfFiles": 1
  },
  "id": "mqaajejudabrmygjvnhhotma"
}