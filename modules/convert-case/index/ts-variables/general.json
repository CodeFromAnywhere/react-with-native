[{"id":"GJrlRdFufoMgjYPT","comments":[],"name":"nonCasingDelimiters","slug":"non-casing-delimiters","value":"/[\\s,._-]+/","type":{"rawType":"{}","typeDefinition":{"type":"object","properties":{},"optional":false},"typeCoverage":0,"isArray":false,"isEnum":false,"isObject":true,"isPrimitive":false,"isEnumLiteral":false,"simplifiedSchema":{"properties":[],"type":"object"}},"classification":"const","relativePathFromProjectRoot":"/tools/util/convert-case/src/general.ts","srcFileId":"/general","operationFolderName":"convert-case","relativeFilePathFromSrc":"/general.ts","relativeOperationBasePathFromProjectRoot":"/tools/util/convert-case","operationName":"convert-case"},{"id":"TxNtGotBygxFseZh","comments":[],"name":"test","slug":"test","value":"makeTest(\n  () => {\n    const testCases = [\n      \"Handige harry\",\n      \"handigeHarry\",\n      \"HandigeHarry\",\n      \"handige-harry\",\n      \"handige_harry\",\n      \"HANDIGE_HARRY\",\n    ];\n\n    const results = testCases.map((word) => {\n      return {\n        word,\n        camel: camelCase(word),\n        snake: snakeCase(word),\n        kebab: kebabCase(word),\n        pascal: pascalCase(word),\n        capital: capitalCase(word),\n        human: humanCase(word),\n      };\n    });\n\n    return results;\n  },\n  (result) =>\n    JSON.stringify(result) ===\n    JSON.stringify([\n      {\n        word: \"Handige harry\",\n        camel: \"handigeHarry\",\n        snake: \"handige_harry\",\n        kebab: \"handige-harry\",\n        pascal: \"HandigeHarry\",\n        capital: \"HANDIGE_HARRY\",\n        human: \"Handige harry\",\n      },\n      {\n        word: \"handigeHarry\",\n        camel: \"handigeHarry\",\n        snake: \"handige_harry\",\n        kebab: \"handige-harry\",\n        pascal: \"HandigeHarry\",\n        capital: \"HANDIGE_HARRY\",\n        human: \"Handige harry\",\n      },\n      {\n        word: \"HandigeHarry\",\n        camel: \"handigeHarry\",\n        snake: \"handige_harry\",\n        kebab: \"handige-harry\",\n        pascal: \"HandigeHarry\",\n        capital: \"HANDIGE_HARRY\",\n        human: \"Handige harry\",\n      },\n      {\n        word: \"handige-harry\",\n        camel: \"handigeHarry\",\n        snake: \"handige_harry\",\n        kebab: \"handige-harry\",\n        pascal: \"HandigeHarry\",\n        capital: \"HANDIGE_HARRY\",\n        human: \"Handige harry\",\n      },\n      {\n        word: \"handige_harry\",\n        camel: \"handigeHarry\",\n        snake: \"handige_harry\",\n        kebab: \"handige-harry\",\n        pascal: \"HandigeHarry\",\n        capital: \"HANDIGE_HARRY\",\n        human: \"Handige harry\",\n      },\n      {\n        word: \"HANDIGE_HARRY\",\n        camel: \"handigeHARRY\",\n        snake: \"handige_harry\",\n        kebab: \"handige-harry\",\n        pascal: \"HANDIGEHARRY\",\n        capital: \"HANDIGE_HARRY\",\n        human: \"HANDIGE harry\",\n      },\n    ])\n)","type":{"rawType":"() => Promise<boolean>","typeDefinition":{"type":"object","properties":{},"optional":false},"typeCoverage":0,"isArray":false,"isEnum":false,"isObject":true,"isPrimitive":false,"isEnumLiteral":false,"simplifiedSchema":{"properties":[],"type":"object"}},"classification":"const","relativePathFromProjectRoot":"/tools/util/convert-case/src/general.ts","srcFileId":"/general","operationFolderName":"convert-case","relativeFilePathFromSrc":"/general.ts","relativeOperationBasePathFromProjectRoot":"/tools/util/convert-case","operationName":"convert-case"}]