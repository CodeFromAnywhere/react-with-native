{
  "createdAt": 1666264528255,
  "updatedAt": 1666264528255,
  "deletedAt": 0,
  "createdFirstAt": 1666264528255,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "convertCase",
  "slug": "convert-case",
  "operationRelativeTypescriptFilePath": "src/general.ts",
  "type": {
    "rawType": "(text: string, target: import(\"/Users/king/King/operations/tools/util/convert-case/src/general\").Casing) => any",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(\n  /**\n   * NB: texts of more than a sentence are not supported\n   */\n  text: string,\n  target: Casing\n) =>\n  text\n    .split(nonCasingDelimiters)\n    .reduce(\n      (all, word) => all.concat(splitCasingDelimiters(word)),\n      [] as string[]\n    )\n    .map((word, index) => convertToTargetCasing(word, index, target))\n    .join(getDelimiter(target))",
  "description": "",
  "id": "nfyucssrnvwurwzevwtznbgv"
}