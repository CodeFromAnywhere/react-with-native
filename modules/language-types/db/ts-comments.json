[
  {
    "createdAt": 1666331232104,
    "updatedAt": 1666331232104,
    "deletedAt": 0,
    "createdFirstAt": 1666331232104,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/WordMatrix.ts",
    "comment": "Mapped Object for performance reasons",
    "rawStatement": "export interface MappedWordMatrix extends MappedObject<WordMatrix> {\n  [baseLanguageWord: string]: WordMatrix;\n}",
    "parameters": {},
    "types": [],
    "firstLine": 44,
    "lastLine": 44,
    "id": "gyoqkrhfvzbkmmeuhymwvsyl"
  },
  {
    "createdAt": 1666331232105,
    "updatedAt": 1666331232105,
    "deletedAt": 0,
    "createdFirstAt": 1666331232105,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/WordMatrix.ts",
    "comment": "Different ways to categorise a word semantically",
    "rawStatement": "export interface WordCategory extends SlugModelType {\n  description: Markdown;\n}",
    "parameters": {},
    "types": [],
    "firstLine": 49,
    "lastLine": 51,
    "id": "nbkpwsnwrpsoxnxffsydecpu"
  },
  {
    "createdAt": 1666331232105,
    "updatedAt": 1666331232105,
    "deletedAt": 0,
    "createdFirstAt": 1666331232105,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/WordMatrix.ts",
    "comment": "",
    "rawStatement": "export type WordPriority = \"critical\" | \"high\" | \"medium\" | \"low\";",
    "parameters": {},
    "types": [],
    "firstLine": 56,
    "lastLine": 58,
    "id": "zmurcvmxrpoyzpaumsqvvyhh"
  },
  {
    "createdAt": 1666331232105,
    "updatedAt": 1666331232105,
    "deletedAt": 0,
    "createdFirstAt": 1666331232105,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/WordMatrix.ts",
    "comment": "In linguistics, conjugation is the creation of derived forms of a verb from its principal parts by inflection\n\nBesides this, there are also other ways to alter a word to add/change meaning, this should be summed up using this enum.",
    "rawStatement": "export type WordConjucation = \"plural\" | \"female\" | \"male\" | \"past\" | \"future\";",
    "parameters": {},
    "types": [],
    "firstLine": 62,
    "lastLine": 66,
    "id": "mavrqsvkxjvqetlfiuqchzna"
  },
  {
    "createdAt": 1666331232105,
    "updatedAt": 1666331232105,
    "deletedAt": 0,
    "createdFirstAt": 1666331232105,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/WordMatrix.ts",
    "comment": "\nWordMatrix is a matrix that contains as much information about a word as possible in as many languages as possible. Easy to use for 1:1 translation\n\nBesides the keys that are language-agnostic, for every language `key` (See `Language`), there are multiple keys that are connected to that specific language\n\n- [key]: the latin standard written representation for this word\n- [key]Alternative: the alternative written representation for this word, if any (if the language commonly uses a different script, this can be noted here)\n- [key]Audio: a short audio recording for pronunciation of this word\n- [key]Phonetic: a phonetic representation of pronunciation of this word in this language\n- [key]Examples: An array of examples of usage of this word (can contain both a text and audio)\n\n@see Language",
    "rawStatement": "export type WordMatrix = WordInfoObject & {\n  /**\n   * unique name of the word in english (or another one if `language` is specified). Can usually be the word itself...\n   */\n  name: string;\n  slug: Slug;\n  /**\n   * Definition of the word (in english)\n   */\n  description: Markdown;\n  descriptionAudio: BackendAsset;\n\n  image?: BackendAsset;\n\n  wordCategorySlugs: Slug[];\n  wordCategorys: WordCategory[];\n\n  type?: WordType;\n\n  /**\n   * Priority level is how important this word is to communicate...\n   *\n   *\n   * TITLE: Priority level (defaults to low)\n   *\n   * critical: toki pona word (top 150)\n   * high: top 500\n   * medium: top 2500\n   * low (default): less occurence\n   */\n  priorityLevel?: WordPriority;\n\n  /**\n   * TITLE: Rank (How common this word is in the english language?)\n   */\n  rank?: number;\n\n  /**\n   * amount used across the whole monorepo\n   */\n  usageCountCalculated?: number;\n\n  /**\n   * All ways the word is conjucated from the root word\n   */\n  conjucations?: WordConjucation[];\n\n  /**\n   * SECTION: Relations to other words...\n   *\n   * TITLE: Root word\n   *\n   * DESCRIPTION: If the word is a certain conjugation of a root word, this should be a reference to the root word\n   */\n  root_wordMatrixSlug?: Slug;\n  root_word?: WordMatrix;\n\n  /**\n   * TITLE: Common Synonym\n   *\n   * DESCRIPTION: f the word is a synonym to a more common word, this should be a reference to the more common synonym. This is a 1:1 synonym only\n   */\n  common_wordMatrixSlug?: Slug;\n  common_wordMatrix?: WordMatrix;\n\n  /**\n   * TITLE: Opposite word\n   *\n   * DESCRIPTION: If there's another word that's the complete opposite of this one, you can declare it here\n   */\n  opposite_wordMatrixSlug?: Slug;\n  opposite_wordMatrix?: WordMatrix;\n\n  /**\n   * TITLE: Toki-Pona words\n   *\n   * DESCRIPTION: The closest way to express this word in toki pona terms.\n   *\n   * NB: should be an array (order is important here) of slugs of words containing the \"tk\" property. This needs to be a reference so we can also give information about the individual toki pona words\n   */\n  tokiPona_wordMatrixSlugs?: Slug[];\n  tokiPona_wordMatrixs?: WordMatrix[];\n\n  /**\n   * TITLE: Emoji Words\n   *\n   * The closest way to express this word in emoji terms should be an array (order is important here) of slugs of words containing \"emoji\" property\n   *\n   * This needs to be a reference so we can also give information about the individual emojis\n   */\n  emoji_wordMatrixSlugs?: Slug[];\n  emoji_wordMatrixs?: WordMatrix[];\n\n  /**\n   * SECTION: Translations\n   *\n   * DESCRIPTION: Single emoji describing this word 1:1 (if it are more emojis of multiple words, please use the reference instead)\n   */\n  emoji?: string;\n} & SlugModelType;",
    "parameters": {
      "dbStorageMethod": "jsonMultiple"
    },
    "types": [],
    "firstLine": 73,
    "lastLine": 89,
    "id": "tpniggmyqondoqljkticdmdi"
  },
  {
    "createdAt": 1666331232105,
    "updatedAt": 1666331232105,
    "deletedAt": 0,
    "createdFirstAt": 1666331232105,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/WordMatrix.ts",
    "comment": "DEPRECATED: to be migrated to `WordMatrix`",
    "rawStatement": "export interface TokiPonaMatrix extends DefaultModelType {\n  category: string;\n  type: string;\n  tok?: string;\n  nl?: string;\n  en?: string;\n  np?: string;\n  \"pt-br\"?: string;\n  em: string;\n}",
    "parameters": {},
    "types": [],
    "firstLine": 191,
    "lastLine": 193,
    "id": "qmlitlkuwblnukhxkwakepjd"
  }
]