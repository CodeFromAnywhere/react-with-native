{
  "createdAt": 1666331231004,
  "updatedAt": 1666331231004,
  "deletedAt": 0,
  "createdFirstAt": 1666331231004,
  "id": "wordconjucation",
  "name": "WordConjucation",
  "slug": "wordconjucation",
  "operationRelativeTypescriptFilePath": "src/WordMatrix.ts",
  "hasGeneric": false,
  "isExported": true,
  "rawText": "\n/**\n * In linguistics, conjugation is the creation of derived forms of a verb from its principal parts by inflection\n *\n * Besides this, there are also other ways to alter a word to add/change meaning, this should be summed up using this enum.\n */\nexport type WordConjucation = \"plural\" | \"female\" | \"male\" | \"past\" | \"future\";",
  "extensions": [],
  "isOperationIndex": false,
  "description": "In linguistics, conjugation is the creation of derived forms of a verb from its principal parts by inflection\n\nBesides this, there are also other ways to alter a word to add/change meaning, this should be summed up using this enum.",
  "isDbModel": false,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "string",
      "enum": [
        "plural",
        "female",
        "male",
        "past",
        "future"
      ],
      "description": "In linguistics, conjugation is the creation of derived forms of a verb from its principal parts by inflection\n\nBesides this, there are also other ways to alter a word to add/change meaning, this should be summed up using this enum."
    },
    "simplifiedSchema": {
      "enum": [
        "plural",
        "female",
        "male",
        "past",
        "future"
      ],
      "fullComment": "In linguistics, conjugation is the creation of derived forms of a verb from its principal parts by inflection\n\nBesides this, there are also other ways to alter a word to add/change meaning, this should be summed up using this enum.",
      "type": "string"
    },
    "typeCoverage": 0,
    "rawType": "WordConjucation",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}