[
  {
    "createdAt": 1668334466157,
    "updatedAt": 1668334466157,
    "deletedAt": 0,
    "createdFirstAt": 1668334466157,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/sendMail.ts",
    "comment": "From is optional for sending an email because it will be filled in by the OsConfig default.",
    "rawStatement": "export type MailDataFromOptional = Omit<MailDataRequired, \"from\"> & {\n  /**\n   * If you don't fill this in, the `OsConfig` default will be used.\n   */\n  from?: string;\n};",
    "parameters": {},
    "types": [],
    "firstLine": 9,
    "lastLine": 11,
    "id": "dkvgehvitswuqtqhswvoiyeq"
  },
  {
    "createdAt": 1668334466157,
    "updatedAt": 1668334466157,
    "deletedAt": 0,
    "createdFirstAt": 1668334466157,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/sendMail.ts",
    "comment": "Sends email(s) using sendgrid\n\nEnsure your OS config is there",
    "rawStatement": "export const sendMail = async (\n  mailData: MailDataFromOptional | MailDataFromOptional[],\n  isMultiple?: boolean\n): Promise<ClientResponse | undefined> => {\n  const persona = await getPrimaryPersona();\n\n  if (!persona) {\n    return;\n  }\n\n  const { sendgridApiKey, sendgridFromEmail } = persona;\n\n  if (!sendgridApiKey) {\n    console.log(\"Please setup your Sendgrid credentials first\");\n    return;\n  }\n\n  const realMailData: MailDataRequired[] = makeArray(mailData)\n    .map((data) => {\n      const { from: dataFrom, ...otherData } = data;\n\n      const from = dataFrom || sendgridFromEmail;\n\n      if (!from) {\n        console.log(\n          \"From is missing in email and also not present in OsConfig. Please provide at least one of those. Not sending email!\"\n        );\n        return;\n      }\n\n      // NB: it's a bit ugly, but doesn't work without typecast, and i'm pretty sure the type is correct...\n      const mailData = { from, ...otherData } as MailDataRequired;\n\n      return mailData;\n    })\n    .filter(notEmpty);\n\n  sgMail.setApiKey(sendgridApiKey);\n\n  const result = await sgMail\n    .send(realMailData, isMultiple)\n    .then(([result]) => {\n      return result;\n    })\n    .catch((error: ResponseError) => {\n      console.log(\"Error sending email\", { error });\n\n      return undefined;\n    });\n\n  return result;\n};",
    "parameters": {},
    "types": [],
    "firstLine": 18,
    "lastLine": 22,
    "id": "frekwkjxseeptnwkgzagqeas"
  }
]