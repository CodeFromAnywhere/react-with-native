{
  "createdAt": 1666423007798,
  "updatedAt": 1666423007798,
  "deletedAt": 0,
  "createdFirstAt": 1666423007798,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "name": "isBinary",
  "slug": "is-binary",
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/general.ts",
  "commentsInside": [],
  "description": "/**\n * Determine if the filename and/or buffer is binary.\n * Determined by extension checks first (if filename is available), otherwise if unknown extension or no filename, will perform a slower buffer encoding detection.\n * This order is done, as extension checks are quicker, and also because encoding checks cannot guarantee accuracy for chars between utf8 and utf16.\n * The extension checks are performed using the resources https://github.com/bevry/textextensions and https://github.com/bevry/binaryextensions\n * @param filename The filename for the file/buffer if available\n * @param buffer The buffer for the file if available\n * @returns Will be `null` if neither `filename` nor `buffer` were provided. Otherwise will be a boolean value with the detection result.\n */",
  "parameters": [
    {
      "name": "filename",
      "schema": {
        "type": [
          "string",
          "null"
        ],
        "description": "The filename for the file/buffer if available"
      },
      "simplifiedSchema": {
        "fullComment": "The filename for the file/buffer if available",
        "type": "string"
      },
      "required": false
    },
    {
      "name": "buffer",
      "schema": {
        "anyOf": [
          {
            "$ref": "#/definitions/global.Buffer"
          },
          {
            "type": "null"
          }
        ],
        "description": "The buffer for the file if available"
      },
      "simplifiedSchema": {
        "fullComment": "The buffer for the file if available",
        "properties": [],
        "type": "object"
      },
      "required": false
    }
  ],
  "returnType": {
    "rawType": "boolean | null",
    "typeDefinition": {
      "optional": true,
      "type": "boolean | null"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "size": {
    "characters": 1721,
    "lines": 24,
    "bytes": 1721,
    "bytesPerCharacter": 1,
    "charactersPerLine": 72,
    "linesPerFile": 24,
    "numberOfFiles": 1
  },
  "rawText": "\n\n/**\n * Determine if the filename and/or buffer is binary.\n * Determined by extension checks first (if filename is available), otherwise if unknown extension or no filename, will perform a slower buffer encoding detection.\n * This order is done, as extension checks are quicker, and also because encoding checks cannot guarantee accuracy for chars between utf8 and utf16.\n * The extension checks are performed using the resources https://github.com/bevry/textextensions and https://github.com/bevry/binaryextensions\n * @param filename The filename for the file/buffer if available\n * @param buffer The buffer for the file if available\n * @returns Will be `null` if neither `filename` nor `buffer` were provided. Otherwise will be a boolean value with the detection result.\n */\nexport function isBinary(filename?: string | null, buffer?: Buffer | null) {\n  const text = isText(filename, buffer);\n  if (text == null) return null;\n  return !text;\n}",
  "maxIndentationDepth": 1,
  "id": "npbaehctnrijyyengxdkhhhe"
}