{
  "createdAt": 1666423007799,
  "updatedAt": 1666423007799,
  "deletedAt": 0,
  "createdFirstAt": 1666423007799,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "name": "getChunkEnd",
  "slug": "get-chunk-end",
  "isExported": false,
  "operationRelativeTypescriptFilePath": "src/general.ts",
  "commentsInside": [],
  "description": "",
  "parameters": [
    {
      "name": "buf",
      "schema": {
        "$ref": "#/definitions/global.Buffer"
      },
      "required": true
    },
    {
      "name": "chunkEnd",
      "schema": {
        "type": "number"
      },
      "simplifiedSchema": {
        "type": "number"
      },
      "required": true
    }
  ],
  "returnType": {
    "rawType": "{}",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "size": {
    "characters": 801,
    "lines": 46,
    "bytes": 801,
    "bytesPerCharacter": 1,
    "charactersPerLine": 17,
    "linesPerFile": 46,
    "numberOfFiles": 1
  },
  "rawText": "\n\nfunction getChunkEnd(buf: Buffer, chunkEnd: number) {\n  // If it's the end, just return.\n  if (chunkEnd === buf.length) {\n    return chunkEnd;\n  }\n\n  let index = chunkEnd - 3;\n\n  if (index >= 0) {\n    if (isFirstByteOf4ByteChar(buf[index])) {\n      return chunkEnd + 1;\n    }\n  }\n\n  index = chunkEnd - 2;\n\n  if (index >= 0) {\n    if (isFirstByteOf4ByteChar(buf[index])) {\n      return chunkEnd + 2;\n    }\n\n    if (isFirstByteOf3ByteChar(buf[index])) {\n      return chunkEnd + 1;\n    }\n  }\n\n  index = chunkEnd - 1;\n\n  if (index >= 0) {\n    if (isFirstByteOf4ByteChar(buf[index])) {\n      return chunkEnd + 3;\n    }\n\n    if (isFirstByteOf3ByteChar(buf[index])) {\n      return chunkEnd + 2;\n    }\n\n    if (isFirstByteOf2ByteChar(buf[index])) {\n      return chunkEnd + 1;\n    }\n  }\n\n  return chunkEnd;\n}",
  "maxIndentationDepth": 3,
  "id": "wmflncsylwssmeqsutwtnalz"
}