"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.mergeMarkdownParse=void 0;var js_util_1=require("js-util"),convert_case_1=require("convert-case"),markdown_reader_functions_1=require("markdown-reader-functions"),parsing_1=require("./parsing"),markdown_parse_js_1=require("markdown-parse-js"),mergeMarkdownParse=function(e,r){var a=(0,js_util_1.mergeObjectsArray)(e.map((function(e){return e.parameters}))),n=e.map((function(e){return{children:(0,parsing_1.upMarkdownChunkLevelRecursively)(e.content),level:1,content:void 0,title:e.fileName?(0,convert_case_1.humanCase)((0,markdown_reader_functions_1.removeExtensionsFromPath)(e.fileName)):void 0}}));return{merged:{parameters:a,raw:(0,parsing_1.markdownChunksToMarkdownStringRecursive)(n),content:n,fileName:r},outline:e.map((function(e){if(e.fileName){var r=(0,convert_case_1.humanCase)(e.fileName);return{title:r,
// NB: because the title in the markdownparse is humancase, we need to slugify that to get the hashtagpath
hashtagPath:(0,markdown_parse_js_1.getImplicitId)(r)}}})).filter(js_util_1.notEmpty)}};exports.mergeMarkdownParse=mergeMarkdownParse;
//# sourceMappingURL=merge.js.map