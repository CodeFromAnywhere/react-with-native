{
  "createdAt": 1667634414246,
  "updatedAt": 1667634414246,
  "deletedAt": 0,
  "createdFirstAt": 1667634414246,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getSrcRelativeFileId.ts",
  "commentsInside": [],
  "rawText": " (operationRelativePath: string) => {\n  const srcRelativePath = operationRelativePath.replace(\"src/\", \"\");\n  const parts = srcRelativePath.split(\".\");\n  // remove the last one\n  parts.pop();\n  const srcRelativeFileId = parts.join(\".\");\n\n  const finalId = srcRelativeFileId.startsWith(\"/\")\n    ? srcRelativeFileId.substring(1)\n    : srcRelativeFileId;\n  return finalId;\n}",
  "name": "getSrcRelativeFileId",
  "slug": "get-src-relative-file-id",
  "parameters": [
    {
      "name": "operationRelativePath",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    }
  ],
  "description": "returns a file id (path without extension) relative to the src folder of an operation\n\ne.g. \"general\" for src/general.ts\n\nNB: assumes all src is in the src folder\n\nNB: removes \"/\" in the beginning, if found",
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 576,
    "lines": 18,
    "bytes": 576,
    "bytesPerCharacter": 1,
    "charactersPerLine": 32,
    "linesPerFile": 18,
    "numberOfFiles": 1
  },
  "id": "pkfpzgqwozmleysozzbbsiaz"
}