{
  "createdAt": 1669055053508,
  "updatedAt": 1669055053508,
  "deletedAt": 0,
  "createdFirstAt": 1669055053508,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/getOperationClassification.ts",
  "commentsInside": [],
  "rawText": " (\n  folderPath: string\n): OperationClassification | undefined => {\n  if (folderPath === undefined) {\n    console.log(\n      \"Incorrect type at getOperationClassification\"\n      // getOperationClassification.caller\n    );\n    process.exit(1);\n  }\n\n  if (!isOperation(folderPath)) {\n    return;\n  }\n\n  const packageJsonPath = path.join(folderPath, \"package.json\");\n  const packageJson = tryParseJson<Operation>(\n    fs.readFileSync(packageJsonPath, \"utf8\")\n  );\n\n  const tsconfigPath = path.join(folderPath, \"tsconfig.json\");\n\n  const tsconfig = readJsonFileSync<TsConfig>(tsconfigPath);\n\n  if (!tsconfig) return;\n\n  if (!packageJson || packageJson.workspaces) {\n    return;\n  }\n\n  const nextConfigPath = path.join(folderPath, \"next.config.js\");\n  const existsNextConfig = fs.existsSync(nextConfigPath);\n  const isNextApp = existsNextConfig;\n  if (isNextApp) return \"ui-web\";\n\n  const appJsonPath = path.join(folderPath, \"app.json\");\n  const existsAppJson = fs.existsSync(appJsonPath);\n  const isReactNativeApp = existsAppJson;\n  if (isReactNativeApp) return \"ui-app\";\n\n  const isTs = packageCompilesTs(packageJson);\n\n  const isEsm = tsconfigCompilesEsm(tsconfig);\n\n  const isUi = isUiOperation(tsconfig, packageJson);\n\n  const compileType = isEsm ? \"esm\" : isTs ? \"ts\" : \"cjs\";\n\n  if (isUi) {\n    return `ui-${compileType}`;\n  }\n\n  const hasTypesNode = hasDependency(packageJson, \"@types/node\");\n\n  if (hasTypesNode) {\n    if (packageJson.operation?.isNodeServer) {\n      return \"server-cjs\";\n    }\n    return `node-${compileType}`;\n  }\n\n  return compileType;\n}",
  "name": "getOperationClassification",
  "slug": "get-operation-classification",
  "parameters": [
    {
      "name": "folderPath",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    }
  ],
  "description": "Returns `OperationClassification` if it's an operation, or undefined if it's not\n\nNB: don't confuse this with `ImportClassification`",
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 1693,
    "lines": 65,
    "bytes": 1693,
    "bytesPerCharacter": 1,
    "charactersPerLine": 26,
    "linesPerFile": 65,
    "numberOfFiles": 1
  },
  "id": "aiqsuowpmkqptxekawkmyigp"
}