{
  "createdAt": 1669055063029,
  "updatedAt": 1669055063029,
  "deletedAt": 0,
  "createdFirstAt": 1669055063029,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/getPathsWithOperations.ts",
  "commentsInside": [],
  "rawText": " (config?: {\n  /**\n   * if given, this will be taken as the project root instead of the one that can be found automatically (useful for bundling or working with multiple projects that alter each other)\n   */\n  manualProjectRoot?: string;\n}): string[] => {\n  const rootPath = config?.manualProjectRoot || getProjectRoot();\n\n  if (!rootPath) {\n    log(`no rootpath found!`, { type: \"error\" });\n    process.exit(1);\n  }\n\n  if (isBundle(rootPath)) {\n    const pathsWithOperations = [\"apps\", \"packages\", \"modules\"]\n      .map((folderName) => path.join(rootPath, folderName))\n      .filter((fullPath) => fs.existsSync(fullPath));\n\n    if (pathsWithOperations.length === 0) {\n      log(`Couldn't find any operations in ${rootPath}`);\n      process.exit(1);\n    }\n\n    return pathsWithOperations;\n  }\n  const toolsPath = path.join(rootPath, \"operations/tools\");\n  const bundlesPath = path.join(rootPath, \"operations/niches\");\n  if (!fs.existsSync(toolsPath) || !fs.existsSync(bundlesPath)) {\n    log(`Couldn't find tools or bundles folder in ${rootPath}`);\n    process.exit(1);\n  }\n\n  return [toolsPath, bundlesPath];\n}",
  "name": "getPathsWithOperations",
  "slug": "get-paths-with-operations",
  "parameters": [
    {
      "name": "config",
      "schema": {
        "type": "object",
        "properties": {
          "manualProjectRoot": {
            "type": "string",
            "description": "if given, this will be taken as the project root instead of the one that can be found automatically (useful for bundling or working with multiple projects that alter each other)"
          }
        },
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [
          {
            "name": "manualProjectRoot",
            "required": false,
            "schema": {
              "fullComment": "if given, this will be taken as the project root instead of the one that can be found automatically (useful for bundling or working with multiple projects that alter each other)",
              "type": "string"
            }
          }
        ],
        "type": "object"
      },
      "required": false
    }
  ],
  "description": "returns an array of all (absolute) paths containing operations\n\nfor a bundled project, that means /apps, /packages, /modules\n\nfor the OS project, that means /operations/tools and /operations/niches",
  "returnType": {
    "rawType": "string[]",
    "typeDefinition": {
      "optional": false,
      "type": "array",
      "items": {
        "type": "string",
        "allOf": [
          {
            "transform": [
              "trim"
            ]
          },
          {
            "minLength": 1
          }
        ]
      }
    },
    "typeCoverage": 0,
    "isArray": true,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "items": [
        {
          "schema": {
            "type": "string"
          },
          "name": null
        }
      ],
      "type": "array"
    }
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 1308,
    "lines": 38,
    "bytes": 1308,
    "bytesPerCharacter": 1,
    "charactersPerLine": 34,
    "linesPerFile": 38,
    "numberOfFiles": 1
  },
  "id": "xzgftceylcertuuwckjbrvtz"
}