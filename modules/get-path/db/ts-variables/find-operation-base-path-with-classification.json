{
  "createdAt": 1667634398192,
  "updatedAt": 1667634398192,
  "deletedAt": 0,
  "createdFirstAt": 1667634398192,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "findOperationBasePathWithClassification",
  "slug": "find-operation-base-path-with-classification",
  "operationRelativeTypescriptFilePath": "src/findOperationBasePath.ts",
  "type": {
    "rawType": "(startPath: string) => { folderPath: string; classification: any; } | undefined",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(\n  startPath: string\n):\n  | { folderPath: string; classification: OperationClassification }\n  | undefined => {\n  // returns if `getOperationClassification` does not return `undefined`\n  const result = findFolderWhereMatch(startPath, getOperationClassification);\n\n  return result\n    ? { folderPath: result.folderPath, classification: result.matchResult! }\n    : undefined;\n}",
  "description": "recursive. goes up until it finds a folder that's an operation\n\nbecause it had to read the package.json anyway, it's returning the operation classification as well",
  "id": "ydqelvlzwowjqinnyyanfvgz"
}