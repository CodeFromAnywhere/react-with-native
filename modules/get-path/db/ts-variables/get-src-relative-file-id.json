{
  "createdAt": 1667634414401,
  "updatedAt": 1667634414401,
  "deletedAt": 0,
  "createdFirstAt": 1667634414401,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "getSrcRelativeFileId",
  "slug": "get-src-relative-file-id",
  "operationRelativeTypescriptFilePath": "src/getSrcRelativeFileId.ts",
  "type": {
    "rawType": "(operationRelativePath: string) => any",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(operationRelativePath: string) => {\n  const srcRelativePath = operationRelativePath.replace(\"src/\", \"\");\n  const parts = srcRelativePath.split(\".\");\n  // remove the last one\n  parts.pop();\n  const srcRelativeFileId = parts.join(\".\");\n\n  const finalId = srcRelativeFileId.startsWith(\"/\")\n    ? srcRelativeFileId.substring(1)\n    : srcRelativeFileId;\n  return finalId;\n}",
  "description": "returns a file id (path without extension) relative to the src folder of an operation\n\ne.g. \"general\" for src/general.ts\n\nNB: assumes all src is in the src folder\n\nNB: removes \"/\" in the beginning, if found",
  "id": "qinpriatlfzwkgtxmxankpid"
}