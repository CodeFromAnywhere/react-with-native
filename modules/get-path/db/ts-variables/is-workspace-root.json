{
  "createdAt": 1667634417688,
  "updatedAt": 1667634417688,
  "deletedAt": 0,
  "createdFirstAt": 1667634417688,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "isWorkspaceRoot",
  "slug": "is-workspace-root",
  "operationRelativeTypescriptFilePath": "src/isWorkspaceRoot.ts",
  "type": {
    "rawType": "(folderPath: string) => { isSensibleProject: boolean; isWorkspaceRoot: boolean; } | undefined",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(\n  folderPath: string\n): undefined | { isSensibleProject: boolean; isWorkspaceRoot: boolean } => {\n  const packageJsonPath = path.join(folderPath, \"package.json\");\n  const existsPackageJson = fs.existsSync(packageJsonPath);\n  if (!existsPackageJson) return;\n\n  const packageJson = tryParseJson<PackageJson>(\n    fs.readFileSync(packageJsonPath, \"utf8\")\n  );\n\n  const sensibleConfig: SensibleConfig | undefined = packageJson?.sensible;\n  const isSensibleProject = sensibleConfig?.isSensibleProject || false;\n\n  if (!packageJson || !packageJson.workspaces) {\n    return;\n  }\n\n  return { isSensibleProject, isWorkspaceRoot: true };\n}",
  "description": "simple sync function to check if a folder is the root of a workspace (not operation but a workspace)",
  "id": "riorhjwyrquijlcujgnwqesq"
}