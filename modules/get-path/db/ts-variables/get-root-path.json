{
  "createdAt": 1667634413034,
  "updatedAt": 1667634413034,
  "deletedAt": 0,
  "createdFirstAt": 1667634413034,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "getRootPath",
  "slug": "get-root-path",
  "operationRelativeTypescriptFilePath": "src/getRootPath.ts",
  "type": {
    "rawType": "(name?: any, config?: { manualProjectRoot?: string | undefined; } | undefined) => string | undefined",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(\n  /**\n   * if not specified, will return project root path\n   */\n  name?: OSRootFolder | ProjectRootFolder,\n  config?: { manualProjectRoot?: string }\n): string | undefined => {\n  const projectRootDir = config?.manualProjectRoot || getProjectRoot();\n  if (!projectRootDir) return;\n\n  if (!name) {\n    return projectRootDir;\n  }\n\n  if (isSensibleProject(projectRootDir)) {\n    if (projectRootFolders.concat(osRootFolders).includes(name)) {\n      const projectFolder =\n        name === \"text\"\n          ? \"docs\"\n          : name === \"operations\"\n          ? \"packages\"\n          : name === databaseFolderName\n          ? databaseFolderName\n          : null;\n      if (!projectFolder) {\n        console.log(\"get root path: This should never happen\", name);\n        return;\n      }\n\n      const folderPath = path.resolve(projectRootDir, projectFolder);\n      return folderPath;\n    }\n  }\n\n  // non-sensible projects\n\n  if (projectRootFolders.concat(osRootFolders).includes(name)) {\n    const folderPath = path.resolve(projectRootDir, name);\n    return folderPath;\n  }\n\n  console.log(\n    \"getRootPath: Should never happen, probably a wrong input was provided:\",\n    { name }\n  );\n\n  return;\n}",
  "description": "",
  "id": "uofcpjddulgwtldodjwyoxck"
}