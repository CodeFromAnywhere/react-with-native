[{"id":"pAGiFTsePtVMUeMh","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/control-fs/get-path/src/getRootPath.ts","srcFileId":"/getRootPath","operationFolderName":"get-path","relativeFilePathFromSrc":"/getRootPath.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/get-path","operationName":"get-path","comment":"can only be accessed in the OS","rawStatement":"export const osRootFoldersConst = [\n  \"assets\",\n  \"backups\",\n  \"bundled\",\n  \"bundles\",\n  \"distributions\",\n] as const;","parameters":{},"types":[],"firstLine":6,"lastLine":8},{"id":"pAGiFTsePtVMUeMh","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/control-fs/get-path/src/getRootPath.ts","srcFileId":"/getRootPath","operationFolderName":"get-path","relativeFilePathFromSrc":"/getRootPath.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/get-path","operationName":"get-path","comment":"can be accessed in projects as well as in the OS","rawStatement":"export const projectRootFoldersConst = [\n  \"text\",\n  \"tools\",\n  \"information\",\n] as const;","parameters":{},"types":[],"firstLine":17,"lastLine":19},{"id":"pAGiFTsePtVMUeMh","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/control-fs/get-path/src/getRootPath.ts","srcFileId":"/getRootPath","operationFolderName":"get-path","relativeFilePathFromSrc":"/getRootPath.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/get-path","operationName":"get-path","comment":"Gets project path, or a folder in the root that is convention","rawStatement":"export const getRootPath = (\n  /**\n   * if not specified, will return project root path\n   */\n  name?: OSRootFolder | ProjectRootFolder,\n  config?: { manualProjectRoot?: string }\n): string | undefined => {\n  const projectRootDir = config?.manualProjectRoot || getProjectRoot();\n  if (!projectRootDir) return;\n\n  if (!name) {\n    return projectRootDir;\n  }\n\n  if (isSensibleProject(projectRootDir)) {\n    if (projectRootFolders.includes(name)) {\n      const projectFolder =\n        name === \"text\"\n          ? \"docs\"\n          : name === \"tools\"\n          ? \"packages\"\n          : name === \"information\"\n          ? \"information\"\n          : null;\n      if (!projectFolder) {\n        console.log(\"get root path: This should never happen\");\n        return;\n      }\n\n      const folderPath = path.resolve(projectRootDir, projectFolder);\n      return folderPath;\n    } else {\n      console.log(\"This can't be done in a sensible project\");\n      return;\n    }\n  }\n\n  // non-sensible projects\n\n  if (projectRootFolders.concat(osRootFolders).includes(name)) {\n    const folderPath = path.resolve(projectRootDir, name);\n    return folderPath;\n  }\n\n  console.log(\n    \"getRootPath: Should never happen, probably a wrong input was provided:\",\n    { name }\n  );\n\n  return;\n};","parameters":{},"types":[],"firstLine":32,"lastLine":34}]