[{"id":"PacaxaMkqwUQkimE","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/control-fs/get-path/src/getRelativePath.ts","srcFileId":"/getRelativePath","operationFolderName":"get-path","relativeFilePathFromSrc":"/getRelativePath.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/get-path","operationName":"get-path","comment":"import { path } from \"./path\";","rawStatement":"import { getRootPath } from \"./getRootPath\";","parameters":{},"types":[],"firstLine":1,"lastLine":1},{"id":"PacaxaMkqwUQkimE","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/control-fs/get-path/src/getRelativePath.ts","srcFileId":"/getRelativePath","operationFolderName":"get-path","relativeFilePathFromSrc":"/getRelativePath.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/get-path","operationName":"get-path","comment":"gets the relative path from a specified root\n\nwill start with \"/\"","rawStatement":"export const getRelativePath = (\n  absolutePath: string,\n  relativeFrom: \"project-root\"\n) => {\n  const rootPath =\n    relativeFrom === \"project-root\" ? getRootPath() : getRootPath();\n\n  if (!rootPath) return;\n\n  const relativePath = absolutePath.replace(rootPath, \"\");\n\n  return relativePath;\n};","parameters":{},"types":[],"firstLine":2,"lastLine":6}]