[{"id":"uKVVbGvOajLluyUE","commentsInside":[],"rawText":" (\n  /**\n   * if not specified, will return project root path\n   */\n  name?: OSRootFolder | ProjectRootFolder,\n  config?: { manualProjectRoot?: string }\n): string | undefined => {\n  const projectRootDir = config?.manualProjectRoot || getProjectRoot();\n  if (!projectRootDir) return;\n\n  if (!name) {\n    return projectRootDir;\n  }\n\n  if (isSensibleProject(projectRootDir)) {\n    if (projectRootFolders.includes(name)) {\n      const projectFolder =\n        name === \"text\"\n          ? \"docs\"\n          : name === \"tools\"\n          ? \"packages\"\n          : name === \"information\"\n          ? \"information\"\n          : null;\n      if (!projectFolder) {\n        console.log(\"get root path: This should never happen\");\n        return;\n      }\n\n      const folderPath = path.resolve(projectRootDir, projectFolder);\n      return folderPath;\n    } else {\n      console.log(\"This can't be done in a sensible project\");\n      return;\n    }\n  }\n\n  // non-sensible projects\n\n  if (projectRootFolders.concat(osRootFolders).includes(name)) {\n    const folderPath = path.resolve(projectRootDir, name);\n    return folderPath;\n  }\n\n  console.log(\n    \"getRootPath: Should never happen, probably a wrong input was provided:\",\n    { name }\n  );\n\n  return;\n}","name":"getRootPath","slug":"get-root-path","parameters":[{"name":"name","schema":{"anyOf":[{"$ref":"#/definitions/OSRootFolder"},{"$ref":"#/definitions/ProjectRootFolder"}],"description":"if not specified, will return project root path"},"simplifiedSchema":{"description":"if not specified, will return project root path","properties":[],"type":"object"},"required":false},{"name":"config","schema":{"type":"object","properties":{"manualProjectRoot":{"type":"string"}},"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"manualProjectRoot","required":false,"schema":{"type":"string"}}],"type":"object"},"required":false}],"description":"Gets project path, or a folder in the root that is convention","returnType":{"rawType":"string | undefined","typeDefinition":{"optional":true,"type":"string","allOf":[{"transform":["trim"]},{"minLength":1}]},"typeCoverage":0,"isArray":false,"isEnum":false,"isObject":false,"isPrimitive":false,"isEnumLiteral":false,"simplifiedSchema":{"type":"string"}},"maxIndentationDepth":5,"relativePathFromProjectRoot":"/tools/control-fs/get-path/src/getRootPath.ts","srcFileId":"/getRootPath","operationFolderName":"get-path","relativeFilePathFromSrc":"/getRootPath.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/get-path","operationName":"get-path","size":{"characters":1298,"lines":51,"bytes":1298,"bytesPerCharacter":1,"charactersPerfLine":25.45098039215686,"linesPerFile":51,"numberOfFiles":1}}]