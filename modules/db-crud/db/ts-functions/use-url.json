{
  "createdAt": 1670528962364,
  "updatedAt": 1670528962364,
  "deletedAt": 0,
  "createdFirstAt": 1670528962364,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/useUrl.ts",
  "commentsInside": [],
  "rawText": " <T extends keyof typeof queryStore>(queryKey: T) => {\n  /**\n   * Here you can define your global storages that can be present in any URL\n   *\n   * Make sure you use the CustomUrlConfig type\n   */\n  const queryStore = {\n    path: useCustomUrlStore<string | undefined>(\"path\", { type: \"string\" }),\n    name: useCustomUrlStore<string | undefined>(\"name\", { type: \"string\" }),\n    type: useCustomUrlStore<string | undefined>(\"type\", { type: \"string\" }),\n\n    // for db page\n    slug: useCustomUrlStore<string | undefined>(\"slug\", { type: \"string\" }),\n    id: useCustomUrlStore<string | undefined>(\"id\", { type: \"string\" }),\n  };\n\n  return queryStore[queryKey];\n}",
  "name": "useUrl",
  "slug": "use-url",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "[string | undefined, (newValue: string | undefined) => Promise<boolean>]",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 659,
    "lines": 18,
    "bytes": 659,
    "bytesPerCharacter": 1,
    "charactersPerLine": 37,
    "linesPerFile": 18,
    "numberOfFiles": 1
  },
  "id": "opyfmwkekmjfxcrworupdlzr"
}