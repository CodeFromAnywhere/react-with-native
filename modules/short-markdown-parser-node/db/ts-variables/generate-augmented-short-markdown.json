{
  "createdAt": 1670216329172,
  "updatedAt": 1670216329172,
  "deletedAt": 0,
  "createdFirstAt": 1670216329172,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "generateAugmentedShortMarkdown",
  "slug": "generate-augmented-short-markdown",
  "operationRelativeTypescriptFilePath": "src/generateAugmentedShortMarkdown.ts",
  "type": {
    "rawType": "(projectRelativeMarkdownFilePath: string) => unknown",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  projectRelativeMarkdownFilePath: string\n) => {\n  const projectRoot = getProjectRoot();\n  if (!projectRoot) return;\n\n  const parse = await readMarkdownFile(\n    path.join(projectRoot, projectRelativeMarkdownFilePath)\n  );\n\n  if (!parse) return;\n\n  const shortMarkdown = markdownParseToShortMarkdown(parse);\n\n  if (!shortMarkdown) return;\n\n  const augmentedShortMarkdown = await augmentShortMarkdown(\n    shortMarkdown,\n    projectRelativeMarkdownFilePath\n  );\n\n  return augmentedShortMarkdown;\n}",
  "description": "The first step is to ensure that this would actually work. It needs to generate the MP3s and refer to them correctly in the file.",
  "id": "velbgnnefjfbsozsotrecpuz"
}