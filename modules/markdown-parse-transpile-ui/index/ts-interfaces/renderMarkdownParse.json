[{"id":"EPuyxbyVaYFpdEmz","name":"NamedParameters<typeof renderMarkdownContent>","slug":"named-parameters-<typeof-render-markdown-content->","relativePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui/src/renderMarkdownParse.tsx","srcFileId":"/renderMarkdownParse","operationFolderName":"markdown-parse-transpile-ui","relativeFilePathFromSrc":"/renderMarkdownParse.tsx","relativeOperationBasePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui","operationName":"markdown-parse-transpile-ui","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"content":{"type":"string"},"config":{"type":"object","properties":{"big":{"type":"boolean"}},"additionalProperties":false}},"required":["content"],"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"content","required":true,"schema":{"type":"string"}},{"name":"config","required":false,"schema":{"properties":[{"name":"big","required":false,"schema":{"type":"boolean"}}],"type":"object"}}],"type":"object"},"typeCoverage":0,"rawType":"NamedParameters<typeof renderMarkdownContent>","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"TmNBcXTRYQqomgQC","name":"NamedParameters<typeof renderMarkdownTitle>","slug":"named-parameters-<typeof-render-markdown-title->","relativePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui/src/renderMarkdownParse.tsx","srcFileId":"/renderMarkdownParse","operationFolderName":"markdown-parse-transpile-ui","relativeFilePathFromSrc":"/renderMarkdownParse.tsx","relativeOperationBasePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui","operationName":"markdown-parse-transpile-ui","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"title":{"type":"string"},"level":{"type":"number"}},"required":["title","level"],"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"title","required":true,"schema":{"type":"string"}},{"name":"level","required":true,"schema":{"type":"number"}}],"type":"object"},"typeCoverage":0,"rawType":"NamedParameters<typeof renderMarkdownTitle>","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"RDQidApVbcFbsQHR","name":"NamedParameters<typeof renderMarkdownChunk>","slug":"named-parameters-<typeof-render-markdown-chunk->","relativePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui/src/renderMarkdownParse.tsx","srcFileId":"/renderMarkdownParse","operationFolderName":"markdown-parse-transpile-ui","relativeFilePathFromSrc":"/renderMarkdownParse.tsx","relativeOperationBasePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui","operationName":"markdown-parse-transpile-ui","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"chunk":{"$ref":"#/definitions/MarkdownChunk"}},"required":["chunk"],"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"chunk","required":true,"schema":{"properties":[{"name":"level","required":true,"schema":{"description":"0 is a paragraph 1-6 is h1 until h6","type":"number"}},{"name":"content","required":false,"schema":{"type":"string"}},{"name":"title","required":false,"schema":{"description":"NB: title can also be an empty string (\"\")","type":"string"}},{"name":"children","required":false,"schema":{"description":"all content until the next title. it's either a content array if there's any titles found, or a string[] if it's paragraphs","items":[{"schema":{"circularRefName":"MarkdownChunk","properties":[],"type":"object"},"name":"MarkdownChunk"}],"type":"array"}}],"type":"object"}}],"type":"object"},"typeCoverage":0,"rawType":"NamedParameters<typeof renderMarkdownChunk>","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"YgvxjezqEQuIjziz","name":"MarkdownChunk","slug":"markdown-chunk","relativePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui/src/renderMarkdownParse.tsx","srcFileId":"/renderMarkdownParse","operationFolderName":"markdown-parse-transpile-ui","relativeFilePathFromSrc":"/renderMarkdownParse.tsx","relativeOperationBasePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui","operationName":"markdown-parse-transpile-ui","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"level":{"$ref":"#/definitions/MarkdownContentLevel"},"content":{"type":"string"},"title":{"type":"string","description":"NB: title can also be an empty string (\"\")"},"children":{"type":"array","items":{"$ref":"#/definitions/MarkdownChunk"},"description":"all content until the next title. it's either a content array if there's any titles found, or a string[] if it's paragraphs"}},"required":["level"],"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"level","required":true,"schema":{"description":"0 is a paragraph 1-6 is h1 until h6","type":"number"}},{"name":"content","required":false,"schema":{"type":"string"}},{"name":"title","required":false,"schema":{"description":"NB: title can also be an empty string (\"\")","type":"string"}},{"name":"children","required":false,"schema":{"description":"all content until the next title. it's either a content array if there's any titles found, or a string[] if it's paragraphs","items":[{"schema":{"circularRefName":"MarkdownChunk","properties":[],"type":"object"},"name":"MarkdownChunk"}],"type":"array"}}],"type":"object"},"typeCoverage":0,"rawType":"MarkdownChunk","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"naXdpwatydVvymiR","name":"MarkdownContentLevel","slug":"markdown-content-level","relativePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui/src/renderMarkdownParse.tsx","srcFileId":"/renderMarkdownParse","operationFolderName":"markdown-parse-transpile-ui","relativeFilePathFromSrc":"/renderMarkdownParse.tsx","relativeOperationBasePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui","operationName":"markdown-parse-transpile-ui","description":"0 is a paragraph 1-6 is h1 until h6","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"number","description":"0 is a paragraph 1-6 is h1 until h6"},"simplifiedSchema":{"description":"0 is a paragraph 1-6 is h1 until h6","type":"number"},"typeCoverage":0,"rawType":"MarkdownContentLevel","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"TkOMSFyTRutRokTP","name":"NamedParameters<typeof renderMarkdownParse>","slug":"named-parameters-<typeof-render-markdown-parse->","relativePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui/src/renderMarkdownParse.tsx","srcFileId":"/renderMarkdownParse","operationFolderName":"markdown-parse-transpile-ui","relativeFilePathFromSrc":"/renderMarkdownParse.tsx","relativeOperationBasePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui","operationName":"markdown-parse-transpile-ui","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"markdownParse":{"$ref":"#/definitions/MarkdownParse"}},"required":["markdownParse"],"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"markdownParse","required":true,"schema":{"properties":[{"name":"fileName","required":false,"schema":{"description":"if available, this can be the filename of the markdown in this markdownparse. Can be used for things like merging","type":"string"}},{"name":"parameters","required":true,"schema":{"description":"TODO: either make a special category crud for the category model would be nice maybe (especially a backend that makes sure all references stay updated would be epic)","properties":[],"type":"object"}},{"name":"content","required":false,"schema":{"description":"structured content based on h1, h2, h3, etc (paragraphs, recursive)","items":[{"schema":{"properties":[{"name":"level","required":true,"schema":{"description":"0 is a paragraph 1-6 is h1 until h6","type":"number"}},{"name":"content","required":false,"schema":{"type":"string"}},{"name":"title","required":false,"schema":{"description":"NB: title can also be an empty string (\"\")","type":"string"}},{"name":"children","required":false,"schema":{"description":"all content until the next title. it's either a content array if there's any titles found, or a string[] if it's paragraphs","items":[{"schema":{"circularRefName":"MarkdownChunk","properties":[],"type":"object"},"name":"MarkdownChunk"}],"type":"array"}}],"type":"object"},"name":"MarkdownChunk"}],"type":"array"}},{"name":"raw","required":true,"schema":{"description":"raw markdown without frontmatter","type":"string"}}],"type":"object"}}],"type":"object"},"typeCoverage":0,"rawType":"NamedParameters<typeof renderMarkdownParse>","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"YfruEccXWDQslstA","name":"MarkdownParse","slug":"markdown-parse","relativePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui/src/renderMarkdownParse.tsx","srcFileId":"/renderMarkdownParse","operationFolderName":"markdown-parse-transpile-ui","relativeFilePathFromSrc":"/renderMarkdownParse.tsx","relativeOperationBasePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui","operationName":"markdown-parse-transpile-ui","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"fileName":{"type":"string","description":"if available, this can be the filename of the markdown in this markdownparse. Can be used for things like merging"},"parameters":{"$ref":"#/definitions/FrontMatter","description":"parameters found in frontmatter"},"content":{"type":"array","items":{"$ref":"#/definitions/MarkdownChunk"},"description":"structured content based on h1, h2, h3, etc (paragraphs, recursive)"},"raw":{"type":"string","description":"raw markdown without frontmatter"}},"required":["parameters","raw"],"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"fileName","required":false,"schema":{"description":"if available, this can be the filename of the markdown in this markdownparse. Can be used for things like merging","type":"string"}},{"name":"parameters","required":true,"schema":{"description":"TODO: either make a special category crud for the category model would be nice maybe (especially a backend that makes sure all references stay updated would be epic)","properties":[],"type":"object"}},{"name":"content","required":false,"schema":{"description":"structured content based on h1, h2, h3, etc (paragraphs, recursive)","items":[{"schema":{"properties":[{"name":"level","required":true,"schema":{"description":"0 is a paragraph 1-6 is h1 until h6","type":"number"}},{"name":"content","required":false,"schema":{"type":"string"}},{"name":"title","required":false,"schema":{"description":"NB: title can also be an empty string (\"\")","type":"string"}},{"name":"children","required":false,"schema":{"description":"all content until the next title. it's either a content array if there's any titles found, or a string[] if it's paragraphs","items":[{"schema":{"circularRefName":"MarkdownChunk","properties":[],"type":"object"},"name":"MarkdownChunk"}],"type":"array"}}],"type":"object"},"name":"MarkdownChunk"}],"type":"array"}},{"name":"raw","required":true,"schema":{"description":"raw markdown without frontmatter","type":"string"}}],"type":"object"},"typeCoverage":0,"rawType":"MarkdownParse","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"ZxCeHYNaDoiYBYWc","name":"FrontMatter","slug":"front-matter","relativePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui/src/renderMarkdownParse.tsx","srcFileId":"/renderMarkdownParse","operationFolderName":"markdown-parse-transpile-ui","relativeFilePathFromSrc":"/renderMarkdownParse.tsx","relativeOperationBasePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui","operationName":"markdown-parse-transpile-ui","description":"TODO: either make a special category crud for the category model would be nice maybe (especially a backend that makes sure all references stay updated would be epic)","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"number"},{"type":"null"},{"type":"boolean"},{"not":{}}]},"description":"TODO: either make a special category crud for the category model would be nice maybe (especially a backend that makes sure all references stay updated would be epic)"},"simplifiedSchema":{"description":"TODO: either make a special category crud for the category model would be nice maybe (especially a backend that makes sure all references stay updated would be epic)","properties":[],"type":"object"},"typeCoverage":0,"rawType":"FrontMatter","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}},{"id":"GNscPWWgINzqTUNF","name":"NamedParameters<typeof renderFrontMatter>","slug":"named-parameters-<typeof-render-front-matter->","relativePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui/src/renderMarkdownParse.tsx","srcFileId":"/renderMarkdownParse","operationFolderName":"markdown-parse-transpile-ui","relativeFilePathFromSrc":"/renderMarkdownParse.tsx","relativeOperationBasePathFromProjectRoot":"/tools/ui/react-with-native/recipes/markdown-parse-transpile-ui","operationName":"markdown-parse-transpile-ui","description":"","isDbModel":false,"commentsInside":[],"type":{"typeDefinition":{"type":"object","properties":{"parameters":{"$ref":"#/definitions/FrontMatter"},"config":{"type":"object","properties":{"renderSpacer":{"type":"boolean"}},"additionalProperties":false}},"required":["parameters"],"additionalProperties":false},"simplifiedSchema":{"properties":[{"name":"parameters","required":true,"schema":{"description":"TODO: either make a special category crud for the category model would be nice maybe (especially a backend that makes sure all references stay updated would be epic)","properties":[],"type":"object"}},{"name":"config","required":false,"schema":{"properties":[{"name":"renderSpacer","required":false,"schema":{"type":"boolean"}}],"type":"object"}}],"type":"object"},"typeCoverage":0,"rawType":"NamedParameters<typeof renderFrontMatter>","isArray":false,"isEnum":false,"isEnumLiteral":false,"isObject":false,"isPrimitive":false}}]