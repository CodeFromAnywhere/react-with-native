{
  "createdAt": 1668336556691,
  "updatedAt": 1668336556691,
  "deletedAt": 0,
  "createdFirstAt": 1668336556691,
  "publicAuthorization": [
    "read",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/pluralize.ts",
  "commentsInside": [],
  "rawText": " (parameterName: string) => {\n  return parameterName.concat(\"s\");\n}",
  "name": "pluralize",
  "slug": "pluralize",
  "parameters": [
    {
      "name": "parameterName",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    }
  ],
  "description": "KISS; fuck grammar\n\nIf we are going to apply grammar here, it becomes impossible to create typescript rules that can detect and convert plural/singular parameter names.\n\nTo pluralize any word we simply attach an \"s\" at the end",
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 1,
  "size": {
    "characters": 293,
    "lines": 7,
    "bytes": 293,
    "bytesPerCharacter": 1,
    "charactersPerLine": 42,
    "linesPerFile": 7,
    "numberOfFiles": 1
  },
  "id": "weopcyexebsiorqcutndbwsq"
}