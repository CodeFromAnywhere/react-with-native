{
  "createdAt": 1666264799248,
  "updatedAt": 1666264799248,
  "deletedAt": 0,
  "createdFirstAt": 1666264799248,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "pluralize",
  "slug": "pluralize",
  "operationRelativeTypescriptFilePath": "src/pluralize.ts",
  "type": {
    "rawType": "(parameterName: string) => any",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(parameterName: string) => {\n  return parameterName.concat(\"s\");\n}",
  "description": "KISS; fuck grammar\n\nIf we are going to apply grammar here, it becomes impossible to create typescript rules that can detect and convert plural/singular parameter names.\n\nTo pluralize any word we simply attach an \"s\" at the end",
  "id": "jhthnltbbodgyqgcnjavpbnu"
}