[
  {
    "createdAt": 1668331906259,
    "updatedAt": 1668331906259,
    "deletedAt": 0,
    "createdFirstAt": 1668331906259,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/getPackageSourcePaths.ts",
    "comment": "import { getTsConfig } from \"get-ts-config\";",
    "rawStatement": "import { explore } from \"k-explore\";",
    "parameters": {},
    "types": [],
    "firstLine": 3,
    "lastLine": 3,
    "id": "lzwmevapoysxrzebzcsrdwov"
  },
  {
    "createdAt": 1668331906259,
    "updatedAt": 1668331906259,
    "deletedAt": 0,
    "createdFirstAt": 1668331906259,
    "name": "Comment",
    "slug": "comment",
    "operationRelativeTypescriptFilePath": "src/getPackageSourcePaths.ts",
    "comment": "Returns an array of absolute file paths of (typescript) files in the src of your operation\n\nTODO: we need a way to explore these glob patterns inside of tsConfig.include.\nuntil then, just assume we use \"src\" as the only folder",
    "rawStatement": "export const getPackageSourcePaths = async ({\n  operationBasePath,\n  ignoreIndexFiles,\n  allTypes,\n}: {\n  operationBasePath: string;\n  ignoreIndexFiles?: boolean;\n  /**\n   * by default, only searches for ts and tsx files, if this is true, it will search for any type\n   */\n  allTypes?: boolean;\n}) => {\n  const filePaths = (\n    await explore({\n      basePath: path.join(operationBasePath, \"src\"),\n      extension: allTypes ? undefined : [\"ts\", \"tsx\"],\n      ignore: ignoreIndexFiles ? [\"index.ts\", \"index.tsx\"] : undefined,\n    })\n  ).map((x) => x.path);\n\n  return filePaths;\n};",
    "parameters": {},
    "types": [
      "todo"
    ],
    "firstLine": 5,
    "lastLine": 10,
    "id": "dgxzaqzxfhexpdvuchedhrjv"
  }
]