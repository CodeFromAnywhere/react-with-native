{
  "createdAt": 1667378790551,
  "updatedAt": 1667378790551,
  "deletedAt": 0,
  "createdFirstAt": 1667378790551,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "findAllMd",
  "slug": "find-all-md",
  "operationRelativeTypescriptFilePath": "src/deprecated.ts",
  "type": {
    "rawType": "(folderPath: string, onlyInCurrentFolder?: boolean | undefined) => import(\"/Users/king/King/operations/tools/control-fs/fs-util/src/types\").Markdown[]",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(\n  folderPath: Path,\n  onlyInCurrentFolder?: boolean\n): Markdown[] => {\n  //1. find all md file paths recursively in this folder, but don't look in node_modules\n\n  const fileFolderPaths = findFilesRecursively({\n    basePath: folderPath,\n    match: (_, extension) => extension === \"md\",\n    onlyInCurrentFolder,\n  });\n\n  const filePaths = fileFolderPaths.map((x) => x.path);\n  const mdArray = filePaths.map(parseMd);\n  return mdArray;\n}",
  "description": "DEPRECATED: `k-explore` can be used",
  "id": "fonxbiqwbgzqiyrtmotusvmh"
}