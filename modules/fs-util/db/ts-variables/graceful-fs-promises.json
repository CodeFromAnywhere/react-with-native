{
  "createdAt": 1667378796901,
  "updatedAt": 1667378796901,
  "deletedAt": 0,
  "createdFirstAt": 1667378796901,
  "classification": "const",
  "comments": [],
  "isExported": false,
  "name": "gracefulFsPromises",
  "slug": "graceful-fs-promises",
  "operationRelativeTypescriptFilePath": "src/fs.ts",
  "type": {
    "rawType": "{ readFileSync: typeof import(\"fs\").readFileSync; readdirSync: typeof import(\"fs\").readdirSync; writeFileSync: typeof import(\"fs\").writeFileSync; rmSync: typeof import(\"fs\").rmSync; existsSync: typeof import(\"fs\").existsSync; accessSync: typeof import(\"fs\").accessSync; cpSync: typeof import(\"fs\").cpSync; rename: typeof import(\"fs\").rename.__promisify__; mkdir: typeof import(\"fs\").mkdir.__promisify__; readFile: typeof import(\"fs\").readFile.__promisify__; writeFile: typeof import(\"fs\").writeFile.__promisify__; access: typeof import(\"fs\").access.__promisify__; watch: (arg1: import(\"fs\").PathLike) => Promise<TResult>; appendFile: typeof import(\"fs\").appendFile.__promisify__; chmod: typeof import(\"fs\").chmod.__promisify__; chown: typeof import(\"fs\").chown.__promisify__; copyFile: typeof import(\"fs\").copyFile.__promisify__; cp: (arg1: string | import(\"url\").URL, arg2: string | import(\"url\").URL) => Promise<void>; rm: typeof import(\"fs\").rm.__promisify__; readdir: typeof import(\"fs\").readdir.__promisify__; realpath: typeof import(\"fs\").realpath.__promisify__; stat: typeof import(\"fs\").stat.__promisify__; }",
    "typeDefinition": {
      "type": "object",
      "properties": {
        "readFileSync": {
          "type": "object",
          "properties": {}
        },
        "readdirSync": {
          "type": "object",
          "properties": {}
        },
        "writeFileSync": {
          "type": "object",
          "properties": {}
        },
        "rmSync": {
          "type": "object",
          "properties": {}
        },
        "existsSync": {
          "type": "object",
          "properties": {}
        },
        "accessSync": {
          "type": "object",
          "properties": {}
        },
        "cpSync": {
          "type": "object",
          "properties": {}
        },
        "rename": {
          "type": "object",
          "properties": {}
        },
        "mkdir": {
          "type": "object",
          "properties": {}
        },
        "readFile": {
          "type": "object",
          "properties": {}
        },
        "writeFile": {
          "type": "object",
          "properties": {}
        },
        "access": {
          "type": "object",
          "properties": {}
        },
        "watch": {
          "type": "object",
          "properties": {}
        },
        "appendFile": {
          "type": "object",
          "properties": {}
        },
        "chmod": {
          "type": "object",
          "properties": {}
        },
        "chown": {
          "type": "object",
          "properties": {}
        },
        "copyFile": {
          "type": "object",
          "properties": {}
        },
        "cp": {
          "type": "object",
          "properties": {}
        },
        "rm": {
          "type": "object",
          "properties": {}
        },
        "readdir": {
          "type": "object",
          "properties": {}
        },
        "realpath": {
          "type": "object",
          "properties": {}
        },
        "stat": {
          "type": "object",
          "properties": {}
        }
      },
      "required": [
        "readFileSync",
        "readdirSync",
        "writeFileSync",
        "rmSync",
        "existsSync",
        "accessSync",
        "cpSync",
        "rename",
        "mkdir",
        "readFile",
        "writeFile",
        "access",
        "watch",
        "appendFile",
        "chmod",
        "chown",
        "copyFile",
        "cp",
        "rm",
        "readdir",
        "realpath",
        "stat"
      ],
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [
        {
          "name": "readFileSync",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "readdirSync",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "writeFileSync",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "rmSync",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "existsSync",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "accessSync",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "cpSync",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "rename",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "mkdir",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "readFile",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "writeFile",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "access",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "watch",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "appendFile",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "chmod",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "chown",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "copyFile",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "cp",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "rm",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "readdir",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "realpath",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "stat",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        }
      ],
      "type": "object"
    }
  },
  "value": "{\n  // sync, should be discouraged\n  readFileSync,\n  readdirSync,\n  writeFileSync,\n  rmSync,\n  existsSync,\n  accessSync,\n  cpSync,\n  // promisified stuff\n  rename,\n  mkdir,\n  readFile,\n  writeFile,\n  access,\n  watch,\n  appendFile,\n  chmod,\n  chown,\n  copyFile,\n  cp,\n  rm,\n  readdir,\n  realpath,\n  stat,\n}",
  "description": "",
  "id": "jequcdtjcozepdlojebljyfm"
}