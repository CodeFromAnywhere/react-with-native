{
  "createdAt": 1667378796351,
  "updatedAt": 1667378796351,
  "deletedAt": 0,
  "createdFirstAt": 1667378796351,
  "id": "fs",
  "name": "Fs",
  "slug": "fs",
  "operationRelativeTypescriptFilePath": "src/fs.ts",
  "hasGeneric": false,
  "isExported": true,
  "rawText": "\n\n/**\n * all handy Fs types\n */\nexport type Fs = {\n  PathLike: PathLike;\n  Stats: Stats;\n  Dir: Dir;\n  Dirent: Dirent;\n};",
  "extensions": [],
  "isOperationIndex": false,
  "description": "all handy Fs types",
  "isDbModel": false,
  "commentsInside": [],
  "type": {
    "typeDefinition": {
      "type": "object",
      "properties": {
        "PathLike": {
          "$ref": "#/definitions/PathLike"
        },
        "Stats": {
          "$ref": "#/definitions/Stats"
        },
        "Dir": {
          "$ref": "#/definitions/Dir"
        },
        "Dirent": {
          "$ref": "#/definitions/Dirent"
        }
      },
      "required": [
        "PathLike",
        "Stats",
        "Dir",
        "Dirent"
      ],
      "additionalProperties": false,
      "description": "all handy Fs types"
    },
    "simplifiedSchema": {
      "fullComment": "all handy Fs types",
      "properties": [
        {
          "name": "PathLike",
          "required": true,
          "schema": {
            "fullComment": "Valid types for path values in \"fs\".",
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "Stats",
          "required": true,
          "schema": {
            "fullComment": "A `fs.Stats` object provides information about a file.\n\nObjects returned from  {@link  stat } ,  {@link  lstat }  and  {@link  fstat }  and their synchronous counterparts are of this type. If `bigint` in the `options` passed to those methods is true, the numeric values will be `bigint` instead of `number`, and the object will contain additional nanosecond-precision properties suffixed with `Ns`.\n\n```console Stats {   dev: 2114,   ino: 48064969,   mode: 33188,   nlink: 1,   uid: 85,   gid: 100,   rdev: 0,   size: 527,   blksize: 4096,   blocks: 8,   atimeMs: 1318289051000.1,   mtimeMs: 1318289051000.1,   ctimeMs: 1318289051000.1,   birthtimeMs: 1318289051000.1,   atime: Mon, 10 Oct 2011 23:24:11 GMT,   mtime: Mon, 10 Oct 2011 23:24:11 GMT,   ctime: Mon, 10 Oct 2011 23:24:11 GMT,   birthtime: Mon, 10 Oct 2011 23:24:11 GMT } ```\n\n`bigint` version:\n\n```console BigIntStats {   dev: 2114n,   ino: 48064969n,   mode: 33188n,   nlink: 1n,   uid: 85n,   gid: 100n,   rdev: 0n,   size: 527n,   blksize: 4096n,   blocks: 8n,   atimeMs: 1318289051000n,   mtimeMs: 1318289051000n,   ctimeMs: 1318289051000n,   birthtimeMs: 1318289051000n,   atimeNs: 1318289051000000000n,   mtimeNs: 1318289051000000000n,   ctimeNs: 1318289051000000000n,   birthtimeNs: 1318289051000000000n,   atime: Mon, 10 Oct 2011 23:24:11 GMT,   mtime: Mon, 10 Oct 2011 23:24:11 GMT,   ctime: Mon, 10 Oct 2011 23:24:11 GMT,   birthtime: Mon, 10 Oct 2011 23:24:11 GMT } ```",
            "properties": [
              {
                "name": "dev",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "ino",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "mode",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "nlink",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "uid",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "gid",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "rdev",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "size",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "blksize",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "blocks",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "atimeMs",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "mtimeMs",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "ctimeMs",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "birthtimeMs",
                "required": true,
                "schema": {
                  "type": "number"
                }
              },
              {
                "name": "atime",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "mtime",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "ctime",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "birthtime",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "type": "object"
          }
        },
        {
          "name": "Dir",
          "required": true,
          "schema": {
            "fullComment": "A class representing a directory stream.\n\nCreated by  {@link  opendir } ,  {@link  opendirSync } , or `fsPromises.opendir()`.\n\n```js import { opendir } from 'fs/promises';\n\ntry {   const dir = await opendir('./');   for await (const dirent of dir)     console.log(dirent.name); } catch (err) {   console.error(err); } ```\n\nWhen using the async iterator, the `fs.Dir` object will be automatically closed after the iterator exits.",
            "properties": [
              {
                "name": "path",
                "required": true,
                "schema": {
                  "fullComment": "The read-only path of this directory as was provided to  {@link  opendir } , {@link  opendirSync } , or `fsPromises.opendir()`.",
                  "type": "string"
                }
              }
            ],
            "type": "object"
          }
        },
        {
          "name": "Dirent",
          "required": true,
          "schema": {
            "fullComment": "A representation of a directory entry, which can be a file or a subdirectory within the directory, as returned by reading from an `fs.Dir`. The directory entry is a combination of the file name and file type pairs.\n\nAdditionally, when  {@link  readdir }  or  {@link  readdirSync }  is called with the `withFileTypes` option set to `true`, the resulting array is filled with `fs.Dirent` objects, rather than strings or `Buffer` s.",
            "properties": [
              {
                "name": "name",
                "required": true,
                "schema": {
                  "fullComment": "The file name that this `fs.Dirent` object refers to. The type of this value is determined by the `options.encoding` passed to  {@link  readdir }  or  {@link  readdirSync } .",
                  "type": "string"
                }
              }
            ],
            "type": "object"
          }
        }
      ],
      "type": "object"
    },
    "typeCoverage": 0,
    "rawType": "Fs",
    "isArray": false,
    "isEnum": false,
    "isEnumLiteral": false,
    "isObject": false,
    "isPrimitive": false
  }
}