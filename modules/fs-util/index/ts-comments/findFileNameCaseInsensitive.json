[{"id":"lUjDqRTCcNgjXNVF","name":"Comment","slug":"comment","relativePathFromProjectRoot":"/tools/control-fs/fs-util/src/findFileNameCaseInsensitive.ts","srcFileId":"/findFileNameCaseInsensitive","operationFolderName":"fs-util","relativeFilePathFromSrc":"/findFileNameCaseInsensitive.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/fs-util","operationName":"fs-util","comment":"returns a path of a fileName","rawStatement":"export const findFileNameCaseInsensitive = async (\n  folderPath: string,\n  /**\n   * fileName with extension\n   */\n  fileName: string\n): Promise<string | undefined> => {\n  if (!fs.existsSync(folderPath)) return;\n\n  const results = await fs.readdir(folderPath);\n\n  const foundPath = results\n    .map((fileName) => {\n      const absolutePath = path.join(folderPath, fileName);\n      return absolutePath;\n    })\n    .find((absolutePath) => {\n      const parsedPath = path.parse(absolutePath);\n      const isMatchCaseInsensitive =\n        parsedPath.base.toLowerCase() === fileName.toLowerCase();\n\n      return isMatchCaseInsensitive;\n    });\n\n  return foundPath;\n};","parameters":{},"types":[],"firstLine":4,"lastLine":6}]