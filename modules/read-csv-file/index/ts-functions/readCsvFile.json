[{"id":"aCtNpFTCSISwKekR","commentsInside":[],"rawText":" async <T extends CsvItemType>(\n  filePath: Path | undefined\n): Promise<T[] | null> => {\n  if (!filePath) return null;\n  // TODO: is this needed?\n  if (!fs.existsSync(filePath)) return null;\n\n  const readable = await canRead(filePath);\n  if (!readable) return null;\n  const fileString = await fs.readFile(filePath, \"utf8\");\n  if (!fileString) return null;\n\n  const parsed = tryParseCsv<T>(fileString);\n  return parsed;\n}","name":"readCsvFile","slug":"read-csv-file","parameters":[{"name":"filePath","schema":{"$ref":"#/definitions/Path"},"simplifiedSchema":{"description":"unlike PathLike, this is only a string\n\nFor now, we don't have a clear convention whether or not this string should be absolute or anything.","type":"string"},"required":false}],"description":"Reads and parses CSV file\n\nspecify a generic of what type of item the file contains an array of","returnType":{"rawType":"Promise<T[] | null>","typeCoverage":0,"isArray":false,"isEnum":false,"isObject":false,"isPrimitive":false,"isEnumLiteral":false},"maxIndentationDepth":1,"relativePathFromProjectRoot":"/tools/control-fs/read-csv-file/src/readCsvFile.ts","srcFileId":"/readCsvFile","operationFolderName":"read-csv-file","relativeFilePathFromSrc":"/readCsvFile.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/read-csv-file","operationName":"read-csv-file","size":{"characters":515,"lines":17,"bytes":515,"bytesPerCharacter":1,"charactersPerfLine":30.294117647058822,"linesPerFile":17,"numberOfFiles":1}},{"id":"nzCMptoEgsgIzICg","commentsInside":[],"rawText":" <T extends CsvItemType>(\n  filePath: Path\n): T[] | null => {\n  // TODO: is this needed?\n  if (!fs.existsSync(filePath)) return null;\n\n  const readable = canReadSync(filePath);\n  if (!readable) return null;\n  const fileString = fs.readFileSync(filePath, \"utf8\");\n  if (!fileString) return null;\n  const parsed = tryParseCsv<T>(fileString);\n  return parsed;\n}","name":"readCsvFileSync","slug":"read-csv-file-sync","parameters":[{"name":"filePath","schema":{"$ref":"#/definitions/Path"},"simplifiedSchema":{"description":"unlike PathLike, this is only a string\n\nFor now, we don't have a clear convention whether or not this string should be absolute or anything.","type":"string"},"required":true}],"description":"Reads and parses CSV file\n\nspecify a generic of what type of item the file contains an array of","returnType":{"rawType":"T[] | null","typeDefinition":{"optional":true,"type":"array","items":{}},"typeCoverage":0,"isArray":false,"isEnum":false,"isObject":false,"isPrimitive":false,"isEnumLiteral":false,"simplifiedSchema":{"items":[{"schema":{"properties":[],"type":"object"},"name":null}],"type":"array"}},"maxIndentationDepth":1,"relativePathFromProjectRoot":"/tools/control-fs/read-csv-file/src/readCsvFile.ts","srcFileId":"/readCsvFile","operationFolderName":"read-csv-file","relativeFilePathFromSrc":"/readCsvFile.ts","relativeOperationBasePathFromProjectRoot":"/tools/control-fs/read-csv-file","operationName":"read-csv-file","size":{"characters":453,"lines":15,"bytes":453,"bytesPerCharacter":1,"charactersPerfLine":30.2,"linesPerFile":15,"numberOfFiles":1}}]