{
  "createdAt": 1668332805876,
  "updatedAt": 1668332805876,
  "deletedAt": 0,
  "createdFirstAt": 1668332805876,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "getDbModelsFromOperations",
  "slug": "get-db-models-from-operations",
  "operationRelativeTypescriptFilePath": "src/dbUtil.ts",
  "type": {
    "rawType": "(operationNames: string[]) => Promise<import(\"/Users/king/King/operations/tools/types/code-types/build/TsInterface\").TsInterface[]>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  operationNames: string[]\n): Promise<TsInterface[]> => {\n  const dbModels = (await db.get(\"TsInterface\"))\n    .filter((x) => x.isDbModel)\n    .filter(onlyUnique2<TsInterface>((a, b) => a.name === b.name))\n    .filter((tsInterface) =>\n      filterInterfacesFromOperationNames(tsInterface, operationNames)\n    )\n    .filter(onlyUnique2<TsInterface>((a, b) => a.name === b.name));\n\n  return dbModels;\n}",
  "description": "",
  "id": "myrasoiwfgorzipuvxuxhyfo"
}