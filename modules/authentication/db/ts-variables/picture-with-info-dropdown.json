{
  "createdAt": 1669385490041,
  "updatedAt": 1669385490041,
  "deletedAt": 0,
  "createdFirstAt": 1669385490041,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "PictureWithInfoDropdown",
  "slug": "picture-with-info-dropdown",
  "operationRelativeTypescriptFilePath": "src/PictureWithInfoDropdown.tsx",
  "type": {
    "rawType": "<T extends unknown>(props: { current: import(\"/Users/king/King/operations/tools/user-interfaces/gui/wise/authentication/src/PictureWithInfo\").PictureWithInfo<T>; dropdown: import(\"/Users/king/King/operations/tools/user-interfaces/gui/wise/authentication/src/PictureWithInfo\").PictureWithInfo<T>[]; extraItems?: { onClick: () => void; text: string; }[] | undefined; isLoading: boolean; onClickCurrent?: (() => void) | undefined; onSelectDropdownItem: (selected: T | undefined) => void; }) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "<T extends unknown>(props: {\n  current: PictureWithInfo<T>;\n  dropdown: PictureWithInfo<T>[];\n  extraItems?: { onClick: () => void; text: string }[];\n  isLoading: boolean;\n  /**\n   * if not given, dropdown is opened\n   */\n  onClickCurrent?: () => void;\n  onSelectDropdownItem: (selected: PictureWithInfo<T>[\"data\"]) => void;\n}) => {\n  const {\n    current,\n    dropdown,\n    isLoading,\n    onClickCurrent,\n    onSelectDropdownItem,\n    extraItems,\n  } = props;\n\n  const router = useRouter();\n\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  const toggleDropdown = () => {\n    setShowDropdown(!showDropdown);\n  };\n\n  const pictureUrl =\n    current.pictureUrl ||\n    getAssetDirectlyApiUrl(\"public/frontend/default-profile-picture.png\");\n\n  return (\n    <Div className=\"relative\">\n      <Div\n        className=\"cursor-pointer flex flex-row justify-end pr-2 items-center gap gap-2\"\n        onClick={onClickCurrent || toggleDropdown}\n      >\n        {isLoading ? (\n          <FancyLoader />\n        ) : (\n          <Image\n            src={pictureUrl}\n            className=\"rounded-full w-8 h-8 border border-black p-0.5 bg-gray-400\"\n          />\n        )}\n        <P>{current.info}</P>\n      </Div>\n      <Div className=\"relative\">\n        {showDropdown ? (\n          <Div className=\"absolute top-0 right-0 bg-slate-400 min-w-[200px] rounded-md\">\n            <b>Your accounts</b>\n            {dropdown.map((item) => {\n              return (\n                <Div\n                  className={`${\n                    item.isCurrent\n                      ? \"bg-slate-600\"\n                      : \"hover:rounded-md hover:bg-slate-600\"\n                  } px-2 cursor-pointer py-1`}\n                  onClick={() => {\n                    if (item.isCurrent) return;\n                    if (item.url) {\n                      router.push(item.url);\n                      return;\n                    }\n                    toggleDropdown();\n                    onSelectDropdownItem(item.data);\n                  }}\n                >\n                  {item.info}\n                </Div>\n              );\n            })}\n\n            <Div className=\"h-4\" />\n            <b>More</b>\n\n            {extraItems?.map((item) => {\n              return (\n                <Div\n                  className=\"hover:bg-slate-600 hover:rounded-md text-xs cursor-pointer p-2\"\n                  onClick={() => {\n                    toggleDropdown();\n                    item.onClick();\n                  }}\n                >\n                  {item.text}\n                </Div>\n              );\n            })}\n          </Div>\n        ) : null}\n      </Div>\n    </Div>\n  );\n}",
  "description": "Dumb (presentational) component for a picture with info and a dropdown",
  "id": "avngvhmuwbjwgesiuqvrgodk"
}