{
  "createdAt": 1667588134786,
  "updatedAt": 1667588134786,
  "deletedAt": 0,
  "createdFirstAt": 1667588134786,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/old/ContextTextArea.tsx",
  "commentsInside": [],
  "rawText": " (props: EditorProps) => {\n  const { value, onChange, withContext, className } = props;\n\n  // EDITOR HOTKEYS\n  useHotkeys([], ({ code, metaKey, ctrlKey, altKey, shiftKey, key }) => {\n    if (code === \"Escape\") {\n      // go out of intellisense\n      alert?.(\"ESCAPE\");\n    }\n\n    if (ctrlKey && code === \"Space\") {\n      // intellisense on\n      alert?.(\"intellisense on\");\n    }\n    if (altKey && code === \"KeyZ\") {\n      if (shiftKey) {\n        alert?.(\"redo\");\n      } else {\n        alert?.(\"undo\");\n      }\n    }\n\n    if (metaKey && key === \"b\") {\n      alert?.(\"bold\");\n    }\n\n    if (metaKey && key === \"i\") {\n      alert?.(\"italic\");\n    }\n  });\n\n  return (\n    <textarea\n      className={className}\n      value={value}\n      // onKeyPress={(e) => {\n      //   console.log({ e });\n      // }}\n      // onCh\n      // onFocusCapture={(e) => {\n      //   const newText = e.target.value;\n      //   const positionIndex = e.target.selectionStart;\n\n      //   console.log({ newText, positionIndex });\n      //   const textEditingContext = getContext({\n      //     text: newText,\n      //     positionIndex,\n      //   });\n      //   withContext?.(textEditingContext);\n\n      //   onChange(newText);\n      // }}\n      onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        const newText = e.target.value;\n        const positionIndex = e.target.selectionStart;\n        const textEditingContext = getContext({\n          text: newText,\n          positionIndex,\n        });\n        withContext?.(textEditingContext);\n\n        onChange(newText);\n      }}\n    />\n  );\n}",
  "name": "ContextTextArea",
  "slug": "context-text-area",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "JSX.Element",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/JSX.Element"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 5,
  "size": {
    "characters": 1577,
    "lines": 66,
    "bytes": 1577,
    "bytesPerCharacter": 1,
    "charactersPerLine": 24,
    "linesPerFile": 66,
    "numberOfFiles": 1
  },
  "id": "anbfgpgjlblbgspofvwuglyr"
}