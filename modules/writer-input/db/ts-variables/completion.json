{
  "createdAt": 1667588128118,
  "updatedAt": 1667588128118,
  "deletedAt": 0,
  "createdFirstAt": 1667588128118,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "Completion",
  "slug": "completion",
  "operationRelativeTypescriptFilePath": "src/editors/autocomplete-components.tsx",
  "type": {
    "rawType": "(props: { augmentedWord: import(\"/Users/king/King/operations/tools/markdown-reader/markdown-reader-types/build/AugmentedWord\").AugmentedWord; augmentedWordObject?: import(\"/Users/king/King/operations/tools/util/js-util/build/createMappedObject\").MappedObject<import(\"/Users/king/King/operations/tools/markdown-reader/markdown-reader-types/build/AugmentedWord\").AugmentedWord> | undefined; }) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(props: {\n  augmentedWord: AugmentedWord;\n  augmentedWordObject?: MappedObject<AugmentedWord>;\n}) => {\n  const { augmentedWord, augmentedWordObject } = props;\n\n  const projectRelativeMarkdownFilePath =\n    augmentedWord.projectRelativeMarkdownSourcePath;\n  const projectRelativeBaseFolderPath = getFolderJs(\n    projectRelativeMarkdownFilePath\n  )!;\n  return (\n    <Div>\n      <Div className=\"flex flex-row justify-between\">\n        <P>{augmentedWord.word}</P>\n        <Div>(?)</Div>\n      </Div>\n      <P>\n        {augmentedWord.spoiler\n          ? renderMarkdownContent(augmentedWord.spoiler, {\n              projectRelativeMarkdownFilePath,\n              projectRelativeBaseFolderPath,\n              augmentedWordObject,\n              isDev,\n              isStatic: false,\n            })\n          : null}\n      </P>\n    </Div>\n  );\n}",
  "description": "",
  "id": "tkdnujhdwhfpsmergsvpqqme"
}