{
  "createdAt": 1667588124994,
  "updatedAt": 1667588124994,
  "deletedAt": 0,
  "createdFirstAt": 1667588124994,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "SubtextContainer",
  "slug": "subtext-container",
  "operationRelativeTypescriptFilePath": "src/editors/SubtextContainer.tsx",
  "type": {
    "rawType": "(props: { rawMarkdown: string; subtextConfig: import(\"/Users/king/King/operations/tools/writer/writer-types/build/types\").SubtextConfig; }) => JSX.Element | null",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(props: {\n  /**\n   * raw markdown that should be converted into a subtext\n   */\n  rawMarkdown: string;\n  subtextConfig: SubtextConfig;\n}) => {\n  const { rawMarkdown, subtextConfig } = props;\n\n  if (!subtextConfig.isEnabled) return null;\n  const subtext = getSubtext(rawMarkdown, subtextConfig);\n  return (\n    <div\n      contentEditable={false}\n      spellCheck={false}\n      autoCorrect=\"false\"\n      data-is-augmentation=\"true\"\n      style={{ fontSize: 8, backgroundColor: \"#CCC\", padding: 5 }}\n    >\n      {subtext}\n    </div>\n  );\n}",
  "description": "Returns a string with HTML for the subtext container, given you already have",
  "id": "mfqpmfrydtcbydxrswkoiets"
}