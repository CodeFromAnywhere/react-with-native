{
  "createdAt": 1667588110079,
  "updatedAt": 1667588110079,
  "deletedAt": 0,
  "createdFirstAt": 1667588110079,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "TitleContainer",
  "slug": "title-container",
  "operationRelativeTypescriptFilePath": "src/TitleContainer.tsx",
  "type": {
    "rawType": "({ title, children, buttons, }: { title?: string | undefined; children: any; buttons: import(\"/Users/king/King/operations/tools/interfaces/vui/vui-elements/labeled-button/build/LabeledButton\").LabeledButtonType[]; }) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "({\n  title,\n  children,\n  buttons,\n}: {\n  title?: string;\n  children: any;\n  buttons: LabeledButtonType[];\n}) => {\n  return (\n    <Div className=\"p-2 m-2 border rounded-xl border-gray-500\">\n      <Div className=\"flex flex-row justify-between items-center\">\n        {title ? <P className=\"text-3xl\">{title}</P> : <Div />}\n\n        <Div className=\"flex flex-row gap-3\">\n          {buttons.filter((x) => x.isEnabled !== false).map(LabeledButton)}\n        </Div>\n      </Div>\n\n      {children}\n    </Div>\n  );\n}",
  "description": "container for any index instance that needs to be rendered in the explore page",
  "id": "rsngkazbotihcoludxypjmrz"
}