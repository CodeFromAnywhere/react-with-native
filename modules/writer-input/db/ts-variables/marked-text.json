{
  "createdAt": 1667588119229,
  "updatedAt": 1667588119229,
  "deletedAt": 0,
  "createdFirstAt": 1667588119229,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "MarkedText",
  "slug": "marked-text",
  "operationRelativeTypescriptFilePath": "src/editors/MarkedText.tsx",
  "type": {
    "rawType": "import(\"/Users/king/King/operations/tools/writer/writer-input/src/editors/types\").ContentEditableRenderComponentType<import(\"/Users/king/King/operations/node_modules/@types/marked/index\").marked.Tokens.Code | import(\"/Users/king/King/operations/node_modules/@types/marked/index\").marked.Tokens.Table | import(\"/Users/king/King/operations/node_modules/@types/marked/index\").marked.Tokens.ListItem | import(\"/Users/king/King/operations/node_modules/@types/marked/index\").marked.Tokens.Text | import(\"/Users/king/King/operations/node_modules/@types/marked/index\").marked.Tokens.Escape | import(\"/Users/king/King/operations/node_modules/@types/marked/index\").marked.Tokens.Tag | import(\"/Users/king/King/operations/node_modules/@types/marked/index\").marked.Tokens.Strong | import(\"/Users/king/King/operations/node_modules/@types/marked/index\").marked.Tokens.Em>",
    "typeDefinition": {
      "type": "object",
      "properties": {
        "toMarkdownString": {
          "type": "object",
          "properties": {}
        },
        "exampleInputs": {
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "toMarkdownString",
        "exampleInputs"
      ],
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [
        {
          "name": "toMarkdownString",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "exampleInputs",
          "required": true,
          "schema": {
            "items": [
              {
                "schema": {
                  "properties": [],
                  "type": "object"
                },
                "name": null
              }
            ],
            "type": "array"
          }
        }
      ],
      "type": "object"
    }
  },
  "value": "(props) => {\n  const {\n    subwordConfig,\n    markdownFileConfig,\n    subtextConfig,\n    markedToken,\n    testModeEnabled,\n  } = props;\n\n  const sentences = markedToken.raw.split(\"\\n\");\n  return (\n    <div>\n      {sentences.map((sentence) => (\n        <div>\n          <SpannedSentence\n            sentence={sentence}\n            subwordConfig={subwordConfig}\n            markdownFileConfig={markdownFileConfig}\n            subtextConfig={subtextConfig}\n            testModeEnabled={testModeEnabled}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}",
  "description": "",
  "id": "ntwsuqrqrqrptxigrcbexcwm"
}