{
  "createdAt": 1668150643213,
  "updatedAt": 1668150643213,
  "deletedAt": 0,
  "createdFirstAt": 1668150643213,
  "publicAuthorization": [
    "read",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/util.ts",
  "commentsInside": [],
  "rawText": " (\n  symbol: Symbol,\n  sourceFile: SourceFile,\n  debug?: boolean\n): TypeSpecifier | undefined => {\n  const exportSpecifierNames = getExportSpecifierNames(symbol);\n\n  if (debug) console.log(exportSpecifierNames);\n\n  if (exportSpecifierNames.length > 0) {\n    // get the ImportSpecifier of this ExportSpecifier, and if one exists, recurse this function on it.\n\n    const importSpecifiers = getImportSpecifiersWithNames(\n      sourceFile,\n      exportSpecifierNames\n    );\n\n    if (importSpecifiers.length > 1) {\n      // NB: warn if there is more than one as that would be strange\n\n      log(\n        `More than one importsSpecifiers with that name: ${exportSpecifierNames.join(\n          \",\"\n        )} (imports: ${importSpecifiers\n          .map((x) => x.getName())\n          .join(\",\")})... file: ${sourceFile.getFilePath()}`,\n        {\n          type: \"warning\",\n        }\n      );\n    }\n\n    if (importSpecifiers.length > 0) {\n      return getTypeFromImportSpecifierRecursive(importSpecifiers[0], debug);\n    }\n\n    /* REmoved this.... seems that this will make it never do the default one\n      else {\n        if (debug) {\n          console.log(\n            \"Weird, we couldn't find the importspecifier for exportSpecifiers\"\n          );\n        }\n        return { type: undefined };\n      }\n      */\n  }\n\n  return getDefaultSymbolType(symbol, debug);\n}",
  "name": "getExportSymbolTypeRecursive",
  "slug": "get-export-symbol-type-recursive",
  "parameters": [],
  "description": "gets type of exportSymbols. recurses if it's an exportsymbol\n\nTODO: NB: exports that come from a destructured initialiser aren't found! fix it",
  "returnType": {
    "rawType": "import(\"/Users/king/King/operations/tools/typescript/get-imports-exports/src/util\").TypeSpecifier | undefined",
    "typeDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "type",
            "value"
          ],
          "x-enumNames": [
            "type",
            "value"
          ],
          "type": "string"
        },
        "hasGeneric": {
          "type": "boolean"
        }
      },
      "required": [
        "type"
      ],
      "optional": true
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [
        {
          "name": "type",
          "required": true,
          "schema": {
            "enum": [
              "type",
              "value"
            ],
            "type": "string"
          }
        },
        {
          "name": "hasGeneric",
          "required": false,
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "type": "object"
    }
  },
  "maxIndentationDepth": 6,
  "size": {
    "characters": 1499,
    "lines": 52,
    "bytes": 1499,
    "bytesPerCharacter": 1,
    "charactersPerLine": 29,
    "linesPerFile": 52,
    "numberOfFiles": 1
  },
  "id": "npqmyxredwalevmpfxwcuvhn"
}