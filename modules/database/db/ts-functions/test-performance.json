{
  "createdAt": 1668774172939,
  "updatedAt": 1668774172939,
  "deletedAt": 0,
  "createdFirstAt": 1668774172939,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/testPerformance.test.ts",
  "commentsInside": [],
  "rawText": " async () => {\n  const executionId = generateUniqueId();\n  const performance: (PerformanceItem | undefined)[] = [];\n  getNewPerformance(\"start\", executionId, true);\n\n  const deviceInclude: Include = {\n    referenceKey: \"personIds\",\n    include: { referenceKey: \"groupSlugs\" },\n  };\n  log(\"Devices with include\", { type: \"important\" });\n\n  const withInclude = await db.get(\"Device\", { include: deviceInclude });\n\n  log(\"Devices without include\", { type: \"important\" });\n\n  const withoutInclude = await db.get(\"Device\");\n\n  performance.push(\n    getNewPerformance(\n      \"testPerformance (2x get, 1x with double include)\",\n      executionId\n    )\n  );\n  cleanupTimer(executionId);\n  log(\"DONE\", { type: \"success\" });\n  console.log(performance);\n}",
  "name": "testPerformance",
  "slug": "test-performance",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 3,
  "size": {
    "characters": 744,
    "lines": 27,
    "bytes": 744,
    "bytesPerCharacter": 1,
    "charactersPerLine": 28,
    "linesPerFile": 27,
    "numberOfFiles": 1
  },
  "id": "kysrvhjdcjlmscthkcernpko"
}