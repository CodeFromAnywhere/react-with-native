{
  "createdAt": 1667818217759,
  "updatedAt": 1667818217759,
  "deletedAt": 0,
  "createdFirstAt": 1667818217759,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/getTodoPages.ts",
  "commentsInside": [],
  "rawText": " async (\n  projectRoot: string\n): Promise<MarkdownReaderPage[]> => {\n  const operationsPath = getRootPath(\"operations\");\n  if (!operationsPath) return [];\n\n  const todoFolderPaths = await findAllTodoFolderPaths(operationsPath, false);\n  const markdownReaderPages: MarkdownReaderPage[] =\n    await getMarkdownReaderPages({\n      projectRoot,\n      basePaths: todoFolderPaths,\n      mapQueryPath: (queryPath) => {\n        const almostPath = queryPath\n          .replaceAll(\"todo/\", \"\")\n          .replace(\"operations/\", \"todo/\");\n\n        return almostPath.startsWith(\"todo/\")\n          ? almostPath\n          : \"todo/\" + almostPath;\n      },\n    });\n\n  return markdownReaderPages;\n}",
  "name": "getTodoPages",
  "slug": "get-todo-pages",
  "parameters": [
    {
      "name": "projectRoot",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    }
  ],
  "description": "gets all todo pages as markdownreader pages",
  "returnType": {
    "rawType": "Promise<import(\"/Users/king/King/operations/tools/markdown-reader/markdown-reader-types/build/MarkdownReaderPage\").MarkdownReaderPage[]>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 5,
  "size": {
    "characters": 724,
    "lines": 24,
    "bytes": 724,
    "bytesPerCharacter": 1,
    "charactersPerLine": 30,
    "linesPerFile": 24,
    "numberOfFiles": 1
  },
  "id": "dwelkffqsuxgeteumkwoauug"
}