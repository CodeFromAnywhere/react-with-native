{
  "createdAt": 1666258915452,
  "updatedAt": 1666258915452,
  "deletedAt": 0,
  "createdFirstAt": 1666258915452,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "forAllFiles",
  "slug": "for-all-files",
  "operationRelativeTypescriptFilePath": "src/forAllFiles.ts",
  "type": {
    "rawType": "({ filePaths, callback, command, }: import(\"/Users/king/King/operations/tools/control-project/all/src/forAllFiles\").ForAllFilesConfig) => Promise<void>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async ({\n  filePaths,\n  callback,\n  command,\n}: ForAllFilesConfig): Promise<void> => {\n  const locationPromises = filePaths.map(async (p) => {\n    if (command) {\n      execSync(command, {\n        env: {\n          LOCATION: p,\n        },\n        cwd: getFolder(p),\n        encoding: \"utf8\",\n        stdio: \"inherit\",\n      });\n    }\n\n    if (callback) {\n      callback(p);\n    }\n  });\n\n  await Promise.all(locationPromises);\n\n  console.log(\"done!\");\n}",
  "description": "executes a command or callback for every file\n\nin commands, $LOCATION is provided as env variable, and command is executed in the dir of the file",
  "id": "szmpigmxpjkxbohrfonutxxf"
}