{
  "createdAt": 1670528669093,
  "updatedAt": 1670528669093,
  "deletedAt": 0,
  "createdFirstAt": 1670528669093,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "getUrlFromRelativeUrl",
  "slug": "get-url-from-relative-url",
  "operationRelativeTypescriptFilePath": "src/getUrlFromRelativeUrl.ts",
  "type": {
    "rawType": "(relativeUrl: string, relativeUrlStrategy: \"api\" | \"static\", projectRelativeBaseFolderPath: string, projectRelativeMarkdownFilePath: string) => string | undefined",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(\n  relativeUrl: string,\n  relativeUrlStrategy: \"api\" | \"static\",\n  projectRelativeBaseFolderPath: string,\n  projectRelativeMarkdownFilePath: string\n) => {\n  if (relativeUrlStrategy === \"static\")\n    return path.join(projectRelativeBaseFolderPath, relativeUrl);\n\n  const relativeUrlWithoutStart = relativeUrl.slice(2);\n\n  return getReferencedAssetApiUrl(\n    apiUrl,\n    projectRelativeMarkdownFilePath,\n    relativeUrlWithoutStart\n  );\n}",
  "description": "gets the renderable asset url from the relative url",
  "id": "wzbgfbkomxpxetxabcujkfzf"
}