{
  "createdAt": 1670528668875,
  "updatedAt": 1670528668875,
  "deletedAt": 0,
  "createdFirstAt": 1670528668875,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/getUrlFromRelativeUrl.ts",
  "commentsInside": [],
  "rawText": " (\n  relativeUrl: string,\n  relativeUrlStrategy: \"api\" | \"static\",\n  projectRelativeBaseFolderPath: string,\n  projectRelativeMarkdownFilePath: string\n) => {\n  if (relativeUrlStrategy === \"static\")\n    return path.join(projectRelativeBaseFolderPath, relativeUrl);\n\n  const relativeUrlWithoutStart = relativeUrl.slice(2);\n\n  return getReferencedAssetApiUrl(\n    apiUrl,\n    projectRelativeMarkdownFilePath,\n    relativeUrlWithoutStart\n  );\n}",
  "name": "getUrlFromRelativeUrl",
  "slug": "get-url-from-relative-url",
  "parameters": [
    {
      "name": "relativeUrl",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "relativeUrlStrategy",
      "schema": {
        "type": "string",
        "enum": [
          "api",
          "static"
        ]
      },
      "simplifiedSchema": {
        "enum": [
          "api",
          "static"
        ],
        "type": "string"
      },
      "required": true
    },
    {
      "name": "projectRelativeBaseFolderPath",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "projectRelativeMarkdownFilePath",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    }
  ],
  "description": "gets the renderable asset url from the relative url",
  "returnType": {
    "rawType": "string | undefined",
    "typeDefinition": {
      "optional": true,
      "type": "string",
      "allOf": [
        {
          "transform": [
            "trim"
          ]
        },
        {
          "minLength": 1
        }
      ]
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "type": "string"
    }
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 490,
    "lines": 17,
    "bytes": 490,
    "bytesPerCharacter": 1,
    "charactersPerLine": 29,
    "linesPerFile": 17,
    "numberOfFiles": 1
  },
  "id": "wtjchjyygmrurdkbkonkddfk"
}