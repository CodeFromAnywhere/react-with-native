{
  "createdAt": 1667634955543,
  "updatedAt": 1667634955543,
  "deletedAt": 0,
  "createdFirstAt": 1667634955543,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/MarkdownCodeblock.tsx",
  "commentsInside": [],
  "rawText": " (props: {\n  text: string;\n  extension?: string;\n  /**\n   * If set, this is the mode when minimised\n   */\n  minimalMode?: CodeblockMode;\n  /**\n   * If set, this is the mode when expanded\n   */\n  expandedMode?: CodeblockMode;\n  /**\n   * if true, by default it's expanded\n   */\n  isInitiallyExpanded?: boolean;\n  /**\n   * if true, mode cannot be changed\n   */\n  isModeStatic?: boolean;\n}) => {\n  const {\n    text,\n    extension,\n    expandedMode,\n    isInitiallyExpanded,\n    minimalMode,\n    isModeStatic,\n  } = props;\n\n  const [isExpanded, setIsExpanded] = useState(isInitiallyExpanded);\n\n  const mode = isExpanded\n    ? expandedMode || defaultExpandedMode\n    : minimalMode || defaultMinimalMode;\n\n  const realText =\n    mode === \"preview\"\n      ? text.length > 200\n        ? text.slice(0, 198) + \"..\"\n        : text\n      : text;\n\n  return (\n    <Div className=\"w-full\">\n      {isModeStatic ? null : (\n        <Div>\n          <ClickableIcon\n            onClick={() => {\n              setIsExpanded(!isExpanded);\n            }}\n            emoji={isExpanded ? \"➖ Minimise\" : \"➕ Expand\"}\n          />\n        </Div>\n      )}\n\n      <Div\n        className={\n          mode === \"scroll\"\n            ? \"overflow-y-auto h-80\"\n            : mode === \"preview\"\n            ? \"opacity-25 bg-black\"\n            : undefined\n        }\n      >\n        {renderMarkdownContent(\n          createCodeblockMarkdown(realText, extension || null),\n          // The config below is not needed since all that is renderedd is a codeblock, which doesn't need to render links etc.\n          {\n            projectRelativeBaseFolderPath: \"\",\n            projectRelativeMarkdownFilePath: \"\",\n          }\n        )}\n      </Div>\n    </Div>\n  );\n}",
  "name": "MarkdownCodeblock",
  "slug": "markdown-codeblock",
  "parameters": [
    {
      "name": "props",
      "schema": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "extension": {
            "type": "string"
          },
          "minimalMode": {
            "$ref": "#/definitions/CodeblockMode",
            "description": "If set, this is the mode when minimised"
          },
          "expandedMode": {
            "$ref": "#/definitions/CodeblockMode",
            "description": "If set, this is the mode when expanded"
          },
          "isInitiallyExpanded": {
            "type": "boolean",
            "description": "if true, by default it's expanded"
          },
          "isModeStatic": {
            "type": "boolean",
            "description": "if true, mode cannot be changed"
          }
        },
        "required": [
          "text"
        ],
        "additionalProperties": false
      },
      "simplifiedSchema": {
        "properties": [
          {
            "name": "text",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extension",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minimalMode",
            "required": false,
            "schema": {
              "enum": [
                "preview",
                "scroll",
                "full"
              ],
              "fullComment": "If set, this is the mode when minimised\n\n",
              "type": "string"
            }
          },
          {
            "name": "expandedMode",
            "required": false,
            "schema": {
              "enum": [
                "preview",
                "scroll",
                "full"
              ],
              "fullComment": "If set, this is the mode when expanded\n\n",
              "type": "string"
            }
          },
          {
            "name": "isInitiallyExpanded",
            "required": false,
            "schema": {
              "fullComment": "if true, by default it's expanded",
              "type": "boolean"
            }
          },
          {
            "name": "isModeStatic",
            "required": false,
            "schema": {
              "fullComment": "if true, mode cannot be changed",
              "type": "boolean"
            }
          }
        ],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "Renders a markdown codeblock with a text as content and an optional extension",
  "returnType": {
    "rawType": "JSX.Element",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/JSX.Element"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 7,
  "size": {
    "characters": 1795,
    "lines": 76,
    "bytes": 1799,
    "bytesPerCharacter": 1.0022284122562675,
    "charactersPerLine": 24,
    "linesPerFile": 76,
    "numberOfFiles": 1
  },
  "id": "vyqmbllghxgldxoepiogajiv"
}