{
  "createdAt": 1668833465070,
  "updatedAt": 1668833465070,
  "deletedAt": 0,
  "createdFirstAt": 1668833465070,
  "isApiExposed": true,
  "isExported": true,
  "groupAuthorization": {},
  "operationRelativeTypescriptFilePath": "src/useSelect.tsx",
  "commentsInside": [],
  "rawText": " <T extends unknown>(\n  items?: Item<T>[],\n  initialValue?: Item<T>,\n  /**\n   * Optionally you can do other things with the value as well, like setting it to a global store\n   */\n  withValue?: (value: Item<T> | undefined) => void\n): [\n  Component: () => JSX.Element,\n  value: Item<T> | null,\n  setValue: (value: Item<T> | null) => void\n] => {\n  const realItems = items || [];\n  const [value, setValue] = useState<Item<T> | null>(initialValue || null);\n\n  const Component = () => (\n    <Select\n      className=\"bg-transparent\"\n      title=\"Test\"\n      onChange={(v) => {\n        setValue(v);\n\n        if (v) {\n          withValue?.(v);\n        }\n      }}\n      value={value}\n      options={realItems}\n    />\n  );\n  return [Component, value, setValue];\n}",
  "name": "useSelect",
  "slug": "use-select",
  "parameters": [],
  "description": "Create a value selector in a single line of code, including its state!\n\n# **Usage**\n\n```ts\nconst [SelectView, view, setView] = useSelect(views);\n```",
  "returnType": {
    "rawType": "[Component: () => JSX.Element, value: import(\"/Users/king/King/operations/tools/user-interfaces/gui/react-with-native/react-with-native-select/src/types\").Item<T> | null, setValue: (value: import(\"/Users/king/King/operations/tools/user-interfaces/gui/react-with-native/react-with-native-select/src/types\").Item<T> | null) => void]",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 5,
  "size": {
    "characters": 900,
    "lines": 38,
    "bytes": 900,
    "bytesPerCharacter": 1,
    "charactersPerLine": 24,
    "linesPerFile": 38,
    "numberOfFiles": 1
  },
  "id": "nbytnjpcdxfnrzhnwmqtczqw"
}