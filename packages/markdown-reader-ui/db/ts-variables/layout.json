{
  "createdAt": 1668149580355,
  "updatedAt": 1668149580355,
  "deletedAt": 0,
  "createdFirstAt": 1668149580355,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "Layout",
  "slug": "layout",
  "operationRelativeTypescriptFilePath": "src/components/Layout.tsx",
  "type": {
    "rawType": "(props: { publicBundleConfig: any; pages: import(\"/Users/king/King/operations/tools/markdown-reader/markdown-reader-types/build/MarkdownReaderPage\").MarkdownReaderPage[]; children: any; augmentedWordObject?: import(\"/Users/king/King/operations/tools/util/js-util/build/createMappedObject\").MappedObject<import(\"/Users/king/King/operations/tools/markdown-reader/markdown-reader-types/build/AugmentedWord\").AugmentedWord> | undefined; }) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(props: {\n  publicBundleConfig: MarkdownReaderPageProps[\"publicBundleConfig\"];\n  pages: MarkdownReaderPage[];\n  children: any;\n  augmentedWordObject?: MappedObject<AugmentedWord>;\n}) => {\n  const { pages, children, augmentedWordObject, publicBundleConfig } = props;\n\n  const queryPaths = pages.filter((x) => x.isMenuItem).map((x) => x.queryPath);\n  const nestedPathObject = queryPathsArrayToNestedPathObject(queryPaths);\n  const menu = nestedPathObjectToNestedMenuRecursive(nestedPathObject);\n\n  return (\n    <Div>\n      <Header publicBundleConfig={publicBundleConfig} />\n\n      <MenuWrapper augmentedWordObject={augmentedWordObject} menu={menu}>\n        {children}\n      </MenuWrapper>\n    </Div>\n  );\n}",
  "description": "",
  "id": "lllrvifgiehgxxzdyupxceov"
}