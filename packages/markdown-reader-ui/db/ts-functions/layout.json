{
  "createdAt": 1668149579957,
  "updatedAt": 1668149579957,
  "deletedAt": 0,
  "createdFirstAt": 1668149579957,
  "publicAuthorization": [
    "read",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/components/Layout.tsx",
  "commentsInside": [],
  "rawText": " (props: {\n  publicBundleConfig: MarkdownReaderPageProps[\"publicBundleConfig\"];\n  pages: MarkdownReaderPage[];\n  children: any;\n  augmentedWordObject?: MappedObject<AugmentedWord>;\n}) => {\n  const { pages, children, augmentedWordObject, publicBundleConfig } = props;\n\n  const queryPaths = pages.filter((x) => x.isMenuItem).map((x) => x.queryPath);\n  const nestedPathObject = queryPathsArrayToNestedPathObject(queryPaths);\n  const menu = nestedPathObjectToNestedMenuRecursive(nestedPathObject);\n\n  return (\n    <Div>\n      <Header publicBundleConfig={publicBundleConfig} />\n\n      <MenuWrapper augmentedWordObject={augmentedWordObject} menu={menu}>\n        {children}\n      </MenuWrapper>\n    </Div>\n  );\n}",
  "name": "Layout",
  "slug": "layout",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "JSX.Element",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/JSX.Element"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 4,
  "size": {
    "characters": 705,
    "lines": 22,
    "bytes": 705,
    "bytesPerCharacter": 1,
    "charactersPerLine": 32,
    "linesPerFile": 22,
    "numberOfFiles": 1
  },
  "id": "dwnhifhkglbudcievrmxyltc"
}