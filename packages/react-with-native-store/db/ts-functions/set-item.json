{
  "createdAt": 1667635039744,
  "updatedAt": 1667635039744,
  "deletedAt": 0,
  "createdFirstAt": 1667635039744,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/storage.ts",
  "commentsInside": [],
  "rawText": " async (key: string, value: any) => {\n  if (typeof window === \"undefined\") {\n    return;\n  }\n  localStorage.setItem(key, JSON.stringify(value));\n}",
  "name": "setItem",
  "slug": "set-item",
  "parameters": [
    {
      "name": "key",
      "schema": {
        "type": "string"
      },
      "simplifiedSchema": {
        "type": "string"
      },
      "required": true
    },
    {
      "name": "value",
      "schema": {},
      "simplifiedSchema": {
        "properties": [],
        "type": "object"
      },
      "required": true
    }
  ],
  "description": "If you don't have access to the `useStore` hook, maybe because you're doing something outside of react... you can directly use the storage with javascript using this function\n\nBEWARE! Updating this won't update your react components!",
  "returnType": {
    "rawType": "any",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 2,
  "size": {
    "characters": 379,
    "lines": 8,
    "bytes": 379,
    "bytesPerCharacter": 1,
    "charactersPerLine": 47,
    "linesPerFile": 8,
    "numberOfFiles": 1
  },
  "id": "jnpktllzhgbrrygcxdksvuir"
}