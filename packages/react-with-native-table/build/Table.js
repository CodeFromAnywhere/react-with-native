"use strict";var __assign=this&&this.__assign||function(){return __assign=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var a in t=arguments[r])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},__assign.apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TableRow=exports.TableHeadItem=exports.Table=exports.getColumns=void 0;var jsx_runtime_1=require("react/jsx-runtime"),react_with_native_1=require("react-with-native"),convert_case_1=require("convert-case"),js_util_1=require("js-util"),schema_util_1=require("schema-util"),tdClassName="whitespace-nowrap py-4 pr-3 text-sm first-of-type:font-medium text-gray-500 dark:text-gray-200 first-of-type:text-gray-900 first-of-type:dark:text-gray-100 first-of-type:sm:pl-6 first-of-type:md:pl-0",getColumns=function(e,t,r){var n,a,s=function(){return r[0]?Object.keys(r[0]).map((function(e){var t=r[0][e];return["string","boolean","number","null"].includes(typeof t)?{name:(0,convert_case_1.humanCase)(e),objectParameterKey:e,presentationType:"text"}:null})).filter(js_util_1.notEmpty):[]};
/**
     * needed in case something goes wrong with the index
     */if(!t)return s();var i=null===(a=null===(n=t.find((function(t){return t.name===e})))||void 0===n?void 0:n.type.typeDefinition)||void 0===a?void 0:a.properties;return i?Object.keys(i).map((function(e){var t=i[e],r="boolean"!=typeof t?t:void 0;if(r&&!(0,js_util_1.makeArray)(r.type).find((function(e){return["object","array"].includes(e)})))return{name:(0,convert_case_1.humanCase)(e),objectParameterKey:e,presentationType:"text"}})).filter(js_util_1.notEmpty):s()};exports.getColumns=getColumns;var Table=function(e){var t=e.data,r=e.columns,n=e.renderExtraColumns,a=e.extraColumnsAtStart,s=e.shouldHighlightItem;return(0,jsx_runtime_1.jsx)(react_with_native_1.Div,__assign({className:"px-4 sm:px-6 lg:px-8"},{children:(0,jsx_runtime_1.jsx)(react_with_native_1.Div,__assign({className:"mt-8 flex flex-col"},{children:(0,jsx_runtime_1.jsx)(react_with_native_1.Div,__assign({className:"-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8"},{children:(0,jsx_runtime_1.jsx)(react_with_native_1.Div,__assign({className:"inline-block min-w-full py-2 align-middle md:px-6 lg:px-8"},{children:(0,jsx_runtime_1.jsxs)("table",__assign({className:"min-w-full divide-y divide-gray-300"},{children:[(0,jsx_runtime_1.jsxs)("thead",{children:[a?(0,jsx_runtime_1.jsx)(exports.TableHeadItem,{name:"",objectParameterKey:""}):null,r.map((function(e,t){
// NB: here we are destructuring column to provide all the props to a component
return(0,jsx_runtime_1.jsx)(exports.TableHeadItem,__assign({},e))})),n&&!a?(0,jsx_runtime_1.jsx)(exports.TableHeadItem,{objectParameterKey:"",name:""}):null]}),(0,jsx_runtime_1.jsx)("tbody",__assign({className:"divide-y divide-gray-200"},{children:t?// If data is undefined, we have to render the skelletonview
t.map((function(e,t){var i=null==s?void 0:s(e);return(0,jsx_runtime_1.jsx)(exports.TableRow,{shouldHighlight:i,row:e,columns:r,renderExtraColumns:n,extraColumnsAtStart:a},"row".concat(t))})):// Without data we are assuming it's still loading and show 10 skelletons, which are simply TableRow's without any data
[0,1,2,3,4,5,6,7,8,9].map((function(e,t){return(0,jsx_runtime_1.jsx)(exports.TableRow,{row:void 0,columns:r},"skeleton".concat(t))}))}))]}))}))}))}))}))};exports.Table=Table;var TableHeadItem=function(e){return(0,jsx_runtime_1.jsx)("th",__assign({scope:"col",className:"whitespace-nowrap py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100 sm:pl-6 md:pl-0"},{children:(0,jsx_runtime_1.jsx)(react_with_native_1.Div,{children:e.name})}))};exports.TableHeadItem=TableHeadItem;var Skeleton=function(){return(0,jsx_runtime_1.jsx)("td",__assign({className:tdClassName},{children:(0,jsx_runtime_1.jsx)("div",{className:"bg-gray-200 w-full p-2 animate-pulse rounded-lg h-5"})}))},renderColumn=function(e,t,r){if("text"===e.presentationType){var n=String(t[e.objectParameterKey]);
/**
         * This is a text item that presents just one string
         */return(0,jsx_runtime_1.jsx)("td",__assign({className:tdClassName},{children:n}))}if("referenceSingle"===e.presentationType){
// Any parameter with pattern xxxSlug or xxxId should link to that instance in the referred model (link to `db?model={model}#{id}`)
var a=t[e.objectParameterKey],s=(0,schema_util_1.getReferenceParameterInfo)(e.objectParameterKey);return(0,jsx_runtime_1.jsx)("td",__assign({className:tdClassName},{children:(0,jsx_runtime_1.jsx)("a",__assign({href:"db?model=".concat(s.interfaceName,"&").concat(s.keyInModel,"=").concat(a)},{children:a}))}))}if("referenceMultiple"===e.presentationType){
// Any parameter with pattern xxxSlugs or xxxIds should link to those instance in the referred model (link to `db?model={model}&xxx={id}`) for every instance
var i=t[e.objectParameterKey],l=(0,schema_util_1.getReferenceParameterInfo)(e.objectParameterKey);return(0,jsx_runtime_1.jsx)("td",__assign({className:tdClassName},{children:i.map((function(e){return(0,jsx_runtime_1.jsx)("a",__assign({href:"db?model=".concat(l.interfaceName,"&").concat(l.keyInModel,"=").concat(e)},{children:e}))}))}))}return(0,jsx_runtime_1.jsx)("td",__assign({className:tdClassName},{children:"Unknown Presentation Type"}))},TableRow=function(e){var t=e.row,r=e.columns,n=e.renderExtraColumns,a=e.extraColumnsAtStart,s=e.shouldHighlight;
/**
     * Check which presentation type is set for this column and return this component
     */return(0,jsx_runtime_1.jsxs)("tr",__assign({className:s?"bg-blue-300":void 0},{children:[a&&(0,jsx_runtime_1.jsx)("td",__assign({className:tdClassName},{children:null==n?void 0:n(t)})),r.map((function(e,r){return t?
// we can optionally have a custom presentation for any column
e.customPresentation?e.customPresentation(t):renderColumn(e,t,r):(0,jsx_runtime_1.jsx)(Skeleton,{})})),!a&&(0,jsx_runtime_1.jsx)("td",__assign({className:tdClassName},{children:null==n?void 0:n(t)}))]}))};exports.TableRow=TableRow;
//# sourceMappingURL=Table.js.map