{
  "createdAt": 1666261633572,
  "updatedAt": 1666261633572,
  "deletedAt": 0,
  "createdFirstAt": 1666261633572,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "TableRow",
  "slug": "table-row",
  "operationRelativeTypescriptFilePath": "src/Table.tsx",
  "type": {
    "rawType": "<T extends { [key: string]: any; } = any>({ row, columns, renderExtraColumns, extraColumnsAtStart, shouldHighlight, }: import(\"/Users/king/King/operations/tools/interfaces/vui/react-with-native/react-with-native-table/src/Table\").RowType<T>) => JSX.Element",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "<T extends { [key: string]: any } = any>({\n  row,\n  columns,\n  renderExtraColumns,\n  extraColumnsAtStart,\n  shouldHighlight,\n}: RowType<T>) => {\n  /**\n   * Check which presentation type is set for this column and return this component\n   */\n  return (\n    <tr className={shouldHighlight ? \"bg-blue-300\" : undefined}>\n      {extraColumnsAtStart && (\n        <td className={tdClassName}>{renderExtraColumns?.(row)}</td>\n      )}\n      {columns.map((column, index) => {\n        if (!row) {\n          return <Skeleton />;\n        }\n\n        // we can optionally have a custom presentation for any column\n        if (column.customPresentation) {\n          return column.customPresentation(row);\n        }\n\n        return renderColumn(column, row, index);\n      })}\n\n      {!extraColumnsAtStart && (\n        <td className={tdClassName}>{renderExtraColumns?.(row)}</td>\n      )}\n    </tr>\n  );\n}",
  "description": "",
  "id": "bhkpikbaunrivmktbgyrxbgm"
}