{
  "createdAt": 1666261553625,
  "updatedAt": 1666261553625,
  "deletedAt": 0,
  "createdFirstAt": 1666261553625,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "name": "useNavigation",
  "slug": "use-navigation",
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/useNavigation.ts",
  "commentsInside": [],
  "description": "",
  "parameters": [],
  "returnType": {
    "rawType": "{ addListener: () => void; canGoBack: () => boolean; dispatch: () => void; getParent: () => void; getState: () => void; goBack: () => void; isFocused: () => void; removeListener: () => void; reset: () => void; setOptions: () => void; setParams: () => void; navigate: (screen: string, params?: { [key: string]: any; } | undefined) => void; }",
    "typeDefinition": {
      "type": "object",
      "properties": {
        "addListener": {
          "type": "object",
          "properties": {}
        },
        "canGoBack": {
          "type": "object",
          "properties": {}
        },
        "dispatch": {
          "type": "object",
          "properties": {}
        },
        "getParent": {
          "type": "object",
          "properties": {}
        },
        "getState": {
          "type": "object",
          "properties": {}
        },
        "goBack": {
          "type": "object",
          "properties": {}
        },
        "isFocused": {
          "type": "object",
          "properties": {}
        },
        "removeListener": {
          "type": "object",
          "properties": {}
        },
        "reset": {
          "type": "object",
          "properties": {}
        },
        "setOptions": {
          "type": "object",
          "properties": {}
        },
        "setParams": {
          "type": "object",
          "properties": {}
        },
        "navigate": {
          "type": "object",
          "properties": {}
        }
      },
      "required": [
        "addListener",
        "canGoBack",
        "dispatch",
        "getParent",
        "getState",
        "goBack",
        "isFocused",
        "removeListener",
        "reset",
        "setOptions",
        "setParams",
        "navigate"
      ],
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [
        {
          "name": "addListener",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "canGoBack",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "dispatch",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "getParent",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "getState",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "goBack",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "isFocused",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "removeListener",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "reset",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "setOptions",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "setParams",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        },
        {
          "name": "navigate",
          "required": true,
          "schema": {
            "properties": [],
            "type": "object"
          }
        }
      ],
      "type": "object"
    }
  },
  "size": {
    "characters": 509,
    "lines": 25,
    "bytes": 509,
    "bytesPerCharacter": 1,
    "charactersPerLine": 20,
    "linesPerFile": 25,
    "numberOfFiles": 1
  },
  "rawText": "\n\nexport function useNavigation() {\n  const router = useRouter();\n\n  return {\n    addListener: () => {},\n    canGoBack: () => true,\n    dispatch: () => {},\n    getParent: () => {},\n    getState: () => {},\n    goBack: () => {\n      router.back();\n    },\n    isFocused: () => {},\n    removeListener: () => {},\n    reset: () => {},\n    setOptions: () => {},\n    setParams: () => {},\n\n    navigate: (screen: string, params?: { [key: string]: any }) => {\n      router.push(screen, { query: params });\n    },\n  };\n}",
  "maxIndentationDepth": 3,
  "id": "fktxtnmrbawlrkhnoxprzwql"
}