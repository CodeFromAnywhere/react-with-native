{
  "createdAt": 1666261554944,
  "updatedAt": 1666261554944,
  "deletedAt": 0,
  "createdFirstAt": 1666261554944,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "useRouter",
  "slug": "use-router",
  "operationRelativeTypescriptFilePath": "src/useRouter.native.ts",
  "type": {
    "rawType": "() => any",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "(): NextRouter => {\n  const navigation = useNavigation();\n\n  const push = async (route: any, options: any) => {\n    const realRoute = route === \"/\" ? \"index\" : route;\n    //@ts-ignore\n    navigation.navigate(realRoute, options?.query);\n    return true;\n  };\n\n  const route = \"\";\n\n  const replace = async (\n    url: NextURL,\n    as?: NextURL | undefined,\n    options?:\n      | {\n          shallow?: boolean;\n          locale?: string | false;\n          scroll?: boolean;\n        }\n      | undefined\n  ) => true;\n\n  const reload = () => {};\n  const back = () => navigation.goBack();\n\n  const prefetch = async (\n    url: string,\n    asPath?: string | undefined,\n    options?: PrefetchOptions | undefined\n  ) => {};\n  const events: MittEmitter<RouterEvent> = {\n    on: (type: RouterEvent, handler: () => void) => {},\n    off: () => {},\n    emit: () => {},\n  };\n\n  const beforePopState = (\n    cb: (state: {\n      url: string;\n      as: string;\n      options: TransitionOptions;\n    }) => boolean\n  ) => {};\n  return {\n    push,\n    route,\n    isLocaleDomain: true,\n    pathname: \"\",\n    query: {},\n    asPath: \"\",\n    isFallback: false,\n    basePath: \"\",\n    locale: \"\",\n    locales: [\"\"],\n    defaultLocale: \"\",\n    isReady: true,\n    isPreview: false,\n    replace,\n    reload,\n    back,\n    prefetch,\n    beforePopState,\n    events,\n  };\n}",
  "description": "",
  "id": "iwqgnrziwtntxcuzymssxagw"
}