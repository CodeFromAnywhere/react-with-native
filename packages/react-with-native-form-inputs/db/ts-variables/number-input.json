{
  "createdAt": 1666261458920,
  "updatedAt": 1666261458920,
  "deletedAt": 0,
  "createdFirstAt": 1666261458920,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "NumberInput",
  "slug": "number-input",
  "operationRelativeTypescriptFilePath": "src/number/number.tsx",
  "type": {
    "rawType": "import(\"/Users/king/King/operations/tools/interfaces/vui/react-with-native/react-with-native-form/build/general\").PluginComponent<import(\"/Users/king/King/operations/tools/interfaces/vui/react-with-native/react-with-native-form-inputs/src/number/number\").NumberInputType>",
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": false,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "value": "({\n  extra,\n  onChange,\n  value,\n  ...props\n}) => {\n  const stringifiedValue =\n    value === null || value === undefined ? \"\" : String(value);\n\n  const [numberStringValue, setNumberStringValue] = useState(stringifiedValue);\n\n  const newExtra: NumberInputType[\"extra\"] = { type: \"text\", ...extra };\n\n  return (\n    <TextInput\n      {...props}\n      value={numberStringValue}\n      onChange={(value) => {\n        setNumberStringValue(value);\n\n        if (isNumber(value)) {\n          const casted = castToNumber(value);\n          onChange(casted);\n        }\n      }}\n      extra={newExtra}\n    />\n  );\n}",
  "description": "",
  "id": "dwovwektisdhjplxwtsunqmu"
}