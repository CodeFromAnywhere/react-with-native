{
  "createdAt": 1666261467852,
  "updatedAt": 1666261467852,
  "deletedAt": 0,
  "createdFirstAt": 1666261467852,
  "publicAuthorization": [
    "read-docs",
    "search"
  ],
  "isApiExposed": false,
  "isPostApi": false,
  "isGetApi": false,
  "isExported": true,
  "operationRelativeTypescriptFilePath": "src/text/text.tsx",
  "commentsInside": [],
  "rawText": " ({\n  onChange,\n  value,\n  extra,\n  config,\n  errors,\n}) => {\n  config = config || {};\n  const hasError = errors && errors.length > 0;\n\n  const inputClassWithError = `my-2 ${UI.textInput}${\n    hasError\n      ? config.errorClassName\n        ? config.errorClassName\n        : \" border border-red-400\"\n      : \"\"\n  }`;\n\n  const onChangeText = (value: TextInputType[\"value\"]) => onChange(value);\n  const placeholder = extra?.placeholder;\n  const maxLength = extra?.maxLength;\n\n  return (\n    <Input\n      type={\n        extra?.type ? extra.type : extra?.isPassword ? \"password\" : undefined\n      }\n      className={inputClassWithError}\n      //why doesn't it get applied corectly?\n      style={{\n        padding: 5,\n        paddingTop: 8,\n        paddingBottom: 8,\n        marginTop: 5,\n        marginBottom: 5,\n      }}\n      value={value}\n      onChange={(event) => onChangeText(event.target.value)}\n      placeholder={placeholder}\n      maxLength={extra?.maxLength}\n      autoComplete={extra?.autoComplete}\n      required={extra?.required}\n      disabled={extra?.disabled}\n      native={{\n        value,\n        onChangeText,\n        placeholder,\n        maxLength,\n        secureTextEntry: extra?.isPassword,\n      }}\n    />\n  );\n}",
  "name": "TextInput",
  "slug": "text-input",
  "parameters": [],
  "description": "",
  "returnType": {
    "rawType": "JSX.Element",
    "typeDefinition": {
      "optional": false,
      "$ref": "#/definitions/JSX.Element"
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false
  },
  "maxIndentationDepth": 4,
  "size": {
    "characters": 1232,
    "lines": 53,
    "bytes": 1232,
    "bytesPerCharacter": 1,
    "charactersPerLine": 23,
    "linesPerFile": 53,
    "numberOfFiles": 1
  },
  "id": "rvrsulknghtnbvzxzzltniff"
}